// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1/license_service.proto

package io.stackrox.proto.api.v1;

public final class LicenseServiceOuterClass {
  private LicenseServiceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LicenseInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.LicenseInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.license.License license = 1;</code>
     */
    boolean hasLicense();
    /**
     * <code>.license.License license = 1;</code>
     */
    io.stackrox.proto.api.v1.LicenseOuterClass.License getLicense();
    /**
     * <code>.license.License license = 1;</code>
     */
    io.stackrox.proto.api.v1.LicenseOuterClass.LicenseOrBuilder getLicenseOrBuilder();

    /**
     * <code>.v1.LicenseInfo.Status status = 2;</code>
     */
    int getStatusValue();
    /**
     * <code>.v1.LicenseInfo.Status status = 2;</code>
     */
    io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status getStatus();

    /**
     * <code>string status_reason = 3;</code>
     */
    java.lang.String getStatusReason();
    /**
     * <code>string status_reason = 3;</code>
     */
    com.google.protobuf.ByteString
        getStatusReasonBytes();

    /**
     * <code>bool active = 4;</code>
     */
    boolean getActive();
  }
  /**
   * Protobuf type {@code v1.LicenseInfo}
   */
  public  static final class LicenseInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.LicenseInfo)
      LicenseInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LicenseInfo.newBuilder() to construct.
    private LicenseInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LicenseInfo() {
      status_ = 0;
      statusReason_ = "";
      active_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LicenseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.stackrox.proto.api.v1.LicenseOuterClass.License.Builder subBuilder = null;
              if (license_ != null) {
                subBuilder = license_.toBuilder();
              }
              license_ = input.readMessage(io.stackrox.proto.api.v1.LicenseOuterClass.License.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(license_);
                license_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              statusReason_ = s;
              break;
            }
            case 32: {

              active_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_LicenseInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_LicenseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code v1.LicenseInfo.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>VALID = 1;</code>
       */
      VALID(1),
      /**
       * <code>REVOKED = 2;</code>
       */
      REVOKED(2),
      /**
       * <code>NOT_YET_VALID = 3;</code>
       */
      NOT_YET_VALID(3),
      /**
       * <code>EXPIRED = 4;</code>
       */
      EXPIRED(4),
      /**
       * <code>OTHER = 5;</code>
       */
      OTHER(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>VALID = 1;</code>
       */
      public static final int VALID_VALUE = 1;
      /**
       * <code>REVOKED = 2;</code>
       */
      public static final int REVOKED_VALUE = 2;
      /**
       * <code>NOT_YET_VALID = 3;</code>
       */
      public static final int NOT_YET_VALID_VALUE = 3;
      /**
       * <code>EXPIRED = 4;</code>
       */
      public static final int EXPIRED_VALUE = 4;
      /**
       * <code>OTHER = 5;</code>
       */
      public static final int OTHER_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      public static Status forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return VALID;
          case 2: return REVOKED;
          case 3: return NOT_YET_VALID;
          case 4: return EXPIRED;
          case 5: return OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:v1.LicenseInfo.Status)
    }

    public static final int LICENSE_FIELD_NUMBER = 1;
    private io.stackrox.proto.api.v1.LicenseOuterClass.License license_;
    /**
     * <code>.license.License license = 1;</code>
     */
    public boolean hasLicense() {
      return license_ != null;
    }
    /**
     * <code>.license.License license = 1;</code>
     */
    public io.stackrox.proto.api.v1.LicenseOuterClass.License getLicense() {
      return license_ == null ? io.stackrox.proto.api.v1.LicenseOuterClass.License.getDefaultInstance() : license_;
    }
    /**
     * <code>.license.License license = 1;</code>
     */
    public io.stackrox.proto.api.v1.LicenseOuterClass.LicenseOrBuilder getLicenseOrBuilder() {
      return getLicense();
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>.v1.LicenseInfo.Status status = 2;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.v1.LicenseInfo.Status status = 2;</code>
     */
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status getStatus() {
      @SuppressWarnings("deprecation")
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status result = io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.valueOf(status_);
      return result == null ? io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.UNRECOGNIZED : result;
    }

    public static final int STATUS_REASON_FIELD_NUMBER = 3;
    private volatile java.lang.Object statusReason_;
    /**
     * <code>string status_reason = 3;</code>
     */
    public java.lang.String getStatusReason() {
      java.lang.Object ref = statusReason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statusReason_ = s;
        return s;
      }
    }
    /**
     * <code>string status_reason = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStatusReasonBytes() {
      java.lang.Object ref = statusReason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statusReason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVE_FIELD_NUMBER = 4;
    private boolean active_;
    /**
     * <code>bool active = 4;</code>
     */
    public boolean getActive() {
      return active_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (license_ != null) {
        output.writeMessage(1, getLicense());
      }
      if (status_ != io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.UNKNOWN.getNumber()) {
        output.writeEnum(2, status_);
      }
      if (!getStatusReasonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, statusReason_);
      }
      if (active_ != false) {
        output.writeBool(4, active_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (license_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLicense());
      }
      if (status_ != io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_);
      }
      if (!getStatusReasonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, statusReason_);
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, active_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo)) {
        return super.equals(obj);
      }
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo other = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo) obj;

      boolean result = true;
      result = result && (hasLicense() == other.hasLicense());
      if (hasLicense()) {
        result = result && getLicense()
            .equals(other.getLicense());
      }
      result = result && status_ == other.status_;
      result = result && getStatusReason()
          .equals(other.getStatusReason());
      result = result && (getActive()
          == other.getActive());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLicense()) {
        hash = (37 * hash) + LICENSE_FIELD_NUMBER;
        hash = (53 * hash) + getLicense().hashCode();
      }
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + STATUS_REASON_FIELD_NUMBER;
      hash = (53 * hash) + getStatusReason().hashCode();
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v1.LicenseInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.LicenseInfo)
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_LicenseInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_LicenseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder.class);
      }

      // Construct using io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (licenseBuilder_ == null) {
          license_ = null;
        } else {
          license_ = null;
          licenseBuilder_ = null;
        }
        status_ = 0;

        statusReason_ = "";

        active_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_LicenseInfo_descriptor;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getDefaultInstanceForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance();
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo build() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo buildPartial() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo result = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo(this);
        if (licenseBuilder_ == null) {
          result.license_ = license_;
        } else {
          result.license_ = licenseBuilder_.build();
        }
        result.status_ = status_;
        result.statusReason_ = statusReason_;
        result.active_ = active_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo) {
          return mergeFrom((io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo other) {
        if (other == io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance()) return this;
        if (other.hasLicense()) {
          mergeLicense(other.getLicense());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (!other.getStatusReason().isEmpty()) {
          statusReason_ = other.statusReason_;
          onChanged();
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.stackrox.proto.api.v1.LicenseOuterClass.License license_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.stackrox.proto.api.v1.LicenseOuterClass.License, io.stackrox.proto.api.v1.LicenseOuterClass.License.Builder, io.stackrox.proto.api.v1.LicenseOuterClass.LicenseOrBuilder> licenseBuilder_;
      /**
       * <code>.license.License license = 1;</code>
       */
      public boolean hasLicense() {
        return licenseBuilder_ != null || license_ != null;
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseOuterClass.License getLicense() {
        if (licenseBuilder_ == null) {
          return license_ == null ? io.stackrox.proto.api.v1.LicenseOuterClass.License.getDefaultInstance() : license_;
        } else {
          return licenseBuilder_.getMessage();
        }
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public Builder setLicense(io.stackrox.proto.api.v1.LicenseOuterClass.License value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          license_ = value;
          onChanged();
        } else {
          licenseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public Builder setLicense(
          io.stackrox.proto.api.v1.LicenseOuterClass.License.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          license_ = builderForValue.build();
          onChanged();
        } else {
          licenseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public Builder mergeLicense(io.stackrox.proto.api.v1.LicenseOuterClass.License value) {
        if (licenseBuilder_ == null) {
          if (license_ != null) {
            license_ =
              io.stackrox.proto.api.v1.LicenseOuterClass.License.newBuilder(license_).mergeFrom(value).buildPartial();
          } else {
            license_ = value;
          }
          onChanged();
        } else {
          licenseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public Builder clearLicense() {
        if (licenseBuilder_ == null) {
          license_ = null;
          onChanged();
        } else {
          license_ = null;
          licenseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseOuterClass.License.Builder getLicenseBuilder() {
        
        onChanged();
        return getLicenseFieldBuilder().getBuilder();
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseOuterClass.LicenseOrBuilder getLicenseOrBuilder() {
        if (licenseBuilder_ != null) {
          return licenseBuilder_.getMessageOrBuilder();
        } else {
          return license_ == null ?
              io.stackrox.proto.api.v1.LicenseOuterClass.License.getDefaultInstance() : license_;
        }
      }
      /**
       * <code>.license.License license = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.stackrox.proto.api.v1.LicenseOuterClass.License, io.stackrox.proto.api.v1.LicenseOuterClass.License.Builder, io.stackrox.proto.api.v1.LicenseOuterClass.LicenseOrBuilder> 
          getLicenseFieldBuilder() {
        if (licenseBuilder_ == null) {
          licenseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.stackrox.proto.api.v1.LicenseOuterClass.License, io.stackrox.proto.api.v1.LicenseOuterClass.License.Builder, io.stackrox.proto.api.v1.LicenseOuterClass.LicenseOrBuilder>(
                  getLicense(),
                  getParentForChildren(),
                  isClean());
          license_ = null;
        }
        return licenseBuilder_;
      }

      private int status_ = 0;
      /**
       * <code>.v1.LicenseInfo.Status status = 2;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.v1.LicenseInfo.Status status = 2;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.v1.LicenseInfo.Status status = 2;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status getStatus() {
        @SuppressWarnings("deprecation")
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status result = io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.valueOf(status_);
        return result == null ? io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.UNRECOGNIZED : result;
      }
      /**
       * <code>.v1.LicenseInfo.Status status = 2;</code>
       */
      public Builder setStatus(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.v1.LicenseInfo.Status status = 2;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object statusReason_ = "";
      /**
       * <code>string status_reason = 3;</code>
       */
      public java.lang.String getStatusReason() {
        java.lang.Object ref = statusReason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          statusReason_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string status_reason = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStatusReasonBytes() {
        java.lang.Object ref = statusReason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          statusReason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string status_reason = 3;</code>
       */
      public Builder setStatusReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        statusReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string status_reason = 3;</code>
       */
      public Builder clearStatusReason() {
        
        statusReason_ = getDefaultInstance().getStatusReason();
        onChanged();
        return this;
      }
      /**
       * <code>string status_reason = 3;</code>
       */
      public Builder setStatusReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        statusReason_ = value;
        onChanged();
        return this;
      }

      private boolean active_ ;
      /**
       * <code>bool active = 4;</code>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <code>bool active = 4;</code>
       */
      public Builder setActive(boolean value) {
        
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool active = 4;</code>
       */
      public Builder clearActive() {
        
        active_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.LicenseInfo)
    }

    // @@protoc_insertion_point(class_scope:v1.LicenseInfo)
    private static final io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo();
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LicenseInfo>
        PARSER = new com.google.protobuf.AbstractParser<LicenseInfo>() {
      @java.lang.Override
      public LicenseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LicenseInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LicenseInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LicenseInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddLicenseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.AddLicenseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string license_key = 1;</code>
     */
    java.lang.String getLicenseKey();
    /**
     * <code>string license_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getLicenseKeyBytes();

    /**
     * <pre>
     * Indicates whether the license represented by this key should be made the active license.
     * </pre>
     *
     * <code>bool activate = 2;</code>
     */
    boolean getActivate();
  }
  /**
   * Protobuf type {@code v1.AddLicenseRequest}
   */
  public  static final class AddLicenseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.AddLicenseRequest)
      AddLicenseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AddLicenseRequest.newBuilder() to construct.
    private AddLicenseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddLicenseRequest() {
      licenseKey_ = "";
      activate_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AddLicenseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              licenseKey_ = s;
              break;
            }
            case 16: {

              activate_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.Builder.class);
    }

    public static final int LICENSE_KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object licenseKey_;
    /**
     * <code>string license_key = 1;</code>
     */
    public java.lang.String getLicenseKey() {
      java.lang.Object ref = licenseKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        licenseKey_ = s;
        return s;
      }
    }
    /**
     * <code>string license_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLicenseKeyBytes() {
      java.lang.Object ref = licenseKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        licenseKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVATE_FIELD_NUMBER = 2;
    private boolean activate_;
    /**
     * <pre>
     * Indicates whether the license represented by this key should be made the active license.
     * </pre>
     *
     * <code>bool activate = 2;</code>
     */
    public boolean getActivate() {
      return activate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLicenseKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, licenseKey_);
      }
      if (activate_ != false) {
        output.writeBool(2, activate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLicenseKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, licenseKey_);
      }
      if (activate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, activate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest)) {
        return super.equals(obj);
      }
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest other = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest) obj;

      boolean result = true;
      result = result && getLicenseKey()
          .equals(other.getLicenseKey());
      result = result && (getActivate()
          == other.getActivate());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LICENSE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseKey().hashCode();
      hash = (37 * hash) + ACTIVATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActivate());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v1.AddLicenseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.AddLicenseRequest)
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.Builder.class);
      }

      // Construct using io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        licenseKey_ = "";

        activate_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseRequest_descriptor;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest getDefaultInstanceForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest build() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest buildPartial() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest result = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest(this);
        result.licenseKey_ = licenseKey_;
        result.activate_ = activate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest) {
          return mergeFrom((io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest other) {
        if (other == io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest.getDefaultInstance()) return this;
        if (!other.getLicenseKey().isEmpty()) {
          licenseKey_ = other.licenseKey_;
          onChanged();
        }
        if (other.getActivate() != false) {
          setActivate(other.getActivate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object licenseKey_ = "";
      /**
       * <code>string license_key = 1;</code>
       */
      public java.lang.String getLicenseKey() {
        java.lang.Object ref = licenseKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          licenseKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string license_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLicenseKeyBytes() {
        java.lang.Object ref = licenseKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          licenseKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string license_key = 1;</code>
       */
      public Builder setLicenseKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licenseKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string license_key = 1;</code>
       */
      public Builder clearLicenseKey() {
        
        licenseKey_ = getDefaultInstance().getLicenseKey();
        onChanged();
        return this;
      }
      /**
       * <code>string license_key = 1;</code>
       */
      public Builder setLicenseKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        licenseKey_ = value;
        onChanged();
        return this;
      }

      private boolean activate_ ;
      /**
       * <pre>
       * Indicates whether the license represented by this key should be made the active license.
       * </pre>
       *
       * <code>bool activate = 2;</code>
       */
      public boolean getActivate() {
        return activate_;
      }
      /**
       * <pre>
       * Indicates whether the license represented by this key should be made the active license.
       * </pre>
       *
       * <code>bool activate = 2;</code>
       */
      public Builder setActivate(boolean value) {
        
        activate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the license represented by this key should be made the active license.
       * </pre>
       *
       * <code>bool activate = 2;</code>
       */
      public Builder clearActivate() {
        
        activate_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.AddLicenseRequest)
    }

    // @@protoc_insertion_point(class_scope:v1.AddLicenseRequest)
    private static final io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest();
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddLicenseRequest>
        PARSER = new com.google.protobuf.AbstractParser<AddLicenseRequest>() {
      @java.lang.Override
      public AddLicenseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddLicenseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AddLicenseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddLicenseRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddLicenseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.AddLicenseResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.v1.LicenseInfo license = 1;</code>
     */
    boolean hasLicense();
    /**
     * <code>.v1.LicenseInfo license = 1;</code>
     */
    io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getLicense();
    /**
     * <code>.v1.LicenseInfo license = 1;</code>
     */
    io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder getLicenseOrBuilder();

    /**
     * <pre>
     * Indicates whether or not the license was accepted by the product. Only licenses which are either valid or
     * not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,
     * e.g., contact information from the decoded blob.
     * </pre>
     *
     * <code>bool accepted = 2;</code>
     */
    boolean getAccepted();
  }
  /**
   * Protobuf type {@code v1.AddLicenseResponse}
   */
  public  static final class AddLicenseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.AddLicenseResponse)
      AddLicenseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AddLicenseResponse.newBuilder() to construct.
    private AddLicenseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddLicenseResponse() {
      accepted_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AddLicenseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder subBuilder = null;
              if (license_ != null) {
                subBuilder = license_.toBuilder();
              }
              license_ = input.readMessage(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(license_);
                license_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              accepted_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.Builder.class);
    }

    public static final int LICENSE_FIELD_NUMBER = 1;
    private io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo license_;
    /**
     * <code>.v1.LicenseInfo license = 1;</code>
     */
    public boolean hasLicense() {
      return license_ != null;
    }
    /**
     * <code>.v1.LicenseInfo license = 1;</code>
     */
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getLicense() {
      return license_ == null ? io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance() : license_;
    }
    /**
     * <code>.v1.LicenseInfo license = 1;</code>
     */
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder getLicenseOrBuilder() {
      return getLicense();
    }

    public static final int ACCEPTED_FIELD_NUMBER = 2;
    private boolean accepted_;
    /**
     * <pre>
     * Indicates whether or not the license was accepted by the product. Only licenses which are either valid or
     * not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,
     * e.g., contact information from the decoded blob.
     * </pre>
     *
     * <code>bool accepted = 2;</code>
     */
    public boolean getAccepted() {
      return accepted_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (license_ != null) {
        output.writeMessage(1, getLicense());
      }
      if (accepted_ != false) {
        output.writeBool(2, accepted_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (license_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLicense());
      }
      if (accepted_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, accepted_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse)) {
        return super.equals(obj);
      }
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse other = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse) obj;

      boolean result = true;
      result = result && (hasLicense() == other.hasLicense());
      if (hasLicense()) {
        result = result && getLicense()
            .equals(other.getLicense());
      }
      result = result && (getAccepted()
          == other.getAccepted());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLicense()) {
        hash = (37 * hash) + LICENSE_FIELD_NUMBER;
        hash = (53 * hash) + getLicense().hashCode();
      }
      hash = (37 * hash) + ACCEPTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAccepted());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v1.AddLicenseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.AddLicenseResponse)
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.Builder.class);
      }

      // Construct using io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (licenseBuilder_ == null) {
          license_ = null;
        } else {
          license_ = null;
          licenseBuilder_ = null;
        }
        accepted_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_AddLicenseResponse_descriptor;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse getDefaultInstanceForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse build() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse buildPartial() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse result = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse(this);
        if (licenseBuilder_ == null) {
          result.license_ = license_;
        } else {
          result.license_ = licenseBuilder_.build();
        }
        result.accepted_ = accepted_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse) {
          return mergeFrom((io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse other) {
        if (other == io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse.getDefaultInstance()) return this;
        if (other.hasLicense()) {
          mergeLicense(other.getLicense());
        }
        if (other.getAccepted() != false) {
          setAccepted(other.getAccepted());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo license_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> licenseBuilder_;
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public boolean hasLicense() {
        return licenseBuilder_ != null || license_ != null;
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getLicense() {
        if (licenseBuilder_ == null) {
          return license_ == null ? io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance() : license_;
        } else {
          return licenseBuilder_.getMessage();
        }
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public Builder setLicense(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          license_ = value;
          onChanged();
        } else {
          licenseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public Builder setLicense(
          io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          license_ = builderForValue.build();
          onChanged();
        } else {
          licenseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public Builder mergeLicense(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo value) {
        if (licenseBuilder_ == null) {
          if (license_ != null) {
            license_ =
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.newBuilder(license_).mergeFrom(value).buildPartial();
          } else {
            license_ = value;
          }
          onChanged();
        } else {
          licenseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public Builder clearLicense() {
        if (licenseBuilder_ == null) {
          license_ = null;
          onChanged();
        } else {
          license_ = null;
          licenseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder getLicenseBuilder() {
        
        onChanged();
        return getLicenseFieldBuilder().getBuilder();
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder getLicenseOrBuilder() {
        if (licenseBuilder_ != null) {
          return licenseBuilder_.getMessageOrBuilder();
        } else {
          return license_ == null ?
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance() : license_;
        }
      }
      /**
       * <code>.v1.LicenseInfo license = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> 
          getLicenseFieldBuilder() {
        if (licenseBuilder_ == null) {
          licenseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder>(
                  getLicense(),
                  getParentForChildren(),
                  isClean());
          license_ = null;
        }
        return licenseBuilder_;
      }

      private boolean accepted_ ;
      /**
       * <pre>
       * Indicates whether or not the license was accepted by the product. Only licenses which are either valid or
       * not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,
       * e.g., contact information from the decoded blob.
       * </pre>
       *
       * <code>bool accepted = 2;</code>
       */
      public boolean getAccepted() {
        return accepted_;
      }
      /**
       * <pre>
       * Indicates whether or not the license was accepted by the product. Only licenses which are either valid or
       * not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,
       * e.g., contact information from the decoded blob.
       * </pre>
       *
       * <code>bool accepted = 2;</code>
       */
      public Builder setAccepted(boolean value) {
        
        accepted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether or not the license was accepted by the product. Only licenses which are either valid or
       * not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,
       * e.g., contact information from the decoded blob.
       * </pre>
       *
       * <code>bool accepted = 2;</code>
       */
      public Builder clearAccepted() {
        
        accepted_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.AddLicenseResponse)
    }

    // @@protoc_insertion_point(class_scope:v1.AddLicenseResponse)
    private static final io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse();
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddLicenseResponse>
        PARSER = new com.google.protobuf.AbstractParser<AddLicenseResponse>() {
      @java.lang.Override
      public AddLicenseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddLicenseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AddLicenseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddLicenseResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.AddLicenseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLicensesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.GetLicensesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool active = 1;</code>
     */
    boolean getActive();

    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status> getStatusesList();
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    int getStatusesCount();
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status getStatuses(int index);
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    java.util.List<java.lang.Integer>
    getStatusesValueList();
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    int getStatusesValue(int index);

    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.ActiveOptCase getActiveOptCase();
  }
  /**
   * Protobuf type {@code v1.GetLicensesRequest}
   */
  public  static final class GetLicensesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.GetLicensesRequest)
      GetLicensesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLicensesRequest.newBuilder() to construct.
    private GetLicensesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLicensesRequest() {
      statuses_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLicensesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              activeOptCase_ = 1;
              activeOpt_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                statuses_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              statuses_.add(rawValue);
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  statuses_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                statuses_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          statuses_ = java.util.Collections.unmodifiableList(statuses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.Builder.class);
    }

    private int bitField0_;
    private int activeOptCase_ = 0;
    private java.lang.Object activeOpt_;
    public enum ActiveOptCase
        implements com.google.protobuf.Internal.EnumLite {
      ACTIVE(1),
      ACTIVEOPT_NOT_SET(0);
      private final int value;
      private ActiveOptCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActiveOptCase valueOf(int value) {
        return forNumber(value);
      }

      public static ActiveOptCase forNumber(int value) {
        switch (value) {
          case 1: return ACTIVE;
          case 0: return ACTIVEOPT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ActiveOptCase
    getActiveOptCase() {
      return ActiveOptCase.forNumber(
          activeOptCase_);
    }

    public static final int ACTIVE_FIELD_NUMBER = 1;
    /**
     * <code>bool active = 1;</code>
     */
    public boolean getActive() {
      if (activeOptCase_ == 1) {
        return (java.lang.Boolean) activeOpt_;
      }
      return false;
    }

    public static final int STATUSES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> statuses_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status> statuses_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status>() {
              public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status result = io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.valueOf(from);
                return result == null ? io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    public java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status> getStatusesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status>(statuses_, statuses_converter_);
    }
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    public int getStatusesCount() {
      return statuses_.size();
    }
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status getStatuses(int index) {
      return statuses_converter_.convert(statuses_.get(index));
    }
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getStatusesValueList() {
      return statuses_;
    }
    /**
     * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
     */
    public int getStatusesValue(int index) {
      return statuses_.get(index);
    }
    private int statusesMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (activeOptCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) activeOpt_));
      }
      if (getStatusesList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(statusesMemoizedSerializedSize);
      }
      for (int i = 0; i < statuses_.size(); i++) {
        output.writeEnumNoTag(statuses_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (activeOptCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) activeOpt_));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < statuses_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(statuses_.get(i));
        }
        size += dataSize;
        if (!getStatusesList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }statusesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest)) {
        return super.equals(obj);
      }
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest other = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest) obj;

      boolean result = true;
      result = result && statuses_.equals(other.statuses_);
      result = result && getActiveOptCase().equals(
          other.getActiveOptCase());
      if (!result) return false;
      switch (activeOptCase_) {
        case 1:
          result = result && (getActive()
              == other.getActive());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getStatusesCount() > 0) {
        hash = (37 * hash) + STATUSES_FIELD_NUMBER;
        hash = (53 * hash) + statuses_.hashCode();
      }
      switch (activeOptCase_) {
        case 1:
          hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getActive());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v1.GetLicensesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.GetLicensesRequest)
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.Builder.class);
      }

      // Construct using io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        statuses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        activeOptCase_ = 0;
        activeOpt_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesRequest_descriptor;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest getDefaultInstanceForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest build() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest buildPartial() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest result = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (activeOptCase_ == 1) {
          result.activeOpt_ = activeOpt_;
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          statuses_ = java.util.Collections.unmodifiableList(statuses_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.statuses_ = statuses_;
        result.bitField0_ = to_bitField0_;
        result.activeOptCase_ = activeOptCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest) {
          return mergeFrom((io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest other) {
        if (other == io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest.getDefaultInstance()) return this;
        if (!other.statuses_.isEmpty()) {
          if (statuses_.isEmpty()) {
            statuses_ = other.statuses_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStatusesIsMutable();
            statuses_.addAll(other.statuses_);
          }
          onChanged();
        }
        switch (other.getActiveOptCase()) {
          case ACTIVE: {
            setActive(other.getActive());
            break;
          }
          case ACTIVEOPT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int activeOptCase_ = 0;
      private java.lang.Object activeOpt_;
      public ActiveOptCase
          getActiveOptCase() {
        return ActiveOptCase.forNumber(
            activeOptCase_);
      }

      public Builder clearActiveOpt() {
        activeOptCase_ = 0;
        activeOpt_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>bool active = 1;</code>
       */
      public boolean getActive() {
        if (activeOptCase_ == 1) {
          return (java.lang.Boolean) activeOpt_;
        }
        return false;
      }
      /**
       * <code>bool active = 1;</code>
       */
      public Builder setActive(boolean value) {
        activeOptCase_ = 1;
        activeOpt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool active = 1;</code>
       */
      public Builder clearActive() {
        if (activeOptCase_ == 1) {
          activeOptCase_ = 0;
          activeOpt_ = null;
          onChanged();
        }
        return this;
      }

      private java.util.List<java.lang.Integer> statuses_ =
        java.util.Collections.emptyList();
      private void ensureStatusesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          statuses_ = new java.util.ArrayList<java.lang.Integer>(statuses_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status> getStatusesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status>(statuses_, statuses_converter_);
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public int getStatusesCount() {
        return statuses_.size();
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status getStatuses(int index) {
        return statuses_converter_.convert(statuses_.get(index));
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder setStatuses(
          int index, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatusesIsMutable();
        statuses_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder addStatuses(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatusesIsMutable();
        statuses_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder addAllStatuses(
          java.lang.Iterable<? extends io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status> values) {
        ensureStatusesIsMutable();
        for (io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Status value : values) {
          statuses_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder clearStatuses() {
        statuses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public java.util.List<java.lang.Integer>
      getStatusesValueList() {
        return java.util.Collections.unmodifiableList(statuses_);
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public int getStatusesValue(int index) {
        return statuses_.get(index);
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder setStatusesValue(
          int index, int value) {
        ensureStatusesIsMutable();
        statuses_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder addStatusesValue(int value) {
        ensureStatusesIsMutable();
        statuses_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo.Status statuses = 2;</code>
       */
      public Builder addAllStatusesValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureStatusesIsMutable();
        for (int value : values) {
          statuses_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.GetLicensesRequest)
    }

    // @@protoc_insertion_point(class_scope:v1.GetLicensesRequest)
    private static final io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest();
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLicensesRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetLicensesRequest>() {
      @java.lang.Override
      public GetLicensesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLicensesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLicensesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetLicensesRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLicensesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.GetLicensesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo> 
        getLicensesList();
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getLicenses(int index);
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    int getLicensesCount();
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    java.util.List<? extends io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> 
        getLicensesOrBuilderList();
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder getLicensesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code v1.GetLicensesResponse}
   */
  public  static final class GetLicensesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.GetLicensesResponse)
      GetLicensesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLicensesResponse.newBuilder() to construct.
    private GetLicensesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLicensesResponse() {
      licenses_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLicensesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                licenses_ = new java.util.ArrayList<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              licenses_.add(
                  input.readMessage(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          licenses_ = java.util.Collections.unmodifiableList(licenses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.Builder.class);
    }

    public static final int LICENSES_FIELD_NUMBER = 1;
    private java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo> licenses_;
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    public java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo> getLicensesList() {
      return licenses_;
    }
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    public java.util.List<? extends io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> 
        getLicensesOrBuilderList() {
      return licenses_;
    }
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    public int getLicensesCount() {
      return licenses_.size();
    }
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getLicenses(int index) {
      return licenses_.get(index);
    }
    /**
     * <code>repeated .v1.LicenseInfo licenses = 1;</code>
     */
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder getLicensesOrBuilder(
        int index) {
      return licenses_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < licenses_.size(); i++) {
        output.writeMessage(1, licenses_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < licenses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, licenses_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse)) {
        return super.equals(obj);
      }
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse other = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse) obj;

      boolean result = true;
      result = result && getLicensesList()
          .equals(other.getLicensesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLicensesCount() > 0) {
        hash = (37 * hash) + LICENSES_FIELD_NUMBER;
        hash = (53 * hash) + getLicensesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v1.GetLicensesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.GetLicensesResponse)
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.Builder.class);
      }

      // Construct using io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLicensesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (licensesBuilder_ == null) {
          licenses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          licensesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetLicensesResponse_descriptor;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse getDefaultInstanceForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse build() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse buildPartial() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse result = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse(this);
        int from_bitField0_ = bitField0_;
        if (licensesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            licenses_ = java.util.Collections.unmodifiableList(licenses_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.licenses_ = licenses_;
        } else {
          result.licenses_ = licensesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse) {
          return mergeFrom((io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse other) {
        if (other == io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse.getDefaultInstance()) return this;
        if (licensesBuilder_ == null) {
          if (!other.licenses_.isEmpty()) {
            if (licenses_.isEmpty()) {
              licenses_ = other.licenses_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLicensesIsMutable();
              licenses_.addAll(other.licenses_);
            }
            onChanged();
          }
        } else {
          if (!other.licenses_.isEmpty()) {
            if (licensesBuilder_.isEmpty()) {
              licensesBuilder_.dispose();
              licensesBuilder_ = null;
              licenses_ = other.licenses_;
              bitField0_ = (bitField0_ & ~0x00000001);
              licensesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLicensesFieldBuilder() : null;
            } else {
              licensesBuilder_.addAllMessages(other.licenses_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo> licenses_ =
        java.util.Collections.emptyList();
      private void ensureLicensesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          licenses_ = new java.util.ArrayList<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo>(licenses_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> licensesBuilder_;

      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo> getLicensesList() {
        if (licensesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(licenses_);
        } else {
          return licensesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public int getLicensesCount() {
        if (licensesBuilder_ == null) {
          return licenses_.size();
        } else {
          return licensesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo getLicenses(int index) {
        if (licensesBuilder_ == null) {
          return licenses_.get(index);
        } else {
          return licensesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder setLicenses(
          int index, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo value) {
        if (licensesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicensesIsMutable();
          licenses_.set(index, value);
          onChanged();
        } else {
          licensesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder setLicenses(
          int index, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder builderForValue) {
        if (licensesBuilder_ == null) {
          ensureLicensesIsMutable();
          licenses_.set(index, builderForValue.build());
          onChanged();
        } else {
          licensesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder addLicenses(io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo value) {
        if (licensesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicensesIsMutable();
          licenses_.add(value);
          onChanged();
        } else {
          licensesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder addLicenses(
          int index, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo value) {
        if (licensesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicensesIsMutable();
          licenses_.add(index, value);
          onChanged();
        } else {
          licensesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder addLicenses(
          io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder builderForValue) {
        if (licensesBuilder_ == null) {
          ensureLicensesIsMutable();
          licenses_.add(builderForValue.build());
          onChanged();
        } else {
          licensesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder addLicenses(
          int index, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder builderForValue) {
        if (licensesBuilder_ == null) {
          ensureLicensesIsMutable();
          licenses_.add(index, builderForValue.build());
          onChanged();
        } else {
          licensesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder addAllLicenses(
          java.lang.Iterable<? extends io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo> values) {
        if (licensesBuilder_ == null) {
          ensureLicensesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, licenses_);
          onChanged();
        } else {
          licensesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder clearLicenses() {
        if (licensesBuilder_ == null) {
          licenses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          licensesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public Builder removeLicenses(int index) {
        if (licensesBuilder_ == null) {
          ensureLicensesIsMutable();
          licenses_.remove(index);
          onChanged();
        } else {
          licensesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder getLicensesBuilder(
          int index) {
        return getLicensesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder getLicensesOrBuilder(
          int index) {
        if (licensesBuilder_ == null) {
          return licenses_.get(index);  } else {
          return licensesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public java.util.List<? extends io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> 
           getLicensesOrBuilderList() {
        if (licensesBuilder_ != null) {
          return licensesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(licenses_);
        }
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder addLicensesBuilder() {
        return getLicensesFieldBuilder().addBuilder(
            io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder addLicensesBuilder(
          int index) {
        return getLicensesFieldBuilder().addBuilder(
            index, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .v1.LicenseInfo licenses = 1;</code>
       */
      public java.util.List<io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder> 
           getLicensesBuilderList() {
        return getLicensesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder> 
          getLicensesFieldBuilder() {
        if (licensesBuilder_ == null) {
          licensesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfo.Builder, io.stackrox.proto.api.v1.LicenseServiceOuterClass.LicenseInfoOrBuilder>(
                  licenses_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          licenses_ = null;
        }
        return licensesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.GetLicensesResponse)
    }

    // @@protoc_insertion_point(class_scope:v1.GetLicensesResponse)
    private static final io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse();
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLicensesResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetLicensesResponse>() {
      @java.lang.Override
      public GetLicensesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLicensesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLicensesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetLicensesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetLicensesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetActiveLicenseExpirationResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.GetActiveLicenseExpirationResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
     */
    boolean hasExpirationTime();
    /**
     * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
     */
    com.google.protobuf.Timestamp getExpirationTime();
    /**
     * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getExpirationTimeOrBuilder();
  }
  /**
   * Protobuf type {@code v1.GetActiveLicenseExpirationResponse}
   */
  public  static final class GetActiveLicenseExpirationResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.GetActiveLicenseExpirationResponse)
      GetActiveLicenseExpirationResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetActiveLicenseExpirationResponse.newBuilder() to construct.
    private GetActiveLicenseExpirationResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetActiveLicenseExpirationResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetActiveLicenseExpirationResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (expirationTime_ != null) {
                subBuilder = expirationTime_.toBuilder();
              }
              expirationTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expirationTime_);
                expirationTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetActiveLicenseExpirationResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetActiveLicenseExpirationResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.Builder.class);
    }

    public static final int EXPIRATION_TIME_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp expirationTime_;
    /**
     * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
     */
    public boolean hasExpirationTime() {
      return expirationTime_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
     */
    public com.google.protobuf.Timestamp getExpirationTime() {
      return expirationTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expirationTime_;
    }
    /**
     * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getExpirationTimeOrBuilder() {
      return getExpirationTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (expirationTime_ != null) {
        output.writeMessage(1, getExpirationTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (expirationTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getExpirationTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse)) {
        return super.equals(obj);
      }
      io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse other = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse) obj;

      boolean result = true;
      result = result && (hasExpirationTime() == other.hasExpirationTime());
      if (hasExpirationTime()) {
        result = result && getExpirationTime()
            .equals(other.getExpirationTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasExpirationTime()) {
        hash = (37 * hash) + EXPIRATION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getExpirationTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v1.GetActiveLicenseExpirationResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.GetActiveLicenseExpirationResponse)
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetActiveLicenseExpirationResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetActiveLicenseExpirationResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.class, io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.Builder.class);
      }

      // Construct using io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (expirationTimeBuilder_ == null) {
          expirationTime_ = null;
        } else {
          expirationTime_ = null;
          expirationTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.internal_static_v1_GetActiveLicenseExpirationResponse_descriptor;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse getDefaultInstanceForType() {
        return io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse build() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse buildPartial() {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse result = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse(this);
        if (expirationTimeBuilder_ == null) {
          result.expirationTime_ = expirationTime_;
        } else {
          result.expirationTime_ = expirationTimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse) {
          return mergeFrom((io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse other) {
        if (other == io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse.getDefaultInstance()) return this;
        if (other.hasExpirationTime()) {
          mergeExpirationTime(other.getExpirationTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Timestamp expirationTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expirationTimeBuilder_;
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public boolean hasExpirationTime() {
        return expirationTimeBuilder_ != null || expirationTime_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public com.google.protobuf.Timestamp getExpirationTime() {
        if (expirationTimeBuilder_ == null) {
          return expirationTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expirationTime_;
        } else {
          return expirationTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public Builder setExpirationTime(com.google.protobuf.Timestamp value) {
        if (expirationTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expirationTime_ = value;
          onChanged();
        } else {
          expirationTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public Builder setExpirationTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (expirationTimeBuilder_ == null) {
          expirationTime_ = builderForValue.build();
          onChanged();
        } else {
          expirationTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public Builder mergeExpirationTime(com.google.protobuf.Timestamp value) {
        if (expirationTimeBuilder_ == null) {
          if (expirationTime_ != null) {
            expirationTime_ =
              com.google.protobuf.Timestamp.newBuilder(expirationTime_).mergeFrom(value).buildPartial();
          } else {
            expirationTime_ = value;
          }
          onChanged();
        } else {
          expirationTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public Builder clearExpirationTime() {
        if (expirationTimeBuilder_ == null) {
          expirationTime_ = null;
          onChanged();
        } else {
          expirationTime_ = null;
          expirationTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getExpirationTimeBuilder() {
        
        onChanged();
        return getExpirationTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getExpirationTimeOrBuilder() {
        if (expirationTimeBuilder_ != null) {
          return expirationTimeBuilder_.getMessageOrBuilder();
        } else {
          return expirationTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : expirationTime_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp expiration_time = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getExpirationTimeFieldBuilder() {
        if (expirationTimeBuilder_ == null) {
          expirationTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getExpirationTime(),
                  getParentForChildren(),
                  isClean());
          expirationTime_ = null;
        }
        return expirationTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.GetActiveLicenseExpirationResponse)
    }

    // @@protoc_insertion_point(class_scope:v1.GetActiveLicenseExpirationResponse)
    private static final io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse();
    }

    public static io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetActiveLicenseExpirationResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetActiveLicenseExpirationResponse>() {
      @java.lang.Override
      public GetActiveLicenseExpirationResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetActiveLicenseExpirationResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetActiveLicenseExpirationResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetActiveLicenseExpirationResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.stackrox.proto.api.v1.LicenseServiceOuterClass.GetActiveLicenseExpirationResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_LicenseInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_LicenseInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_AddLicenseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_AddLicenseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_AddLicenseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_AddLicenseResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_GetLicensesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_GetLicensesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_GetLicensesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_GetLicensesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_GetActiveLicenseExpirationResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_GetActiveLicenseExpirationResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034api/v1/license_service.proto\022\002v1\032\034goog" +
      "le/api/annotations.proto\032\037google/protobu" +
      "f/timestamp.proto\032\034shared/license/licens" +
      "e.proto\032\022api/v1/empty.proto\"\331\001\n\013LicenseI" +
      "nfo\022!\n\007license\030\001 \001(\0132\020.license.License\022&" +
      "\n\006status\030\002 \001(\0162\026.v1.LicenseInfo.Status\022\025" +
      "\n\rstatus_reason\030\003 \001(\t\022\016\n\006active\030\004 \001(\010\"X\n" +
      "\006Status\022\013\n\007UNKNOWN\020\000\022\t\n\005VALID\020\001\022\013\n\007REVOK" +
      "ED\020\002\022\021\n\rNOT_YET_VALID\020\003\022\013\n\007EXPIRED\020\004\022\t\n\005" +
      "OTHER\020\005\":\n\021AddLicenseRequest\022\023\n\013license_" +
      "key\030\001 \001(\t\022\020\n\010activate\030\002 \001(\010\"H\n\022AddLicens" +
      "eResponse\022 \n\007license\030\001 \001(\0132\017.v1.LicenseI" +
      "nfo\022\020\n\010accepted\030\002 \001(\010\"^\n\022GetLicensesRequ" +
      "est\022\020\n\006active\030\001 \001(\010H\000\022(\n\010statuses\030\002 \003(\0162" +
      "\026.v1.LicenseInfo.StatusB\014\n\nactive_opt\"8\n" +
      "\023GetLicensesResponse\022!\n\010licenses\030\001 \003(\0132\017" +
      ".v1.LicenseInfo\"Y\n\"GetActiveLicenseExpir" +
      "ationResponse\0223\n\017expiration_time\030\001 \001(\0132\032" +
      ".google.protobuf.Timestamp2\267\002\n\016LicenseSe" +
      "rvice\022Y\n\013GetLicenses\022\026.v1.GetLicensesReq" +
      "uest\032\027.v1.GetLicensesResponse\"\031\202\323\344\223\002\023\022\021/" +
      "v1/licenses/list\022X\n\nAddLicense\022\025.v1.AddL" +
      "icenseRequest\032\026.v1.AddLicenseResponse\"\033\202" +
      "\323\344\223\002\025\"\020/v1/licenses/add:\001*\022p\n\032GetActiveL" +
      "icenseExpiration\022\t.v1.Empty\032&.v1.GetActi" +
      "veLicenseExpirationResponse\"\037\202\323\344\223\002\031\022\027/v1" +
      "/licenses/expirationB\036\n\030io.stackrox.prot" +
      "o.api.v1Z\002v1X\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          io.stackrox.proto.api.v1.LicenseOuterClass.getDescriptor(),
          io.stackrox.proto.api.v1.EmptyOuterClass.getDescriptor(),
        }, assigner);
    internal_static_v1_LicenseInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_v1_LicenseInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_LicenseInfo_descriptor,
        new java.lang.String[] { "License", "Status", "StatusReason", "Active", });
    internal_static_v1_AddLicenseRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_v1_AddLicenseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_AddLicenseRequest_descriptor,
        new java.lang.String[] { "LicenseKey", "Activate", });
    internal_static_v1_AddLicenseResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_v1_AddLicenseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_AddLicenseResponse_descriptor,
        new java.lang.String[] { "License", "Accepted", });
    internal_static_v1_GetLicensesRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_v1_GetLicensesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_GetLicensesRequest_descriptor,
        new java.lang.String[] { "Active", "Statuses", "ActiveOpt", });
    internal_static_v1_GetLicensesResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_v1_GetLicensesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_GetLicensesResponse_descriptor,
        new java.lang.String[] { "Licenses", });
    internal_static_v1_GetActiveLicenseExpirationResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_v1_GetActiveLicenseExpirationResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_GetActiveLicenseExpirationResponse_descriptor,
        new java.lang.String[] { "ExpirationTime", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    io.stackrox.proto.api.v1.LicenseOuterClass.getDescriptor();
    io.stackrox.proto.api.v1.EmptyOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
