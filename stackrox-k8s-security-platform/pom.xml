<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>3.50</version>
        <relativePath/>
    </parent>
    <groupId>com.stackrox.jenkins.plugins</groupId>
    <artifactId>stackrox-container-image-scanner</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>hpi</packaging>
    <properties>
        <jenkins.version>2.164.1</jenkins.version>
        <java.level>8</java.level>
    </properties>
    <name>StackRox Container Image Scanner</name>
    <licenses>
        <license>
            <name>Apache 2 License</name>
            <url>http://opensource.org/licenses/Apache-2.0</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>stackrox-k8s-security-platform</id>
            <name>StackRox Inc.</name>
            <email>jenkins-plugin@stackrox.com</email>
        </developer>
    </developers>
    <!-- Assuming you want to host on @jenkinsci:
    <url>https://github.com/jenkinsci/${project.artifactId}-plugin</url>
    <scm>
        <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
        <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
        <url>https://github.com/jenkinsci/${project.artifactId}-plugin</url>
    </scm>
    -->
    <dependencies>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.10</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-digester</groupId>
                <artifactId>commons-digester</artifactId>
                <version>2.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <plugins>
            <!-- download external resources like jQuery, jQuery UI, datatable etc. via webjars -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>jquery</artifactId>
                                    <version>3.4.1</version>
                                    <includes>**/jquery*.min.js</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>datatables</artifactId>
                                    <version>1.10.20</version>
                                    <includes>
                                        **/jquery.dataTables.min.js,**/dataTables.bootstrap.min.js,**/dataTables.bootstrap.min.css,**/fonts/*
                                    </includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>bootstrap</artifactId>
                                    <version>4.4.1</version>
                                    <includes>**/bootstrap.min.css,**/bootstrap.min.js,**/fonts/*</includes>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/webjars</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- copy downloaded resources to target/external-resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-downloaded-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/external-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/webjars/META-INF/resources/webjars/jquery/3.4.1</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/webjars/META-INF/resources/webjars/datatables/1.10.20</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/webjars/META-INF/resources/webjars/bootstrap/4.4.1</directory>
                                </resource>
                                <!-- also copy existing resources to use them in the HPL for testing -->
                                <resource>
                                    <directory>src/main/webapp</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        <!-- include downloaded resources in HPI -->
            <plugin>
                <groupId>org.jenkins-ci.tools</groupId>
                <artifactId>maven-hpi-plugin</artifactId>
                <configuration>
                    <minimumJavaVersion>1.7</minimumJavaVersion>
                    <webResources>
                        <webResource>
                            <directory>${project.build.directory}/external-resources</directory>
                            <filtering>false</filtering>
                        </webResource>
                    </webResources>
                    <!-- for testing -->
                    <warSourceDirectory>${project.build.directory}/external-resources</warSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
