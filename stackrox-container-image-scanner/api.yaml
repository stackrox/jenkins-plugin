openapi: 3.0.0
info:
  title: API Reference
  version: '1'
  description: API reference for the StackRox Security Platform
  contact:
    email: support@stackrox.com
  license:
    name: All Rights Reserved
    url: https://www.stackrox.com/
paths:
  /v1/alerts:
    get:
      summary: List returns the slim list version of the alerts.
      operationId: AlertService_ListAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAlertsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
    delete:
      operationId: AlertService_DeleteAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteAlertsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/alerts/resolve:
    patch:
      summary: ResolveAlertsByQuery marks alerts matching search query as resolved.
      operationId: AlertService_ResolveAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ResolveAlertsRequest'
        required: true
      tags:
        - AlertService
  /v1/alerts/summary/counts:
    get:
      summary: GetAlertsCounts returns the number of alerts in the requested cluster or category.
      operationId: AlertService_GetAlertsCounts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAlertsCountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: request.query
          in: query
          required: false
          schema:
            type: string
        - name: request.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: request.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: request.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: request.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: groupBy
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - CATEGORY
              - CLUSTER
            default: UNSET
      tags:
        - AlertService
  /v1/alerts/summary/groups:
    get:
      summary: GetAlertsGroup returns alerts grouped by policy.
      operationId: AlertService_GetAlertsGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAlertsGroupResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/alerts/summary/timeseries:
    get:
      summary: GetAlertTimeseries returns the alerts sorted by time.
      operationId: AlertService_GetAlertTimeseries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAlertTimeseriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/alerts/{id}:
    get:
      summary: GetAlert returns the alert given its id.
      operationId: AlertService_GetAlert
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAlert'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AlertService
  /v1/alerts/{id}/resolve:
    patch:
      summary: ResolveAlert marks the given alert (by ID) as resolved.
      operationId: AlertService_ResolveAlert
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ResolveAlertRequest'
        required: true
      tags:
        - AlertService
  /v1/alerts/{id}/snooze:
    patch:
      summary: SnoozeAlert is deprecated.
      operationId: AlertService_SnoozeAlert
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SnoozeAlertRequest'
        required: true
      tags:
        - AlertService
  /v1/alertscount:
    get:
      summary: CountAlerts counts how many alerts match the get request.
      operationId: AlertService_CountAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountAlertsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/apitokens:
    get:
      summary: GetAPITokens returns all the API tokens.
      operationId: APITokenService_GetAPITokens
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAPITokensResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: revoked
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - APITokenService
  /v1/apitokens/generate:
    post:
      summary: GenerateToken generates API token for a given user and role.
      operationId: APITokenService_GenerateToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GenerateTokenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GenerateTokenRequest'
        required: true
      tags:
        - APITokenService
  /v1/apitokens/revoke/{id}:
    patch:
      summary: RevokeToken removes the API token for a given id.
      operationId: APITokenService_RevokeToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - APITokenService
  /v1/apitokens/{id}:
    get:
      summary: GetAPIToken returns API token metadata for a given id.
      operationId: APITokenService_GetAPIToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageTokenMetadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - APITokenService
  /v1/authProviders:
    get:
      operationId: AuthProviderService_GetAuthProviders
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAuthProvidersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
      tags:
        - AuthProviderService
    post:
      operationId: AuthProviderService_PostAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageAuthProvider'
      tags:
        - AuthProviderService
  /v1/authProviders/exchangeToken:
    post:
      operationId: AuthProviderService_ExchangeToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ExchangeTokenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ExchangeTokenRequest'
        required: true
      tags:
        - AuthProviderService
  /v1/authProviders/{id}:
    get:
      operationId: AuthProviderService_GetAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AuthProviderService
    delete:
      operationId: AuthProviderService_DeleteAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AuthProviderService
    put:
      operationId: AuthProviderService_PutAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageAuthProvider'
      tags:
        - AuthProviderService
    patch:
      operationId: AuthProviderService_UpdateAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateAuthProviderRequest'
        required: true
      tags:
        - AuthProviderService
  /v1/login/authproviders:
    get:
      operationId: AuthProviderService_GetLoginAuthProviders
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetLoginAuthProvidersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - AuthProviderService
  /v1/auth/status:
    get:
      operationId: AuthService_GetAuthStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AuthStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - AuthService
  /v1/externalbackups:
    get:
      summary: GetExternalBackups returns all external backup configurations.
      operationId: ExternalBackupService_GetExternalBackups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExternalBackupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ExternalBackupService
    post:
      summary: PostExternalBackup creates an external backup configuration.
      operationId: ExternalBackupService_PostExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageExternalBackup'
      tags:
        - ExternalBackupService
  /v1/externalbackups/test:
    post:
      summary: TestExternalBackup tests an external backup configuration.
      operationId: ExternalBackupService_TestExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageExternalBackup'
      tags:
        - ExternalBackupService
  /v1/externalbackups/test/updated:
    post:
      summary: TestUpdatedExternalBackup checks if the given external backup is correctly configured, with optional stored credential reconciliation.
      operationId: ExternalBackupService_TestUpdatedExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/v1UpdateExternalBackupRequest'
      tags:
        - ExternalBackupService
  /v1/externalbackups/{externalBackup.id}:
    patch:
      summary: UpdateExternalBackup modifies a given external backup, with optional stored credential reconciliation.
      operationId: ExternalBackupService_UpdateExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: externalBackup.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/v1UpdateExternalBackupRequest'
      tags:
        - ExternalBackupService
  /v1/externalbackups/{id}:
    get:
      summary: GetExternalBackup returns the external backup configuration given its ID.
      operationId: ExternalBackupService_GetExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ExternalBackupService
    delete:
      summary: DeleteExternalBackup removes an external backup configuration given its ID.
      operationId: ExternalBackupService_DeleteExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ExternalBackupService
    post:
      summary: TriggerExternalBackup initiates an external backup for the given configuration.
      operationId: ExternalBackupService_TriggerExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ExternalBackupService
    put:
      summary: PutExternalBackup modifies a given external backup, without using stored credential reconciliation.
      operationId: ExternalBackupService_PutExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageExternalBackup'
      tags:
        - ExternalBackupService
  /v1/centralhealth/upgradestatus:
    get:
      operationId: CentralHealthService_GetUpgradeStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUpgradeStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - CentralHealthService
  /v1/cluster-init/ca-config:
    get:
      operationId: ClusterInitService_GetCAConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCAConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ClusterInitService
  /v1/cluster-init/init-bundles:
    get:
      operationId: ClusterInitService_GetInitBundles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InitBundleMetasResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ClusterInitService
    post:
      operationId: ClusterInitService_GenerateInitBundle
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InitBundleGenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InitBundleGenRequest'
        required: true
      tags:
        - ClusterInitService
  /v1/cluster-init/init-bundles/revoke:
    patch:
      summary: |-
        RevokeInitBundle deletes cluster init bundle. If this operation impacts any cluster
        then its ID should be included in request.
        If confirm_impacted_clusters_ids does not match with current impacted clusters
        then request will fail with error that includes all impacted clusters.
      operationId: ClusterInitService_RevokeInitBundle
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InitBundleRevokeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InitBundleRevokeRequest'
        required: true
      tags:
        - ClusterInitService
  /v1/clusters:
    get:
      operationId: ClustersService_GetClusters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClustersList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - ClustersService
    post:
      operationId: ClustersService_PostCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageCluster'
      tags:
        - ClustersService
  /v1/clusters-env/kernel-support-available:
    get:
      operationId: ClustersService_GetKernelSupportAvailable
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1KernelSupportAvailableResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ClustersService
  /v1/clusters/{id}:
    get:
      operationId: ClustersService_GetCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ClustersService
    delete:
      operationId: ClustersService_DeleteCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ClustersService
    put:
      operationId: ClustersService_PutCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageCluster'
      tags:
        - ClustersService
  /v1/complianceManagement/runs:
    get:
      operationId: ComplianceManagementService_GetRecentRuns
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRecentComplianceRunsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
        - name: standardId
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
      tags:
        - ComplianceManagementService
  /v1/compliancemanagement/runs:
    post:
      operationId: ComplianceManagementService_TriggerRuns
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TriggerComplianceRunsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TriggerComplianceRunsRequest'
        required: true
      tags:
        - ComplianceManagementService
  /v1/compliancemanagement/runstatuses:
    get:
      operationId: ComplianceManagementService_GetRunStatuses
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceRunStatusesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: runIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - ComplianceManagementService
  /v1/compliance/aggregatedresults:
    get:
      operationId: ComplianceService_GetAggregatedResults
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageComplianceAggregationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - UNKNOWN
                - STANDARD
                - CLUSTER
                - CATEGORY
                - CONTROL
                - NAMESPACE
                - NODE
                - DEPLOYMENT
                - CHECK
        - name: unit
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - STANDARD
              - CLUSTER
              - CATEGORY
              - CONTROL
              - NAMESPACE
              - NODE
              - DEPLOYMENT
              - CHECK
            default: UNKNOWN
        - name: where.query
          in: query
          required: false
          schema:
            type: string
        - name: where.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: where.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: where.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: where.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ComplianceService
  /v1/compliance/results:
    get:
      operationId: ComplianceService_GetComplianceControlResults
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComplianceControlResultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ComplianceService
  /v1/compliance/runresults:
    get:
      operationId: ComplianceService_GetRunResults
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceRunResultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
        - name: standardId
          in: query
          required: false
          schema:
            type: string
        - name: runId
          description: |-
            Specifies the run ID for which to return results. If empty, the most recent run is returned.
            CAVEAT: Setting this field circumvents the results cache on the server-side, which may lead to significantly
                    increased memory pressure and decreased performance.
          in: query
          required: false
          schema:
            type: string
      tags:
        - ComplianceService
  /v1/compliance/standards:
    get:
      operationId: ComplianceService_GetStandards
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceStandardsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ComplianceService
  /v1/compliance/standards/{id}:
    get:
      operationId: ComplianceService_GetStandard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceStandardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ComplianceService
  /v1/config:
    get:
      operationId: ConfigService_GetConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
    put:
      operationId: ConfigService_PutConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PutConfigRequest'
        required: true
      tags:
        - ConfigService
  /v1/config/private:
    get:
      operationId: ConfigService_GetPrivateConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePrivateConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
  /v1/config/public:
    get:
      operationId: ConfigService_GetPublicConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePublicConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ConfigService
  /v1/credentialexpiry:
    get:
      summary: GetCertExpiry returns information related to the expiry component mTLS certificate.
      operationId: CredentialExpiryService_GetCertExpiry
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCertExpiryResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: component
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - CENTRAL
              - SCANNER
            default: UNKNOWN
      tags:
        - CredentialExpiryService
  /v1/cves/suppress:
    patch:
      summary: SuppressCVE suppresses cves.
      operationId: CVEService_SuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SuppressCVERequest'
        required: true
      tags:
        - CVEService
  /v1/cves/unsuppress:
    patch:
      summary: UnsuppressCVE unsuppresse    s cves.
      operationId: CVEService_UnsuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UnsuppressCVERequest'
        required: true
      tags:
        - CVEService
  /v1/db/exportcaps:
    get:
      operationId: DBService_GetExportCapabilities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDBExportCapabilitiesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - DBService
  /v1/db/interruptrestore/{processId}/{attemptId}:
    post:
      operationId: DBService_InterruptRestoreProcess
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InterruptDBRestoreProcessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
        - name: attemptId
          in: path
          required: true
          schema:
            type: string
      tags:
        - DBService
  /v1/db/restore:
    get:
      operationId: DBService_GetActiveRestoreProcess
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetActiveDBRestoreProcessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - DBService
  /v1/db/restore/{id}:
    delete:
      operationId: DBService_CancelRestoreProcess
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DBService
  /v1/debug/loglevel:
    get:
      summary: Get the current logging level for StackRox services.
      operationId: DebugService_GetLogLevel
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1LogLevelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: modules
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - DebugService
    patch:
      summary: Set logging level for StackRox services.
      operationId: DebugService_SetLogLevel
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1LogLevelRequest'
        required: true
      tags:
        - DebugService
  /v1/deployments:
    get:
      summary: ListDeployments returns the list of deployments.
      operationId: DeploymentService_ListDeployments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - DeploymentService
  /v1/deployments/metadata/labels:
    get:
      summary: GetLabels returns the labels used by deployments.
      operationId: DeploymentService_GetLabels
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentLabelsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - DeploymentService
  /v1/deployments/{id}:
    get:
      summary: GetDeployment returns a deployment given its ID.
      operationId: DeploymentService_GetDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageDeployment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DeploymentService
  /v1/deploymentscount:
    get:
      summary: CountDeployments returns the number of deployments.
      operationId: DeploymentService_CountDeployments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountDeploymentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - DeploymentService
  /v1/deploymentswithprocessinfo:
    get:
      summary: ListDeploymentsWithProcessInfo returns the list of deployments with process information.
      operationId: DeploymentService_ListDeploymentsWithProcessInfo
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentsWithProcessInfoResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - DeploymentService
  /v1/deploymentswithrisk/{id}:
    get:
      summary: GetDeploymentWithRisk returns a deployment and its risk given its ID.
      operationId: DeploymentService_GetDeploymentWithRisk
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDeploymentWithRiskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DeploymentService
  /v1/detect/build:
    post:
      summary: DetectBuildTime checks if any images violate build time policies.
      operationId: DetectionService_DetectBuildTime
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BuildDetectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BuildDetectionRequest'
        required: true
      tags:
        - DetectionService
  /v1/detect/deploy:
    post:
      summary: DetectDeployTime checks if any deployments violate deploy time policies.
      operationId: DetectionService_DetectDeployTime
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeployDetectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeployDetectionRequest'
        required: true
      tags:
        - DetectionService
  /v1/detect/deploy/yaml:
    post:
      summary: DetectDeployTimeFromYAML checks if the given deployment yaml violates any deploy time policies.
      operationId: DetectionService_DetectDeployTimeFromYAML
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeployDetectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeployYAMLDetectionRequest'
        required: true
      tags:
        - DetectionService
  /v1/featureflags:
    get:
      operationId: FeatureFlagService_GetFeatureFlags
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetFeatureFlagsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - FeatureFlagService
  /v1/group:
    get:
      operationId: GroupService_GetGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: authProviderId
          in: query
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
      tags:
        - GroupService
  /v1/groups:
    get:
      operationId: GroupService_GetGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: authProviderId
          in: query
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
      tags:
        - GroupService
    delete:
      operationId: GroupService_DeleteGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: authProviderId
          in: query
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
      tags:
        - GroupService
    post:
      operationId: GroupService_CreateGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageGroup'
      tags:
        - GroupService
    put:
      operationId: GroupService_UpdateGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageGroup'
      tags:
        - GroupService
  /v1/groupsbatch:
    post:
      operationId: GroupService_BatchUpdate
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GroupBatchUpdateRequest'
        required: true
      tags:
        - GroupService
  /v1/imageintegrations:
    get:
      summary: GetImageIntegrations returns all image integrations that match the request filters.
      operationId: ImageIntegrationService_GetImageIntegrations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetImageIntegrationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: cluster
          in: query
          required: false
          schema:
            type: string
      tags:
        - ImageIntegrationService
    post:
      summary: PostImageIntegration creates a image integration.
      operationId: ImageIntegrationService_PostImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImageIntegration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageImageIntegration'
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/test:
    post:
      summary: TestImageIntegration checks if the given image integration is correctly configured, without using stored credential reconciliation.
      operationId: ImageIntegrationService_TestImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageImageIntegration'
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/test/updated:
    post:
      summary: TestUpdatedImageIntegration checks if the given image integration is correctly configured, with optional stored credential reconciliation.
      operationId: ImageIntegrationService_TestUpdatedImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/v1UpdateImageIntegrationRequest'
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/{config.id}:
    patch:
      summary: UpdateImageIntegration modifies a given image integration, with optional stored credential reconciliation.
      operationId: ImageIntegrationService_UpdateImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: config.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/v1UpdateImageIntegrationRequest'
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/{id}:
    get:
      summary: GetImageIntegration returns the image integration given its ID.
      operationId: ImageIntegrationService_GetImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImageIntegration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ImageIntegrationService
    delete:
      summary: DeleteImageIntegration removes a image integration given its ID.
      operationId: ImageIntegrationService_DeleteImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ImageIntegrationService
    put:
      summary: PutImageIntegration modifies a given image integration, without using stored credential reconciliation.
      operationId: ImageIntegrationService_PutImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageImageIntegration'
      tags:
        - ImageIntegrationService
  /v1/images:
    get:
      summary: ListImages returns all the images.
      operationId: ImageService_ListImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
    delete:
      summary: DeleteImage removes the images based on a query
      operationId: ImageService_DeleteImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
  /v1/images/cache/invalidate:
    get:
      summary: InvalidateScanAndRegistryCaches removes the image metadata cache.
      operationId: ImageService_InvalidateScanAndRegistryCaches
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ImageService
  /v1/images/scan:
    post:
      summary: ScanImage scans a single image and returns the result
      operationId: ImageService_ScanImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ScanImageRequest'
        required: true
      tags:
        - ImageService
  /v1/images/{id}:
    get:
      summary: GetImage returns the image given its ID.
      operationId: ImageService_GetImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: includeSnoozed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
  /v1/imagescount:
    get:
      summary: ListImages returns all the images.
      operationId: ImageService_CountImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
  /v1/watchedimages:
    get:
      summary: |-
        GetWatchedImages returns the list of image names that are currently
        being watched.
      operationId: ImageService_GetWatchedImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetWatchedImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ImageService
    delete:
      summary: |-
        UnwatchImage marks an image name to no longer be watched.
        It returns successfully if the image is no longer being watched
        after the call, irrespective of whether the image was already being watched.
      operationId: ImageService_UnwatchImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: name
          description: |-
            The name of the image to unwatch.
            Should match the name of a previously watched image.
          in: query
          required: false
          schema:
            type: string
      tags:
        - ImageService
    post:
      summary: WatchImage marks an image name as to be watched.
      operationId: ImageService_WatchImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1WatchImageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1WatchImageRequest'
        required: true
      tags:
        - ImageService
  /v1/integrationhealth/externalbackups:
    get:
      operationId: IntegrationHealthService_GetBackupPlugins
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/imageintegrations:
    get:
      operationId: IntegrationHealthService_GetImageIntegrations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/notifiers:
    get:
      operationId: IntegrationHealthService_GetNotifiers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/vulndefinitions:
    get:
      operationId: IntegrationHealthService_GetVulnDefinitionsInfo
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1VulnDefinitionsInfo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - IntegrationHealthService
  /v1/licenses/activekey:
    get:
      operationId: LicenseService_GetActiveLicenseKey
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetActiveLicenseKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - LicenseService
  /v1/licenses/add:
    post:
      operationId: LicenseService_AddLicense
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddLicenseResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddLicenseRequest'
        required: true
      tags:
        - LicenseService
  /v1/licenses/expiration:
    get:
      operationId: LicenseService_GetActiveLicenseExpiration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetActiveLicenseExpirationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - LicenseService
  /v1/licenses/list:
    get:
      operationId: LicenseService_GetLicenses
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetLicensesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: active
          in: query
          required: false
          schema:
            type: boolean
        - name: statuses
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - UNKNOWN
                - VALID
                - REVOKED
                - NOT_YET_VALID
                - EXPIRED
                - OTHER
      tags:
        - LicenseService
  /v1/metadata:
    get:
      operationId: MetadataService_GetMetadata
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Metadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - MetadataService
  /v1/tls-challenge:
    get:
      operationId: MetadataService_TLSChallenge
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TLSChallengeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: challengeToken
          description: generated challenge token by the service asking for TLS certs.
          in: query
          required: false
          schema:
            type: string
      tags:
        - MetadataService
  /v1/mitreattackvectors:
    get:
      summary: ListMitreAttackVectors returns all MITRE ATT&CK vectors.
      operationId: MitreAttackService_ListMitreAttackVectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMitreAttackVectorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - MitreAttackService
  /v1/mitreattackvectors/{id}:
    get:
      summary: GetMitreAttackVector returns the full MITRE ATT&CK vector for a tactic with all its techniques.
      operationId: MitreAttackService_GetMitreAttackVector
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMitreVectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - MitreAttackService
  /v1/namespaces:
    get:
      operationId: NamespaceService_GetNamespaces
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetNamespacesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NamespaceService
  /v1/namespaces/{id}:
    get:
      operationId: NamespaceService_GetNamespace
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Namespace'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NamespaceService
  /v1/networkbaseline/{deploymentId}/peers:
    patch:
      operationId: NetworkBaselineService_ModifyBaselineStatusForPeers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModifyBaselineStatusForPeersRequest'
        required: true
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{deploymentId}/status:
    post:
      operationId: NetworkBaselineService_GetNetworkBaselineStatusForFlows
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkBaselineStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1NetworkBaselineStatusRequest'
        required: true
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{id}:
    get:
      operationId: NetworkBaselineService_GetNetworkBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkBaseline'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{id}/lock:
    patch:
      operationId: NetworkBaselineService_LockNetworkBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/v1ResourceByID'
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{id}/unlock:
    patch:
      operationId: NetworkBaselineService_UnlockNetworkBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/v1ResourceByID'
      tags:
        - NetworkBaselineService
  /v1/networkgraph/cluster/{clusterId}:
    get:
      operationId: NetworkGraphService_GetNetworkGraph
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkGraph'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: includePorts
          in: query
          required: false
          schema:
            type: boolean
        - name: scope.query
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkGraphService
  /v1/networkgraph/cluster/{clusterId}/externalentities:
    get:
      operationId: NetworkGraphService_GetExternalNetworkEntities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExternalNetworkEntitiesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkGraphService
    post:
      operationId: NetworkGraphService_CreateExternalNetworkEntity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateNetworkEntityRequest'
        required: true
      tags:
        - NetworkGraphService
  /v1/networkgraph/config:
    get:
      operationId: NetworkGraphService_GetNetworkGraphConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkGraphConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - NetworkGraphService
    put:
      operationId: NetworkGraphService_PutNetworkGraphConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkGraphConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PutNetworkGraphConfigRequest'
        required: true
      tags:
        - NetworkGraphService
  /v1/networkgraph/externalentities/{id}:
    delete:
      operationId: NetworkGraphService_DeleteExternalNetworkEntity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkGraphService
    patch:
      operationId: NetworkGraphService_PatchExternalNetworkEntity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PatchNetworkEntityRequest'
        required: true
      tags:
        - NetworkGraphService
  /v1/networkpolicies:
    get:
      operationId: NetworkPolicyService_GetNetworkPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
        - name: deploymentQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/allowedpeers/{id}:
    get:
      operationId: NetworkPolicyService_GetAllowedPeersFromCurrentPolicyForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/apply/deployment/{deploymentId}:
    post:
      operationId: NetworkPolicyService_ApplyNetworkPolicyYamlForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ApplyNetworkPolicyYamlForDeploymentRequest'
        required: true
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/apply/{clusterId}:
    post:
      operationId: NetworkPolicyService_ApplyNetworkPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNetworkPolicyModification'
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/baselinecomparison/{id}:
    get:
      operationId: NetworkPolicyService_GetDiffFlowsBetweenPolicyAndBaselineForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDiffFlowsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/cluster/{clusterId}:
    get:
      operationId: NetworkPolicyService_GetNetworkGraph
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkGraph'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: includePorts
          description: If set to true, include port-level information in the network policy graph.
          in: query
          required: false
          schema:
            type: boolean
        - name: scope.query
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/generate/baseline/{deploymentId}:
    post:
      operationId: NetworkPolicyService_GetBaselineGeneratedNetworkPolicyForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentRequest'
        required: true
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/generate/{clusterId}:
    get:
      operationId: NetworkPolicyService_GenerateNetworkPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GenerateNetworkPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: deleteExisting
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - NONE
              - GENERATED_ONLY
              - ALL
            default: UNKNOWN
        - name: networkDataSince
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: includePorts
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/graph/epoch:
    get:
      operationId: NetworkPolicyService_GetNetworkGraphEpoch
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkGraphEpoch'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/simulate/{clusterId}:
    post:
      operationId: NetworkPolicyService_SimulateNetworkGraph
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SimulateNetworkGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: includePorts
          description: If set to true, include port-level information in the network policy graph.
          in: query
          required: false
          schema:
            type: boolean
        - name: includeNodeDiff
          in: query
          required: false
          schema:
            type: boolean
        - name: scope.query
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNetworkPolicyModification'
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/simulate/{clusterId}/notify:
    post:
      operationId: NetworkPolicyService_SendNetworkPolicyYAML
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: notifierIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNetworkPolicyModification'
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/undo/deployment/{id}:
    get:
      operationId: NetworkPolicyService_GetUndoModificationForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUndoModificationForDeploymentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/undo/{clusterId}:
    get:
      operationId: NetworkPolicyService_GetUndoModification
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUndoModificationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/undobaselinecomparison/{id}:
    get:
      operationId: NetworkPolicyService_GetDiffFlowsFromUndoModificationForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDiffFlowsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/{id}:
    get:
      operationId: NetworkPolicyService_GetNetworkPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/nodes/{clusterId}:
    get:
      operationId: NodeService_ListNodes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListNodesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      tags:
        - NodeService
  /v1/nodes/{clusterId}/{nodeId}:
    get:
      operationId: NodeService_GetNode
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNode'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
      tags:
        - NodeService
  /v1/notifiers:
    get:
      summary: GetNotifiers returns all notifier configurations that match the request filters.
      operationId: NotifierService_GetNotifiers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetNotifiersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
      tags:
        - NotifierService
    post:
      summary: PostNotifier creates a notifier configuration.
      operationId: NotifierService_PostNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNotifier'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageNotifier'
      tags:
        - NotifierService
  /v1/notifiers/test:
    post:
      summary: TestNotifier checks if a notifier is correctly configured.
      operationId: NotifierService_TestNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageNotifier'
      tags:
        - NotifierService
  /v1/notifiers/test/updated:
    post:
      summary: TestUpdatedNotifier checks if the given notifier is correctly configured, with optional stored credential reconciliation.
      operationId: NotifierService_TestUpdatedNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/v1UpdateNotifierRequest'
      tags:
        - NotifierService
  /v1/notifiers/{id}:
    get:
      summary: GetNotifier returns the notifier configuration given its ID.
      operationId: NotifierService_GetNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNotifier'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NotifierService
    delete:
      summary: DeleteNotifier removes a notifier configuration given its ID.
      operationId: NotifierService_DeleteNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NotifierService
    put:
      summary: PutNotifier modifies a given notifier, without using stored credential reconciliation.
      operationId: NotifierService_PutNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNotifier'
      tags:
        - NotifierService
  /v1/notifiers/{notifier.id}:
    patch:
      summary: UpdateNotifier modifies a given notifier, with optional stored credential reconciliation.
      operationId: NotifierService_UpdateNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: notifier.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/v1UpdateNotifierRequest'
      tags:
        - NotifierService
  /v1/ping:
    get:
      operationId: PingService_Ping
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PongMessage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - PingService
  /v1/pods:
    get:
      summary: GetPods returns the pods.
      operationId: PodService_GetPods
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PodsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PodService
  /v1/policies:
    get:
      summary: ListPolicies returns the list of policies.
      operationId: PolicyService_ListPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PolicyService
    post:
      summary: PostPolicy creates a new policy.
      operationId: PolicyService_PostPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: enableStrictValidation
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
  /v1/policies/dryrun:
    post:
      summary: DryRunPolicy evaluates the given policy and returns any alerts without creating the policy.
      operationId: PolicyService_DryRunPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DryRunResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
  /v1/policies/dryrunjob:
    post:
      operationId: PolicyService_SubmitDryRunPolicyJob
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1JobId'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
  /v1/policies/dryrunjob/{jobId}:
    get:
      operationId: PolicyService_QueryDryRunJobStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DryRunJobStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
    delete:
      operationId: PolicyService_CancelDryRunJob
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
  /v1/policies/export:
    post:
      summary: ExportPolicies takes a list of policy IDs and returns either the entire list of policies or an error message
      operationId: PolicyService_ExportPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExportPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ExportPoliciesRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/from-search:
    post:
      operationId: PolicyService_PolicyFromSearch
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyFromSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PolicyFromSearchRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/import:
    post:
      summary: ImportPolicies accepts a list of Policies and returns a list of the policies which could not be imported
      operationId: PolicyService_ImportPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ImportPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ImportPoliciesRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/reassess:
    post:
      summary: ReassessPolicies reevaluates all the policies.
      operationId: PolicyService_ReassessPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - PolicyService
  /v1/policies/{id}:
    get:
      summary: GetPolicy returns the requested policy by ID.
      operationId: PolicyService_GetPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
    delete:
      summary: DeletePolicy removes a policy by ID.
      operationId: PolicyService_DeletePolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
    put:
      summary: PutPolicy modifies an existing policy.
      operationId: PolicyService_PutPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
    patch:
      summary: PatchPolicy edits an existing policy.
      operationId: PolicyService_PatchPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PatchPolicyRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/{id}/mitrevectors:
    get:
      summary: GetMitreVectorsForPolicy returns the requested policy by ID.
      operationId: PolicyService_GetPolicyMitreVectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPolicyMitreVectorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: options.excludePolicy
          description: If set to true, policy is excluded from the response.
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PolicyService
  /v1/policies/{policyId}/notifiers:
    patch:
      summary: EnableDisablePolicyNotification enables or disables notifications for a policy by ID.
      operationId: PolicyService_EnableDisablePolicyNotification
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EnableDisablePolicyNotificationRequest'
        required: true
      tags:
        - PolicyService
  /v1/policyCategories:
    get:
      summary: GetPolicyCategories returns the policy categories.
      operationId: PolicyService_GetPolicyCategories
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyCategoriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - PolicyService
  /v1/policyCategories/{category}:
    delete:
      summary: DeletePolicyCategory removes the given policy category.
      operationId: PolicyService_DeletePolicyCategory
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
  /v1/policyCategories/{oldCategory}:
    put:
      summary: RenamePolicyCategory renames the given policy category.
      operationId: PolicyService_RenamePolicyCategory
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: oldCategory
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RenamePolicyCategoryRequest'
        required: true
      tags:
        - PolicyService
  /v1/probeupload/getexisting:
    post:
      operationId: ProbeUploadService_GetExistingProbes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExistingProbesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ProbeUploadService
  /v1/processbaselines:
    delete:
      summary: '`DeleteProcessBaselines` deletes baselines.'
      operationId: ProcessBaselineService_DeleteProcessBaselines
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteProcessBaselinesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ProcessBaselineService
    put:
      summary: |-
        `AddToProcessBaselines` adds a list of process
        names to each of a list of process baselines.
      operationId: ProcessBaselineService_UpdateProcessBaselines
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateProcessBaselinesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateProcessBaselinesRequest'
        required: true
      tags:
        - ProcessBaselineService
  /v1/processbaselines/key:
    get:
      summary: |-
        `GetProcessBaselineById` returns the single
        process baseline referenced by the given ID.
      operationId: ProcessBaselineService_GetProcessBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageProcessBaseline'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: key.deploymentId
          description: |-
            The idea is for the keys to be flexible.
            Only certain combinations of these will be supported.
          in: query
          required: false
          schema:
            type: string
        - name: key.containerName
          in: query
          required: false
          schema:
            type: string
        - name: key.clusterId
          in: query
          required: false
          schema:
            type: string
        - name: key.namespace
          in: query
          required: false
          schema:
            type: string
      tags:
        - ProcessBaselineService
  /v1/processbaselines/lock:
    put:
      summary: |-
        `LockProcessBaselines` accepts a list of baseline IDs, locks
        those baselines, and returns the updated baseline objects.
      operationId: ProcessBaselineService_LockProcessBaselines
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateProcessBaselinesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1LockProcessBaselinesRequest'
        required: true
      tags:
        - ProcessBaselineService
  /v1/processes/deployment/{deploymentId}:
    get:
      summary: GetProcessesByDeployment returns the processes executed in the given deployment.
      operationId: ProcessService_GetProcessesByDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetProcessesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ProcessService
  /v1/processes/deployment/{deploymentId}/grouped:
    get:
      summary: GetGroupedProcessByDeployment returns all the processes executed grouped by deployment.
      operationId: ProcessService_GetGroupedProcessByDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetGroupedProcessesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ProcessService
  /v1/processes/deployment/{deploymentId}/grouped/container:
    get:
      summary: GetGroupedProcessByDeploymentAndContainer returns all the processes executed grouped by deployment and container.
      operationId: ProcessService_GetGroupedProcessByDeploymentAndContainer
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetGroupedProcessesWithContainerResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ProcessService
  /v1/processwhitelists:
    delete:
      summary: DeleteProcessWhitelists deletes whitelists
      operationId: ProcessWhitelistService_DeleteProcessWhitelists
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteProcessWhitelistsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ProcessWhitelistService
    put:
      summary: AddToProcessWhitelists adds a list of process names to each of a list of process baselines
      operationId: ProcessWhitelistService_UpdateProcessWhitelists
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateProcessWhitelistsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateProcessWhitelistsRequest'
        required: true
      tags:
        - ProcessWhitelistService
  /v1/processwhitelists/key:
    get:
      summary: GetProcessWhitelistById returns the single process whitelist referenced by the given ID.
      operationId: ProcessWhitelistService_GetProcessWhitelist
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageProcessBaseline'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: key.deploymentId
          description: |-
            The idea is for the keys to be flexible.
            Only certain combinations of these will be supported.
          in: query
          required: false
          schema:
            type: string
        - name: key.containerName
          in: query
          required: false
          schema:
            type: string
        - name: key.clusterId
          in: query
          required: false
          schema:
            type: string
        - name: key.namespace
          in: query
          required: false
          schema:
            type: string
      tags:
        - ProcessWhitelistService
  /v1/processwhitelists/lock:
    put:
      summary: LockProcessWhitelists accepts a list of baseline IDs, locks those baselines, and returns the updated baseline objects
      operationId: ProcessWhitelistService_LockProcessWhitelists
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateProcessWhitelistsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1LockProcessWhitelistsRequest'
        required: true
      tags:
        - ProcessWhitelistService
  /v1/rbac/bindings:
    get:
      operationId: RbacService_ListRoleBindings
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRoleBindingsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - RbacService
  /v1/rbac/bindings/{id}:
    get:
      operationId: RbacService_GetRoleBinding
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRoleBindingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RbacService
  /v1/rbac/roles:
    get:
      operationId: RbacService_ListRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRolesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - RbacService
  /v1/rbac/roles/{id}:
    get:
      operationId: RbacService_GetRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRoleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RbacService
  /v1/rbac/subject/{id}:
    get:
      summary: |-
        Subjects served from this API are Groups and Users only.
        Id in this case is the Name field, since for users and groups, that is unique, and subjects do not have IDs.
      operationId: RbacService_GetSubject
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetSubjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RbacService
  /v1/rbac/subjects:
    get:
      operationId: RbacService_ListSubjects
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSubjectsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - RbacService
  /v1/computeeffectiveaccessscope:
    post:
      summary: ComputeEffectiveAccessScope
      description: |-
        Returns effective access scope based on the rules in the request. Does
        not persist anything; not idempotent due to possible changes to clusters
        and namespaces. POST is chosen due to potentially large payload.

        There are advantages in both keeping the response slim and detailed. If
        only IDs of selected clusters and namespaces are included, response
        latency and processing time are lower but the caller shall overlay the
        response with its view of the world which is susceptible to consistency
        issues. Listing all clusters and namespaces with related metadata is
        convenient for the caller but bloat the message with secondary data.

        We let the caller decide what level of detail they would like to have:

          * Minimal, when only roots of included subtrees are listed by their
            IDs. Clusters can be either INCLUDED (its namespaces are included but
            are not listed) or PARTIAL (at least one namespace is explicitly
            included). Namespaces can only be INCLUDED.

          * Standard [default], when all known clusters and namespaces are listed
            with their IDs and names. Clusters can be INCLUDED (all its
            namespaces are explicitly listed as INCLUDED), PARTIAL (all its
            namespaces are explicitly listed, some as INCLUDED and some as
            EXCLUDED), and EXCLUDED (all its namespaces are explicitly listed as
            EXCLUDED). Namespaces can be either INCLUDED or EXCLUDED.

          * High, when every cluster and namespace is augmented with metadata.
      operationId: RoleService_ComputeEffectiveAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageEffectiveAccessScope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: detail
          in: query
          required: false
          schema:
            type: string
            enum:
              - STANDARD
              - MINIMAL
              - HIGH
            default: STANDARD
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeEffectiveAccessScopeRequestPayload'
        required: true
      tags:
        - RoleService
  /v1/mypermissions:
    get:
      operationId: RoleService_GetMyPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - RoleService
  /v1/permissionsets:
    get:
      operationId: RoleService_ListPermissionSets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPermissionSetsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - RoleService
    post:
      summary: PostPermissionSet
      description: PermissionSet.id is disallowed in request and set in response.
      operationId: RoleService_PostPermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePermissionSet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storagePermissionSet'
      tags:
        - RoleService
  /v1/permissionsets/{id}:
    get:
      operationId: RoleService_GetPermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePermissionSet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    delete:
      operationId: RoleService_DeletePermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    put:
      operationId: RoleService_PutPermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          description: id is generated and cannot be changed.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storagePermissionSet'
      tags:
        - RoleService
  /v1/resources:
    get:
      operationId: RoleService_GetResources
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetResourcesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - RoleService
  /v1/roles:
    get:
      operationId: RoleService_GetRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRolesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - RoleService
  /v1/roles/{id}:
    get:
      operationId: RoleService_GetRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageRole'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    delete:
      operationId: RoleService_DeleteRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
  /v1/roles/{name}:
    post:
      operationId: RoleService_CreateRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageRole'
      tags:
        - RoleService
    put:
      operationId: RoleService_UpdateRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: name
          description: '`name` and `description` are provided by the user and can be changed.'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageRole'
      tags:
        - RoleService
  /v1/simpleaccessscopes:
    get:
      operationId: RoleService_ListSimpleAccessScopes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSimpleAccessScopesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - RoleService
    post:
      summary: PostSimpleAccessScope
      description: SimpleAccessScope.id is disallowed in request and set in response.
      operationId: RoleService_PostSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSimpleAccessScope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/storageSimpleAccessScope'
      tags:
        - RoleService
  /v1/simpleaccessscopes/{id}:
    get:
      operationId: RoleService_GetSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSimpleAccessScope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    delete:
      operationId: RoleService_DeleteSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    put:
      operationId: RoleService_PutSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          description: '`id` is generated and cannot be changed.'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageSimpleAccessScope'
      tags:
        - RoleService
  /v1/scopedaccessctrl/config:
    post:
      summary: AddAuthzPluginConfig creates a scoped access control plugin.
      operationId: ScopedAccessControlService_AddAuthzPluginConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthzPluginConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: updatePassword
          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: '#/components/requestBodies/storageAuthzPluginConfig'
      tags:
        - ScopedAccessControlService
  /v1/scopedaccessctrl/config/{config.id}:
    put:
      summary: UpdateAuthzPluginConfig modifies a scoped access control plugin.
      operationId: ScopedAccessControlService_UpdateAuthzPluginConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthzPluginConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: config.id
          in: path
          required: true
          schema:
            type: string
        - name: updatePassword
          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: '#/components/requestBodies/storageAuthzPluginConfig'
      tags:
        - ScopedAccessControlService
    patch:
      summary: UpdateAuthzPluginConfig modifies a scoped access control plugin.
      operationId: ScopedAccessControlService_UpdateAuthzPluginConfig2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthzPluginConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: config.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/v1UpsertAuthzPluginConfigRequest'
      tags:
        - ScopedAccessControlService
  /v1/scopedaccessctrl/config/{id}:
    delete:
      summary: DeleteAuthzPluginConfig removes a scoped access control plugin.
      operationId: ScopedAccessControlService_DeleteAuthzPluginConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ScopedAccessControlService
  /v1/scopedaccessctrl/configs:
    get:
      summary: GetAuthzPluginConfigs returns all scoped access control plugins.
      operationId: ScopedAccessControlService_GetAuthzPluginConfigs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAuthzPluginConfigsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ScopedAccessControlService
  /v1/scopedaccessctrl/test:
    post:
      summary: DryRunAuthzPluginConfig checks if the given scoped access control plugin is correctly configured.
      operationId: ScopedAccessControlService_DryRunAuthzPluginConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: updatePassword
          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: '#/components/requestBodies/storageAuthzPluginConfig'
      tags:
        - ScopedAccessControlService
  /v1/scopedaccessctrl/test/updated:
    post:
      summary: DryRunAuthzPluginConfig checks if the given scoped access control plugin is correctly configured.
      operationId: ScopedAccessControlService_DryRunAuthzPluginConfig2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        $ref: '#/components/requestBodies/v1UpsertAuthzPluginConfigRequest'
      tags:
        - ScopedAccessControlService
  /v1/search:
    get:
      operationId: SearchService_Search
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: categories
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SEARCH_UNSET
                - ALERTS
                - IMAGES
                - IMAGE_COMPONENTS
                - IMAGE_VULN_EDGE
                - IMAGE_COMPONENT_EDGE
                - POLICIES
                - DEPLOYMENTS
                - ACTIVE_COMPONENT
                - PODS
                - SECRETS
                - PROCESS_INDICATORS
                - COMPLIANCE
                - CLUSTERS
                - NAMESPACES
                - NODES
                - NODE_VULN_EDGE
                - NODE_COMPONENT_EDGE
                - COMPLIANCE_STANDARD
                - COMPLIANCE_CONTROL_GROUP
                - COMPLIANCE_CONTROL
                - SERVICE_ACCOUNTS
                - ROLES
                - ROLEBINDINGS
                - PROCESS_BASELINES
                - SUBJECTS
                - RISKS
                - VULNERABILITIES
                - COMPONENT_VULN_EDGE
                - CLUSTER_VULN_EDGE
                - NETWORK_ENTITY
      tags:
        - SearchService
  /v1/search/autocomplete:
    get:
      operationId: SearchService_Autocomplete
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AutocompleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: categories
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SEARCH_UNSET
                - ALERTS
                - IMAGES
                - IMAGE_COMPONENTS
                - IMAGE_VULN_EDGE
                - IMAGE_COMPONENT_EDGE
                - POLICIES
                - DEPLOYMENTS
                - ACTIVE_COMPONENT
                - PODS
                - SECRETS
                - PROCESS_INDICATORS
                - COMPLIANCE
                - CLUSTERS
                - NAMESPACES
                - NODES
                - NODE_VULN_EDGE
                - NODE_COMPONENT_EDGE
                - COMPLIANCE_STANDARD
                - COMPLIANCE_CONTROL_GROUP
                - COMPLIANCE_CONTROL
                - SERVICE_ACCOUNTS
                - ROLES
                - ROLEBINDINGS
                - PROCESS_BASELINES
                - SUBJECTS
                - RISKS
                - VULNERABILITIES
                - COMPONENT_VULN_EDGE
                - CLUSTER_VULN_EDGE
                - NETWORK_ENTITY
      tags:
        - SearchService
  /v1/search/metadata/options:
    get:
      operationId: SearchService_Options
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchOptionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: categories
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SEARCH_UNSET
                - ALERTS
                - IMAGES
                - IMAGE_COMPONENTS
                - IMAGE_VULN_EDGE
                - IMAGE_COMPONENT_EDGE
                - POLICIES
                - DEPLOYMENTS
                - ACTIVE_COMPONENT
                - PODS
                - SECRETS
                - PROCESS_INDICATORS
                - COMPLIANCE
                - CLUSTERS
                - NAMESPACES
                - NODES
                - NODE_VULN_EDGE
                - NODE_COMPONENT_EDGE
                - COMPLIANCE_STANDARD
                - COMPLIANCE_CONTROL_GROUP
                - COMPLIANCE_CONTROL
                - SERVICE_ACCOUNTS
                - ROLES
                - ROLEBINDINGS
                - PROCESS_BASELINES
                - SUBJECTS
                - RISKS
                - VULNERABILITIES
                - COMPONENT_VULN_EDGE
                - CLUSTER_VULN_EDGE
                - NETWORK_ENTITY
      tags:
        - SearchService
  /v1/secrets:
    get:
      summary: ListSecrets returns the list of secrets.
      operationId: SecretService_ListSecrets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSecretsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - SecretService
  /v1/secrets/{id}:
    get:
      summary: GetSecret returns a secret given its ID.
      operationId: SecretService_GetSecret
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSecret'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SecretService
  /v1/secretscount:
    get:
      summary: CountSecrets returns the number of secrets.
      operationId: SecretService_CountSecrets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountSecretsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - SecretService
  /v1/sensorupgrades/cluster/{id}:
    post:
      operationId: SensorUpgradeService_TriggerSensorUpgrade
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SensorUpgradeService
  /v1/sensorupgrades/config:
    get:
      operationId: SensorUpgradeService_GetSensorUpgradeConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetSensorUpgradeConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - SensorUpgradeService
    post:
      operationId: SensorUpgradeService_UpdateSensorUpgradeConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateSensorUpgradeConfigRequest'
        required: true
      tags:
        - SensorUpgradeService
  /v1/sensorupgrades/rotateclustercerts/{id}:
    post:
      operationId: SensorUpgradeService_TriggerSensorCertRotation
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SensorUpgradeService
  /v1/serviceaccounts:
    get:
      operationId: ServiceAccountService_ListServiceAccounts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListServiceAccountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ServiceAccountService
  /v1/serviceaccounts/{id}:
    get:
      operationId: ServiceAccountService_GetServiceAccount
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetServiceAccountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ServiceAccountService
  /v1/authorities:
    get:
      summary: GetAuthorities returns the authorities currently in use.
      operationId: ServiceIdentityService_GetAuthorities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Authorities'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ServiceIdentityService
  /v1/serviceIdentities:
    get:
      operationId: ServiceIdentityService_GetServiceIdentities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceIdentityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - ServiceIdentityService
    post:
      summary: |-
        CreateServiceIdentity creates a new key pair and certificate.
        The key and certificate are not retained and can never be retrieved again.
      operationId: ServiceIdentityService_CreateServiceIdentity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateServiceIdentityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateServiceIdentityRequest'
        required: true
      tags:
        - ServiceIdentityService
  /v1/summary/counts:
    get:
      operationId: SummaryService_GetSummaryCounts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SummaryCountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - SummaryService
  /v1/telemetry/configure:
    get:
      operationId: TelemetryService_GetTelemetryConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageTelemetryConfiguration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - TelemetryService
    put:
      operationId: TelemetryService_ConfigureTelemetry
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageTelemetryConfiguration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConfigureTelemetryRequest'
        required: true
      tags:
        - TelemetryService
  /v1/users:
    get:
      operationId: UserService_GetUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - UserService
  /v1/users/{id}:
    get:
      operationId: UserService_GetUser
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageUser'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - UserService
  /v1/usersattributes:
    get:
      operationId: UserService_GetUsersAttributes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUsersAttributesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      tags:
        - UserService
servers:
  - url: https://k8s.demo.stackrox.com
components:
  requestBodies:
    storageGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageGroup'
      required: true
    v1UpsertAuthzPluginConfigRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1UpsertAuthzPluginConfigRequest'
      required: true
    v1ResourceByID:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1ResourceByID'
      required: true
    storageNetworkPolicyModification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageNetworkPolicyModification'
      required: true
    v1UpdateNotifierRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1UpdateNotifierRequest'
      required: true
    storageAuthzPluginConfig:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageAuthzPluginConfig'
      required: true
    storageRole:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageRole'
      required: true
    v1UpdateExternalBackupRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1UpdateExternalBackupRequest'
      required: true
    storageImageIntegration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageImageIntegration'
      required: true
    storageSimpleAccessScope:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageSimpleAccessScope'
      required: true
    storageAuthProvider:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageAuthProvider'
      required: true
    storageExternalBackup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageExternalBackup'
      required: true
    storageCluster:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageCluster'
      required: true
    v1UpdateImageIntegrationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1UpdateImageIntegrationRequest'
      required: true
    storageNotifier:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageNotifier'
      required: true
    storagePolicy:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storagePolicy'
      required: true
    storagePermissionSet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storagePermissionSet'
      required: true
  schemas:
    AlertDeploymentContainer:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageContainerImage'
        name:
          type: string
    AlertEnforcement:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/storageEnforcementAction'
        message:
          type: string
    AlertGroupAlertCounts:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/storageSeverity'
        count:
          type: string
          format: int64
    AlertProcessViolation:
      type: object
      properties:
        message:
          type: string
        processes:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessIndicator'
    AlertResource:
      type: object
      properties:
        resourceType:
          $ref: '#/components/schemas/AlertResourceResourceType'
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
      title: Represents an alert on a kubernetes resource (configmaps, secrets, etc.)
    AlertResourceResourceType:
      type: string
      enum:
        - UNKNOWN
        - SECRETS
        - CONFIGMAPS
      default: UNKNOWN
    AlertViolation:
      type: object
      properties:
        message:
          type: string
        keyValueAttrs:
          $ref: '#/components/schemas/ViolationKeyValueAttrs'
        networkFlowInfo:
          $ref: '#/components/schemas/ViolationNetworkFlowInfo'
        type:
          $ref: '#/components/schemas/AlertViolationType'
        time:
          type: string
          format: date-time
          description: |-
            Indicates violation time. This field differs from top-level field 'time' which represents last time the alert
            occurred in case of multiple occurrences of the policy alert. As of 55.0, this field is set only for kubernetes
            event violations, but may not be limited to it in future.
    AlertViolationType:
      type: string
      enum:
        - GENERIC
        - K8S_EVENT
        - NETWORK_FLOW
      default: GENERIC
    ClusterAlertsAlertEvents:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/storageSeverity'
        events:
          type: array
          items:
            $ref: '#/components/schemas/v1AlertEvent'
    EnvironmentConfigEnvVarSource:
      type: string
      enum:
        - UNSET
        - RAW
        - SECRET_KEY
        - CONFIG_MAP_KEY
        - FIELD
        - RESOURCE_FIELD
        - UNKNOWN
      default: UNSET
      title: For any update to EnvVarSource, please also update 'ui/src/messages/common.js'
    GetAlertTimeseriesResponseClusterAlerts:
      type: object
      properties:
        cluster:
          type: string
        severities:
          type: array
          items:
            $ref: '#/components/schemas/ClusterAlertsAlertEvents'
    GetAlertsCountsRequestRequestGroup:
      type: string
      enum:
        - UNSET
        - CATEGORY
        - CLUSTER
      default: UNSET
    GetAlertsCountsResponseAlertGroup:
      type: object
      properties:
        group:
          type: string
        counts:
          type: array
          items:
            $ref: '#/components/schemas/AlertGroupAlertCounts'
    KeyValueAttrsKeyValueAttr:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ListAlertCommonEntityInfo:
      type: object
      properties:
        clusterName:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        namespaceId:
          type: string
        resourceType:
          $ref: '#/components/schemas/storageListAlertResourceType'
      description: Fields common to all entities that an alert might belong to.
    ListAlertResourceEntity:
      type: object
      properties:
        name:
          type: string
    NetworkFlowInfoEntity:
      type: object
      properties:
        name:
          type: string
        entityType:
          $ref: '#/components/schemas/storageNetworkEntityInfoType'
        deploymentNamespace:
          type: string
        deploymentType:
          type: string
        port:
          type: integer
          format: int32
    PolicyMitreAttackVectors:
      type: object
      properties:
        tactic:
          type: string
        techniques:
          type: array
          items:
            type: string
    PortConfigExposureLevel:
      type: string
      enum:
        - UNSET
        - EXTERNAL
        - NODE
        - INTERNAL
        - HOST
      default: UNSET
    ProcessSignalLineageInfo:
      type: object
      properties:
        parentUid:
          type: integer
          format: int64
        parentExecFilePath:
          type: string
    ViolationKeyValueAttrs:
      type: object
      properties:
        attrs:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueAttrsKeyValueAttr'
    ViolationNetworkFlowInfo:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
        source:
          $ref: '#/components/schemas/NetworkFlowInfoEntity'
        destination:
          $ref: '#/components/schemas/NetworkFlowInfoEntity'
    protobufAny:
      type: object
      properties:
        typeUrl:
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
        value:
          type: string
          format: byte
          description: Must be a valid serialized protocol buffer of the above specified type.
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := ptypes.MarshalAny(foo)
             ...
             foo := &pb.Foo{}
             if err := ptypes.UnmarshalAny(any, foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    runtimeError:
      type: object
      properties:
        error:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    storageAlert:
      type: object
      properties:
        id:
          type: string
        policy:
          $ref: '#/components/schemas/storagePolicy'
        lifecycleStage:
          $ref: '#/components/schemas/storageLifecycleStage'
        deployment:
          $ref: '#/components/schemas/storageAlertDeployment'
        image:
          $ref: '#/components/schemas/storageContainerImage'
        resource:
          $ref: '#/components/schemas/AlertResource'
        violations:
          type: array
          items:
            $ref: '#/components/schemas/AlertViolation'
          description: For run-time phase alert, a maximum of 40 violations are retained.
        processViolation:
          $ref: '#/components/schemas/AlertProcessViolation'
        enforcement:
          $ref: '#/components/schemas/AlertEnforcement'
        time:
          type: string
          format: date-time
        firstOccurred:
          type: string
          format: date-time
        resolvedAt:
          type: string
          format: date-time
          description: The time at which the alert was resolved. Only set if ViolationState is RESOLVED.
        state:
          $ref: '#/components/schemas/storageViolationState'
        snoozeTill:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
    storageAlertDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        clusterId:
          type: string
        clusterName:
          type: string
        containers:
          type: array
          items:
            $ref: '#/components/schemas/AlertDeploymentContainer'
        annotations:
          type: object
          additionalProperties:
            type: string
        inactive:
          type: boolean
    storageBooleanOperator:
      type: string
      enum:
        - OR
        - AND
      default: OR
    storageComparator:
      type: string
      enum:
        - LESS_THAN
        - LESS_THAN_OR_EQUALS
        - EQUALS
        - GREATER_THAN_OR_EQUALS
        - GREATER_THAN
      default: LESS_THAN
    storageComponent:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    storageContainerImage:
      type: object
      properties:
        id:
          type: string
          title: These tags maintain backwards compatibility with the previously embedded storage.Image
        name:
          $ref: '#/components/schemas/storageImageName'
        notPullable:
          type: boolean
    storageDockerfileLineRuleField:
      type: object
      properties:
        instruction:
          type: string
        value:
          type: string
    storageEnforcementAction:
      type: string
      enum:
        - UNSET_ENFORCEMENT
        - SCALE_TO_ZERO_ENFORCEMENT
        - UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT
        - KILL_POD_ENFORCEMENT
        - FAIL_BUILD_ENFORCEMENT
        - FAIL_KUBE_REQUEST_ENFORCEMENT
        - FAIL_DEPLOYMENT_CREATE_ENFORCEMENT
        - FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT
      default: UNSET_ENFORCEMENT
      description: |2-
         - FAIL_KUBE_REQUEST_ENFORCEMENT: FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.
         - FAIL_DEPLOYMENT_CREATE_ENFORCEMENT: FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates.
         - FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT: FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.
    storageEventSource:
      type: string
      enum:
        - NOT_APPLICABLE
        - DEPLOYMENT_EVENT
        - AUDIT_LOG_EVENT
      default: NOT_APPLICABLE
    storageExclusion:
      type: object
      properties:
        name:
          type: string
        deployment:
          $ref: '#/components/schemas/storageExclusionDeployment'
        image:
          $ref: '#/components/schemas/storageExclusionImage'
        expiration:
          type: string
          format: date-time
    storageExclusionDeployment:
      type: object
      properties:
        name:
          type: string
        scope:
          $ref: '#/components/schemas/storageScope'
    storageExclusionImage:
      type: object
      properties:
        name:
          type: string
    storageHostMountPolicy:
      type: object
      properties:
        readOnly:
          type: boolean
    storageImageName:
      type: object
      properties:
        registry:
          type: string
        remote:
          type: string
        tag:
          type: string
        fullName:
          type: string
    storageImageNamePolicy:
      type: object
      properties:
        registry:
          type: string
        remote:
          type: string
        tag:
          type: string
    storageKeyValuePolicy:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        envVarSource:
          $ref: '#/components/schemas/EnvironmentConfigEnvVarSource'
    storageL4Protocol:
      type: string
      enum:
        - L4_PROTOCOL_UNKNOWN
        - L4_PROTOCOL_TCP
        - L4_PROTOCOL_UDP
        - L4_PROTOCOL_ICMP
        - L4_PROTOCOL_RAW
        - L4_PROTOCOL_SCTP
        - L4_PROTOCOL_ANY
      default: L4_PROTOCOL_UNKNOWN
    storageLifecycleStage:
      type: string
      enum:
        - DEPLOY
        - BUILD
        - RUNTIME
      default: DEPLOY
    storageListAlert:
      type: object
      properties:
        id:
          type: string
        lifecycleStage:
          $ref: '#/components/schemas/storageLifecycleStage'
        time:
          type: string
          format: date-time
        policy:
          $ref: '#/components/schemas/storageListAlertPolicy'
        state:
          $ref: '#/components/schemas/storageViolationState'
        enforcementCount:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        enforcementAction:
          $ref: '#/components/schemas/storageEnforcementAction'
        commonEntityInfo:
          $ref: '#/components/schemas/ListAlertCommonEntityInfo'
        deployment:
          $ref: '#/components/schemas/storageListAlertDeployment'
        resource:
          $ref: '#/components/schemas/ListAlertResourceEntity'
    storageListAlertDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterName:
          type: string
          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
        namespace:
          type: string
          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
        clusterId:
          type: string
          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
        inactive:
          type: boolean
        namespaceId:
          type: string
          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
    storageListAlertPolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        severity:
          $ref: '#/components/schemas/storageSeverity'
        description:
          type: string
        categories:
          type: array
          items:
            type: string
    storageListAlertResourceType:
      type: string
      enum:
        - DEPLOYMENT
        - SECRETS
        - CONFIGMAPS
      default: DEPLOYMENT
      title: |-
        A special ListAlert-only enumeration of all resource types. Unlike Alert.Resource.ResourceType this also includes deployment as a type
        This must be kept in sync with Alert.Resource.ResourceType (excluding the deployment value)
    storageNetworkEntityInfoType:
      type: string
      enum:
        - UNKNOWN_TYPE
        - DEPLOYMENT
        - INTERNET
        - LISTEN_ENDPOINT
        - EXTERNAL_SOURCE
      default: UNKNOWN_TYPE
    storageNumericalPolicy:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/storageComparator'
        value:
          type: number
          format: float
    storagePermissionLevel:
      type: string
      enum:
        - UNSET
        - NONE
        - DEFAULT
        - ELEVATED_IN_NAMESPACE
        - ELEVATED_CLUSTER_WIDE
        - CLUSTER_ADMIN
      default: UNSET
      title: |-
        For any update to PermissionLevel, also update:
        - pkg/searchbasedpolicies/builders/k8s_rbac.go
        - ui/src/messages/common.js
    storagePermissionPolicy:
      type: object
      properties:
        permissionLevel:
          $ref: '#/components/schemas/storagePermissionLevel'
      description: K8S RBAC Permission level configuration.
    storagePolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        rationale:
          type: string
        remediation:
          type: string
        disabled:
          type: boolean
        categories:
          type: array
          items:
            type: string
        fields:
          $ref: '#/components/schemas/storagePolicyFields'
        lifecycleStages:
          type: array
          items:
            $ref: '#/components/schemas/storageLifecycleStage'
        eventSource:
          $ref: '#/components/schemas/storageEventSource'
        whitelists:
          type: array
          items:
            $ref: '#/components/schemas/storageExclusion'
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/storageExclusion'
        scope:
          type: array
          items:
            $ref: '#/components/schemas/storageScope'
        severity:
          $ref: '#/components/schemas/storageSeverity'
        enforcementActions:
          type: array
          items:
            $ref: '#/components/schemas/storageEnforcementAction'
          description: |-
            FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates/updates.
            FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.
            FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.
        notifiers:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time
        SORTName:
          type: string
          description: For internal use only.
        SORTLifecycleStage:
          type: string
          description: For internal use only.
        SORTEnforcement:
          type: boolean
          description: For internal use only.
        policyVersion:
          type: string
        policySections:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/storagePolicySection'
        mitreAttackVectors:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/PolicyMitreAttackVectors'
        criteriaLocked:
          type: boolean
          description: Read-only field. If true, the policy's criteria fields are rendered read-only.
        mitreVectorsLocked:
          type: boolean
          description: Read-only field. If true, the policy's MITRE ATT&CK fields are rendered read-only.
    storagePolicyFields:
      type: object
      properties:
        imageName:
          $ref: '#/components/schemas/storageImageNamePolicy'
        imageAgeDays:
          type: string
          format: int64
        lineRule:
          $ref: '#/components/schemas/storageDockerfileLineRuleField'
        cvss:
          $ref: '#/components/schemas/storageNumericalPolicy'
        cve:
          type: string
        component:
          $ref: '#/components/schemas/storageComponent'
        scanAgeDays:
          type: string
          format: int64
        noScanExists:
          type: boolean
        env:
          $ref: '#/components/schemas/storageKeyValuePolicy'
        command:
          type: string
        args:
          type: string
        directory:
          type: string
        user:
          type: string
        volumePolicy:
          $ref: '#/components/schemas/storageVolumePolicy'
        portPolicy:
          $ref: '#/components/schemas/storagePortPolicy'
        requiredLabel:
          $ref: '#/components/schemas/storageKeyValuePolicy'
        requiredAnnotation:
          $ref: '#/components/schemas/storageKeyValuePolicy'
        disallowedAnnotation:
          $ref: '#/components/schemas/storageKeyValuePolicy'
        privileged:
          type: boolean
        dropCapabilities:
          type: array
          items:
            type: string
        addCapabilities:
          type: array
          items:
            type: string
        containerResourcePolicy:
          $ref: '#/components/schemas/storageResourcePolicy'
        processPolicy:
          $ref: '#/components/schemas/storageProcessPolicy'
        readOnlyRootFs:
          type: boolean
        fixedBy:
          type: string
        portExposurePolicy:
          $ref: '#/components/schemas/storagePortExposurePolicy'
        permissionPolicy:
          $ref: '#/components/schemas/storagePermissionPolicy'
        hostMountPolicy:
          $ref: '#/components/schemas/storageHostMountPolicy'
        whitelistEnabled:
          type: boolean
        requiredImageLabel:
          $ref: '#/components/schemas/storageKeyValuePolicy'
        disallowedImageLabel:
          $ref: '#/components/schemas/storageKeyValuePolicy'
      title: 'Next Available Tag: 29'
    storagePolicyGroup:
      type: object
      properties:
        fieldName:
          type: string
        booleanOperator:
          $ref: '#/components/schemas/storageBooleanOperator'
        negate:
          type: boolean
        values:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicyValue'
    storagePolicySection:
      type: object
      properties:
        sectionName:
          type: string
        policyGroups:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicyGroup'
    storagePolicyValue:
      type: object
      properties:
        value:
          type: string
    storagePortExposurePolicy:
      type: object
      properties:
        exposureLevels:
          type: array
          items:
            $ref: '#/components/schemas/PortConfigExposureLevel'
    storagePortPolicy:
      type: object
      properties:
        port:
          type: integer
          format: int32
        protocol:
          type: string
    storageProcessIndicator:
      type: object
      properties:
        id:
          type: string
          title: A unique uuid for the Indicator message
        deploymentId:
          type: string
        containerName:
          type: string
        podId:
          type: string
          title: Pod name
        podUid:
          type: string
        signal:
          $ref: '#/components/schemas/storageProcessSignal'
        clusterId:
          type: string
        namespace:
          type: string
        containerStartTime:
          type: string
          format: date-time
      title: 'Next available tag: 12'
    storageProcessPolicy:
      type: object
      properties:
        name:
          type: string
        args:
          type: string
        ancestor:
          type: string
        uid:
          type: string
    storageProcessSignal:
      type: object
      properties:
        id:
          type: string
          description: |-
            A unique UUID for identifying the message
            We have this here instead of at the top level
            because we want to have each message to be
            self contained.
        containerId:
          type: string
          title: ID of container associated with this process
        time:
          type: string
          format: date-time
          title: Process creation time
        name:
          type: string
          title: Process name
        args:
          type: string
          title: Process arguments
        execFilePath:
          type: string
          title: Process executable file path
        pid:
          type: integer
          format: int64
          title: Host process ID
        uid:
          type: integer
          format: int64
          title: Real user ID
        gid:
          type: integer
          format: int64
          title: Real group ID
        lineage:
          type: array
          items:
            type: string
          title: Process Lineage
        scraped:
          type: boolean
          title: Signal origin
        lineageInfo:
          type: array
          items:
            $ref: '#/components/schemas/ProcessSignalLineageInfo'
          title: Process LineageInfo
    storageResourcePolicy:
      type: object
      properties:
        cpuResourceRequest:
          $ref: '#/components/schemas/storageNumericalPolicy'
        cpuResourceLimit:
          $ref: '#/components/schemas/storageNumericalPolicy'
        memoryResourceRequest:
          $ref: '#/components/schemas/storageNumericalPolicy'
        memoryResourceLimit:
          $ref: '#/components/schemas/storageNumericalPolicy'
    storageScope:
      type: object
      properties:
        cluster:
          type: string
        namespace:
          type: string
        label:
          $ref: '#/components/schemas/storageScopeLabel'
    storageScopeLabel:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    storageSeverity:
      type: string
      enum:
        - UNSET_SEVERITY
        - LOW_SEVERITY
        - MEDIUM_SEVERITY
        - HIGH_SEVERITY
        - CRITICAL_SEVERITY
      default: UNSET_SEVERITY
    storageViolationState:
      type: string
      enum:
        - ACTIVE
        - SNOOZED
        - RESOLVED
        - ATTEMPTED
      default: ACTIVE
    storageVolumePolicy:
      type: object
      properties:
        name:
          type: string
        source:
          type: string
        destination:
          type: string
        readOnly:
          type: boolean
        type:
          type: string
    v1AlertEvent:
      type: object
      properties:
        time:
          type: string
          format: int64
        type:
          $ref: '#/components/schemas/v1Type'
        id:
          type: string
    v1CountAlertsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DeleteAlertsResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int64
        dryRun:
          type: boolean
    v1Empty:
      type: object
    v1GetAlertTimeseriesResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/GetAlertTimeseriesResponseClusterAlerts'
    v1GetAlertsCountsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GetAlertsCountsResponseAlertGroup'
    v1GetAlertsGroupResponse:
      type: object
      properties:
        alertsByPolicies:
          type: array
          items:
            $ref: '#/components/schemas/v1GetAlertsGroupResponsePolicyGroup'
    v1GetAlertsGroupResponsePolicyGroup:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storageListAlertPolicy'
        numAlerts:
          type: string
          format: int64
    v1ListAlertsRequest:
      type: object
      properties:
        query:
          type: string
        pagination:
          $ref: '#/components/schemas/v1Pagination'
    v1ListAlertsResponse:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/storageListAlert'
    v1Pagination:
      type: object
      properties:
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        sortOption:
          $ref: '#/components/schemas/v1SortOption'
    v1RawQuery:
      type: object
      properties:
        query:
          type: string
        pagination:
          $ref: '#/components/schemas/v1Pagination'
      description: |-
        RawQuery represents the search query string.
        The format of the query string is "<field name>:<value,value,...>+<field name>:<value, value,...>+..."
        For example:
        To search for deployments named "central" and "sensor" in the namespace "stackrox", the query string would be
        "Deployment:central,sensor+Namespace:stackrox"
        RawQuery is used in ListAPIs to search for a particular object.
    v1ResolveAlertRequest:
      type: object
      properties:
        id:
          type: string
        whitelist:
          type: boolean
        addToBaseline:
          type: boolean
    v1ResolveAlertsRequest:
      type: object
      properties:
        query:
          type: string
    v1SnoozeAlertRequest:
      type: object
      properties:
        id:
          type: string
        snoozeTill:
          type: string
          format: date-time
    v1SortOption:
      type: object
      properties:
        field:
          type: string
        reversed:
          type: boolean
    v1Type:
      type: string
      enum:
        - CREATED
        - REMOVED
      default: CREATED
    storageTokenMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            type: string
        issuedAt:
          type: string
          format: date-time
        expiration:
          type: string
          format: date-time
        revoked:
          type: boolean
        role:
          type: string
    v1GenerateTokenRequest:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
        roles:
          type: array
          items:
            type: string
    v1GenerateTokenResponse:
      type: object
      properties:
        token:
          type: string
        metadata:
          $ref: '#/components/schemas/storageTokenMetadata'
    v1GetAPITokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/storageTokenMetadata'
    GetLoginAuthProvidersResponseLoginAuthProvider:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        loginUrl:
          type: string
    UserInfoResourceToAccess:
      type: object
      properties:
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: |-
        ResourceToAccess represents a collection of permissions. It is wire
        compatible with the old format of storage.Role and replaces it in
        places where only aggregated permissions are required.
    storageAccess:
      type: string
      enum:
        - NO_ACCESS
        - READ_ACCESS
        - READ_WRITE_ACCESS
      default: NO_ACCESS
    storageAuthProvider:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        uiEndpoint:
          type: string
        enabled:
          type: boolean
        config:
          type: object
          additionalProperties:
            type: string
        loginUrl:
          type: string
          description: The login URL will be provided by the backend, and may not be specified in a request.
        validated:
          type: boolean
        extraUiEndpoints:
          type: array
          items:
            type: string
          description: |-
            UI endpoints which to allow in addition to `ui_endpoint`. I.e., if a login request
            is coming from any of these, the auth request will use these for the callback URL,
            not ui_endpoint.
        active:
          type: boolean
      title: 'Next Tag: 9'
    storageServiceIdentity:
      type: object
      properties:
        serial:
          type: string
          format: int64
        serialStr:
          type: string
        id:
          type: string
        type:
          $ref: '#/components/schemas/storageServiceType'
        initBundleId:
          type: string
    storageServiceType:
      type: string
      enum:
        - UNKNOWN_SERVICE
        - SENSOR_SERVICE
        - CENTRAL_SERVICE
        - REMOTE_SERVICE
        - COLLECTOR_SERVICE
        - MONITORING_UI_SERVICE
        - MONITORING_DB_SERVICE
        - MONITORING_CLIENT_SERVICE
        - BENCHMARK_SERVICE
        - SCANNER_SERVICE
        - SCANNER_DB_SERVICE
        - ADMISSION_CONTROL_SERVICE
      default: UNKNOWN_SERVICE
    storageUserInfo:
      type: object
      properties:
        username:
          type: string
        friendlyName:
          type: string
        permissions:
          $ref: '#/components/schemas/UserInfoResourceToAccess'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageUserInfoRole'
    storageUserInfoRole:
      type: object
      properties:
        name:
          type: string
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: |-
        Role is wire compatible with the old format of storage.Role and
        hence only includes role name and associated permissions.
    v1AuthStatus:
      type: object
      properties:
        userId:
          type: string
        serviceId:
          $ref: '#/components/schemas/storageServiceIdentity'
        expires:
          type: string
          format: date-time
        refreshUrl:
          type: string
        authProvider:
          $ref: '#/components/schemas/storageAuthProvider'
        userInfo:
          $ref: '#/components/schemas/storageUserInfo'
        userAttributes:
          type: array
          items:
            $ref: '#/components/schemas/v1UserAttribute'
    v1ExchangeTokenRequest:
      type: object
      properties:
        externalToken:
          type: string
          description: The external authentication token. The server will mask the value of this credential in responses and logs.
        type:
          type: string
        state:
          type: string
    v1ExchangeTokenResponse:
      type: object
      properties:
        token:
          type: string
        clientState:
          type: string
        test:
          type: boolean
        user:
          $ref: '#/components/schemas/v1AuthStatus'
    v1GetAuthProvidersResponse:
      type: object
      properties:
        authProviders:
          type: array
          items:
            $ref: '#/components/schemas/storageAuthProvider'
    v1GetLoginAuthProvidersResponse:
      type: object
      properties:
        authProviders:
          type: array
          items:
            $ref: '#/components/schemas/GetLoginAuthProvidersResponseLoginAuthProvider'
    v1UpdateAuthProviderRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        enabled:
          type: boolean
    v1UserAttribute:
      type: object
      properties:
        key:
          type: string
        values:
          type: array
          items:
            type: string
    ScheduleIntervalType:
      type: string
      enum:
        - UNSET
        - DAILY
        - WEEKLY
      default: UNSET
    ScheduleWeeklyInterval:
      type: object
      properties:
        day:
          type: integer
          format: int32
    storageExternalBackup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        schedule:
          $ref: '#/components/schemas/storageSchedule'
        backupsToKeep:
          type: integer
          format: int32
        s3:
          $ref: '#/components/schemas/storageS3Config'
        gcs:
          $ref: '#/components/schemas/storageGCSConfig'
        includeCertificates:
          type: boolean
    storageGCSConfig:
      type: object
      properties:
        bucket:
          type: string
        serviceAccount:
          type: string
          description: The service account for the storage integration. The server will mask the value of this credential in responses and logs.
        objectPrefix:
          type: string
        useWorkloadId:
          type: boolean
    storageS3Config:
      type: object
      properties:
        bucket:
          type: string
        useIam:
          type: boolean
        accessKeyId:
          type: string
          description: The access key ID for the storage integration. The server will mask the value of this credential in responses and logs.
        secretAccessKey:
          type: string
          description: The secret access key for the storage integration. The server will mask the value of this credential in responses and logs.
        region:
          type: string
        objectPrefix:
          type: string
        endpoint:
          type: string
    storageSchedule:
      type: object
      properties:
        intervalType:
          $ref: '#/components/schemas/ScheduleIntervalType'
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        weekly:
          $ref: '#/components/schemas/ScheduleWeeklyInterval'
    v1GetExternalBackupsResponse:
      type: object
      properties:
        externalBackups:
          type: array
          items:
            $ref: '#/components/schemas/storageExternalBackup'
    v1UpdateExternalBackupRequest:
      type: object
      properties:
        externalBackup:
          $ref: '#/components/schemas/storageExternalBackup'
        updatePassword:
          type: boolean
          description: When false, use the stored credentials of an existing external backup configuration given its ID.
    v1CentralUpgradeStatus:
      type: object
      properties:
        version:
          type: string
          title: Current Central Version
        forceRollbackTo:
          type: string
          description: The version of previous replica in Central. This is the version we can force rollback to.
        canRollbackAfterUpgrade:
          type: boolean
          description: If true, we can rollback to the current version if an upgrade failed.
        spaceRequiredForRollbackAfterUpgrade:
          type: string
          format: int64
          title: Current disk space stats for upgrade
        spaceAvailableForRollbackAfterUpgrade:
          type: string
          format: int64
    v1GetUpgradeStatusResponse:
      type: object
      properties:
        upgradeStatus:
          $ref: '#/components/schemas/v1CentralUpgradeStatus'
    InitBundleMetaImpactedCluster:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    InitBundleRevokeResponseInitBundleRevocationError:
      type: object
      properties:
        id:
          type: string
        error:
          type: string
        impactedClusters:
          type: array
          items:
            $ref: '#/components/schemas/InitBundleMetaImpactedCluster'
    storageUser:
      type: object
      properties:
        id:
          type: string
        authProviderId:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/storageUserAttribute'
      description: User is an object that allows us to track the roles a user is tied to, and how they logged in.
    storageUserAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    v1GetCAConfigResponse:
      type: object
      properties:
        helmValuesBundle:
          type: string
          format: byte
    v1InitBundleGenRequest:
      type: object
      properties:
        name:
          type: string
    v1InitBundleGenResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v1InitBundleMeta'
        helmValuesBundle:
          type: string
          format: byte
        kubectlBundle:
          type: string
          format: byte
    v1InitBundleMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        impactedClusters:
          type: array
          items:
            $ref: '#/components/schemas/InitBundleMetaImpactedCluster'
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/storageUser'
        expiresAt:
          type: string
          format: date-time
    v1InitBundleMetasResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1InitBundleMeta'
    v1InitBundleRevokeRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        confirmImpactedClustersIds:
          type: array
          items:
            type: string
    v1InitBundleRevokeResponse:
      type: object
      properties:
        initBundleRevocationErrors:
          type: array
          items:
            $ref: '#/components/schemas/InitBundleRevokeResponseInitBundleRevocationError'
        initBundleRevokedIds:
          type: array
          items:
            type: string
    ClusterHealthStatusHealthStatusLabel:
      type: string
      enum:
        - UNINITIALIZED
        - UNAVAILABLE
        - UNHEALTHY
        - DEGRADED
        - HEALTHY
      default: UNINITIALIZED
      title: '- UNAVAILABLE: Only collector can have unavailable status'
    ClusterUpgradeStatusUpgradability:
      type: string
      enum:
        - UNSET
        - UP_TO_DATE
        - MANUAL_UPGRADE_REQUIRED
        - AUTO_UPGRADE_POSSIBLE
        - SENSOR_VERSION_HIGHER
      default: UNSET
      description: |2-
         - SENSOR_VERSION_HIGHER: SENSOR_VERSION_HIGHER occurs when we detect that the sensor
        is running a newer version than this Central. This is unexpected,
        but can occur depending on the patches a customer does.
        In this case, we will NOT automatically "upgrade" the sensor,
        since that would be a downgrade, even if the autoupgrade setting is
        on. The user will be allowed to manually trigger the upgrade, but they are
        strongly discouraged from doing so without upgrading Central first, since this
        is an unsupported configuration.
    ClusterUpgradeStatusUpgradeProcessStatus:
      type: object
      properties:
        active:
          type: boolean
        id:
          type: string
        targetVersion:
          type: string
        upgraderImage:
          type: string
        initiatedAt:
          type: string
          format: date-time
        progress:
          $ref: '#/components/schemas/storageUpgradeProgress'
        type:
          $ref: '#/components/schemas/UpgradeProcessStatusUpgradeProcessType'
    UpgradeProcessStatusUpgradeProcessType:
      type: string
      enum:
        - UPGRADE
        - CERT_ROTATION
      default: UPGRADE
      description: |2-
         - UPGRADE: UPGRADE represents a sensor version upgrade.
         - CERT_ROTATION: CERT_ROTATION represents an upgrade process that only rotates the TLS certs
        used by the cluster, without changing anything else.
    UpgradeProgressUpgradeState:
      type: string
      enum:
        - UPGRADE_INITIALIZING
        - UPGRADER_LAUNCHING
        - UPGRADER_LAUNCHED
        - PRE_FLIGHT_CHECKS_COMPLETE
        - UPGRADE_OPERATIONS_DONE
        - UPGRADE_COMPLETE
        - UPGRADE_INITIALIZATION_ERROR
        - PRE_FLIGHT_CHECKS_FAILED
        - UPGRADE_ERROR_ROLLING_BACK
        - UPGRADE_ERROR_ROLLED_BACK
        - UPGRADE_ERROR_ROLLBACK_FAILED
        - UPGRADE_ERROR_UNKNOWN
        - UPGRADE_TIMED_OUT
      default: UPGRADE_INITIALIZING
      description: |2-
         - UPGRADER_LAUNCHING: In-progress states.
         - UPGRADE_COMPLETE: The success state.
        PLEASE NUMBER ALL IN-PROGRESS STATES ABOVE THIS
        AND ALL ERROR STATES BELOW THIS.
         - UPGRADE_INITIALIZATION_ERROR: Error states.
    storageAWSProviderMetadata:
      type: object
      properties:
        accountId:
          type: string
    storageAdmissionControlHealthInfo:
      type: object
      properties:
        totalDesiredPods:
          type: integer
          format: int32
        totalReadyPods:
          type: integer
          format: int32
        statusErrors:
          type: array
          items:
            type: string
          description: Collection of errors that occurred while trying to obtain admission control health info.
      description: |-
        AdmissionControlHealthInfo carries data about admission control deployment but does not include admission control health status
        derived from this data.
        Aggregated admission control health status is not included because it is derived in central and not in the component that
        first reports AdmissionControlHealthInfo (sensor).
    storageAdmissionControllerConfig:
      type: object
      properties:
        enabled:
          type: boolean
        timeoutSeconds:
          type: integer
          format: int32
        scanInline:
          type: boolean
        disableBypass:
          type: boolean
        enforceOnUpdates:
          type: boolean
    storageAuditLogFileState:
      type: object
      properties:
        collectLogsSince:
          type: string
          format: date-time
        lastAuditId:
          type: string
      title: |-
        AuditLogFileState tracks the last audit log event timestamp and ID that was collected by Compliance
        For internal use only
    storageAzureProviderMetadata:
      type: object
      properties:
        subscriptionId:
          type: string
    storageCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageClusterType'
        labels:
          type: object
          additionalProperties:
            type: string
        mainImage:
          type: string
        collectorImage:
          type: string
        centralApiEndpoint:
          type: string
        runtimeSupport:
          type: boolean
        collectionMethod:
          $ref: '#/components/schemas/storageCollectionMethod'
        admissionController:
          type: boolean
        admissionControllerUpdates:
          type: boolean
        admissionControllerEvents:
          type: boolean
        status:
          $ref: '#/components/schemas/storageClusterStatus'
        dynamicConfig:
          $ref: '#/components/schemas/storageDynamicClusterConfig'
        tolerationsConfig:
          $ref: '#/components/schemas/storageTolerationsConfig'
        priority:
          type: string
          format: int64
        healthStatus:
          $ref: '#/components/schemas/storageClusterHealthStatus'
        slimCollector:
          type: boolean
        helmConfig:
          $ref: '#/components/schemas/storageCompleteClusterConfig'
        mostRecentSensorId:
          $ref: '#/components/schemas/storageSensorDeploymentIdentification'
        auditLogState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAuditLogFileState'
          description: For internal use only.
        initBundleId:
          type: string
    storageClusterCertExpiryStatus:
      type: object
      properties:
        sensorCertExpiry:
          type: string
          format: date-time
    storageClusterHealthStatus:
      type: object
      properties:
        collectorHealthInfo:
          $ref: '#/components/schemas/storageCollectorHealthInfo'
        admissionControlHealthInfo:
          $ref: '#/components/schemas/storageAdmissionControlHealthInfo'
        sensorHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        collectorHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        overallHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        admissionControlHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        lastContact:
          type: string
          format: date-time
          title: |-
            For sensors not having health capability, this will be filled with gRPC connection poll. Otherwise,
            this timestamp will be updated by central pipeline when message is processed
        healthInfoComplete:
          type: boolean
          title: To track cases such as when sensor is healthy, but collector status data is unavailable because the sensor is on an old version
    storageClusterStatus:
      type: object
      properties:
        sensorVersion:
          type: string
        DEPRECATEDLastContact:
          type: string
          format: date-time
          description: This field has been deprecated starting release 49.0. Use healthStatus.lastContact instead.
        providerMetadata:
          $ref: '#/components/schemas/storageProviderMetadata'
        orchestratorMetadata:
          $ref: '#/components/schemas/storageOrchestratorMetadata'
        upgradeStatus:
          $ref: '#/components/schemas/storageClusterUpgradeStatus'
        certExpiryStatus:
          $ref: '#/components/schemas/storageClusterCertExpiryStatus'
    storageClusterType:
      type: string
      enum:
        - GENERIC_CLUSTER
        - KUBERNETES_CLUSTER
        - OPENSHIFT_CLUSTER
        - OPENSHIFT4_CLUSTER
      default: GENERIC_CLUSTER
    storageClusterUpgradeStatus:
      type: object
      properties:
        upgradability:
          $ref: '#/components/schemas/ClusterUpgradeStatusUpgradability'
        upgradabilityStatusReason:
          type: string
        mostRecentProcess:
          $ref: '#/components/schemas/ClusterUpgradeStatusUpgradeProcessStatus'
    storageCollectionMethod:
      type: string
      enum:
        - UNSET_COLLECTION
        - NO_COLLECTION
        - KERNEL_MODULE
        - EBPF
      default: UNSET_COLLECTION
    storageCollectorHealthInfo:
      type: object
      properties:
        version:
          type: string
          title: This is the version of the collector deamonset as returned by k8s API
        totalDesiredPods:
          type: integer
          format: int32
        totalReadyPods:
          type: integer
          format: int32
        totalRegisteredNodes:
          type: integer
          format: int32
        statusErrors:
          type: array
          items:
            type: string
          description: Collection of errors that occurred while trying to obtain collector health info.
      description: |-
        CollectorHealthInfo carries data about collector deployment but does not include collector health status derived from this data.
        Aggregated collector health status is not included because it is derived in central and not in the component that
        first reports CollectorHealthInfo (sensor).
    storageCompleteClusterConfig:
      type: object
      properties:
        dynamicConfig:
          $ref: '#/components/schemas/storageDynamicClusterConfig'
        staticConfig:
          $ref: '#/components/schemas/storageStaticClusterConfig'
        configFingerprint:
          type: string
        clusterLabels:
          type: object
          additionalProperties:
            type: string
      description: |-
        Encodes a complete cluster configuration minus ID/Name identifiers
        including static and dynamic settings.
    storageDynamicClusterConfig:
      type: object
      properties:
        admissionControllerConfig:
          $ref: '#/components/schemas/storageAdmissionControllerConfig'
        registryOverride:
          type: string
        disableAuditLogs:
          type: boolean
    storageGoogleProviderMetadata:
      type: object
      properties:
        project:
          type: string
        clusterName:
          type: string
    storageOrchestratorMetadata:
      type: object
      properties:
        version:
          type: string
        openshiftVersion:
          type: string
        buildDate:
          type: string
          format: date-time
        apiVersions:
          type: array
          items:
            type: string
    storageProviderMetadata:
      type: object
      properties:
        region:
          type: string
        zone:
          type: string
        google:
          $ref: '#/components/schemas/storageGoogleProviderMetadata'
        aws:
          $ref: '#/components/schemas/storageAWSProviderMetadata'
        azure:
          $ref: '#/components/schemas/storageAzureProviderMetadata'
        verified:
          type: boolean
    storageSensorDeploymentIdentification:
      type: object
      properties:
        systemNamespaceId:
          type: string
        defaultNamespaceId:
          type: string
        appNamespace:
          type: string
        appNamespaceId:
          type: string
        appServiceaccountId:
          type: string
      description: |-
        StackRoxDeploymentIdentification aims at uniquely identifying a StackRox Sensor deployment. It is used to determine
        whether a sensor connection comes from a sensor pod that has restarted or was recreated (possibly after a network
        partition), or from a deployment in a different namespace or cluster.
    storageStaticClusterConfig:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageClusterType'
        mainImage:
          type: string
        centralApiEndpoint:
          type: string
        collectionMethod:
          $ref: '#/components/schemas/storageCollectionMethod'
        collectorImage:
          type: string
        admissionController:
          type: boolean
        admissionControllerUpdates:
          type: boolean
        tolerationsConfig:
          $ref: '#/components/schemas/storageTolerationsConfig'
        slimCollector:
          type: boolean
        admissionControllerEvents:
          type: boolean
    storageTolerationsConfig:
      type: object
      properties:
        disabled:
          type: boolean
    storageUpgradeProgress:
      type: object
      properties:
        upgradeState:
          $ref: '#/components/schemas/UpgradeProgressUpgradeState'
        upgradeStatusDetail:
          type: string
        since:
          type: string
          format: date-time
    v1ClusterResponse:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/storageCluster'
    v1ClustersList:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/storageCluster'
    v1KernelSupportAvailableResponse:
      type: object
      properties:
        kernelSupportAvailable:
          type: boolean
    v1ComplianceRun:
      type: object
      properties:
        id:
          type: string
        clusterId:
          type: string
        standardId:
          type: string
        scheduleId:
          type: string
        startTime:
          type: string
          format: date-time
        finishTime:
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/v1ComplianceRunState'
        errorMessage:
          type: string
    v1ComplianceRunSelection:
      type: object
      properties:
        clusterId:
          type: string
          description: The ID of the cluster. "*" means "all clusters".
        standardId:
          type: string
          description: The ID of the compliance standard. "*" means "all standards".
    v1ComplianceRunState:
      type: string
      enum:
        - INVALID
        - READY
        - STARTED
        - WAIT_FOR_DATA
        - EVALUTING_CHECKS
        - FINISHED
      default: INVALID
    v1GetComplianceRunStatusesResponse:
      type: object
      properties:
        invalidRunIds:
          type: array
          items:
            type: string
        runs:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceRun'
    v1GetRecentComplianceRunsResponse:
      type: object
      properties:
        complianceRuns:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceRun'
    v1TriggerComplianceRunsRequest:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/v1ComplianceRunSelection'
    v1TriggerComplianceRunsResponse:
      type: object
      properties:
        startedRuns:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceRun'
    CVSSV2AccessComplexity:
      type: string
      enum:
        - ACCESS_HIGH
        - ACCESS_MEDIUM
        - ACCESS_LOW
      default: ACCESS_HIGH
    CVSSV2Authentication:
      type: string
      enum:
        - AUTH_MULTIPLE
        - AUTH_SINGLE
        - AUTH_NONE
      default: AUTH_MULTIPLE
    CVSSV3Complexity:
      type: string
      enum:
        - COMPLEXITY_LOW
        - COMPLEXITY_HIGH
      default: COMPLEXITY_LOW
    CVSSV3Privileges:
      type: string
      enum:
        - PRIVILEGE_NONE
        - PRIVILEGE_LOW
        - PRIVILEGE_HIGH
      default: PRIVILEGE_NONE
    CVSSV3UserInteraction:
      type: string
      enum:
        - UI_NONE
        - UI_REQUIRED
      default: UI_NONE
    ComplianceAggregationAggregationKey:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/storageComplianceAggregationScope'
        id:
          type: string
      title: 'Next available tag: 3'
    ComplianceAggregationSource:
      type: object
      properties:
        clusterId:
          type: string
        standardId:
          type: string
        successfulRun:
          $ref: '#/components/schemas/storageComplianceRunMetadata'
        failedRuns:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceRunMetadata'
      title: 'Next available tag: 5'
    ComplianceResourceClusterName:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ComplianceResourceDeploymentName:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/ComplianceResourceClusterName'
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
    ComplianceResourceNodeName:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/ComplianceResourceClusterName'
        id:
          type: string
        name:
          type: string
    ComplianceResultValueEvidence:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/storageComplianceState'
        message:
          type: string
        messageId:
          type: integer
          format: int32
    ComplianceRunResultsEntityResults:
      type: object
      properties:
        controlResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageComplianceResultValue'
    ContainerConfigEnvironmentConfig:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        envVarSource:
          $ref: '#/components/schemas/EnvironmentConfigEnvVarSource'
    EmbeddedVulnerabilityVulnerabilityType:
      type: string
      enum:
        - UNKNOWN_VULNERABILITY
        - IMAGE_VULNERABILITY
        - K8S_VULNERABILITY
        - ISTIO_VULNERABILITY
        - NODE_VULNERABILITY
        - OPENSHIFT_VULNERABILITY
      default: UNKNOWN_VULNERABILITY
    PortConfigExposureInfo:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/PortConfigExposureLevel'
        serviceName:
          type: string
          title: only set if level is not HOST
        serviceId:
          type: string
        serviceClusterIp:
          type: string
        servicePort:
          type: integer
          format: int32
        nodePort:
          type: integer
          format: int32
          title: only set if level is HOST, NODE, or EXTERNAL
        externalIps:
          type: array
          items:
            type: string
          title: only set if level is EXTERNAL
        externalHostnames:
          type: array
          items:
            type: string
    SeccompProfileProfileType:
      type: string
      enum:
        - UNCONFINED
        - RUNTIME_DEFAULT
        - LOCALHOST
      default: UNCONFINED
    SecurityContextSELinux:
      type: object
      properties:
        user:
          type: string
        role:
          type: string
        type:
          type: string
        level:
          type: string
    SecurityContextSeccompProfile:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SeccompProfileProfileType'
        localhostProfile:
          type: string
    VolumeMountPropagation:
      type: string
      enum:
        - NONE
        - HOST_TO_CONTAINER
        - BIDIRECTIONAL
      default: NONE
    storageCVSSV2:
      type: object
      properties:
        vector:
          type: string
        attackVector:
          $ref: '#/components/schemas/storageCVSSV2AttackVector'
        accessComplexity:
          $ref: '#/components/schemas/CVSSV2AccessComplexity'
        authentication:
          $ref: '#/components/schemas/CVSSV2Authentication'
        confidentiality:
          $ref: '#/components/schemas/storageCVSSV2Impact'
        integrity:
          $ref: '#/components/schemas/storageCVSSV2Impact'
        availability:
          $ref: '#/components/schemas/storageCVSSV2Impact'
        exploitabilityScore:
          type: number
          format: float
        impactScore:
          type: number
          format: float
        score:
          type: number
          format: float
        severity:
          $ref: '#/components/schemas/storageCVSSV2Severity'
    storageCVSSV2AttackVector:
      type: string
      enum:
        - ATTACK_LOCAL
        - ATTACK_ADJACENT
        - ATTACK_NETWORK
      default: ATTACK_LOCAL
    storageCVSSV2Impact:
      type: string
      enum:
        - IMPACT_NONE
        - IMPACT_PARTIAL
        - IMPACT_COMPLETE
      default: IMPACT_NONE
    storageCVSSV2Severity:
      type: string
      enum:
        - UNKNOWN
        - LOW
        - MEDIUM
        - HIGH
      default: UNKNOWN
    storageCVSSV3:
      type: object
      properties:
        vector:
          type: string
        exploitabilityScore:
          type: number
          format: float
        impactScore:
          type: number
          format: float
        attackVector:
          $ref: '#/components/schemas/storageCVSSV3AttackVector'
        attackComplexity:
          $ref: '#/components/schemas/CVSSV3Complexity'
        privilegesRequired:
          $ref: '#/components/schemas/CVSSV3Privileges'
        userInteraction:
          $ref: '#/components/schemas/CVSSV3UserInteraction'
        scope:
          $ref: '#/components/schemas/storageCVSSV3Scope'
        confidentiality:
          $ref: '#/components/schemas/storageCVSSV3Impact'
        integrity:
          $ref: '#/components/schemas/storageCVSSV3Impact'
        availability:
          $ref: '#/components/schemas/storageCVSSV3Impact'
        score:
          type: number
          format: float
        severity:
          $ref: '#/components/schemas/storageCVSSV3Severity'
    storageCVSSV3AttackVector:
      type: string
      enum:
        - ATTACK_LOCAL
        - ATTACK_ADJACENT
        - ATTACK_NETWORK
        - ATTACK_PHYSICAL
      default: ATTACK_LOCAL
    storageCVSSV3Impact:
      type: string
      enum:
        - IMPACT_NONE
        - IMPACT_LOW
        - IMPACT_HIGH
      default: IMPACT_NONE
    storageCVSSV3Scope:
      type: string
      enum:
        - UNCHANGED
        - CHANGED
      default: UNCHANGED
    storageCVSSV3Severity:
      type: string
      enum:
        - UNKNOWN
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
      default: UNKNOWN
    storageComplianceAggregationResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceAggregationResult'
        sources:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceAggregationSource'
        errorMessage:
          type: string
      title: 'Next available tag: 3'
    storageComplianceAggregationResult:
      type: object
      properties:
        aggregationKeys:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceAggregationAggregationKey'
        unit:
          $ref: '#/components/schemas/storageComplianceAggregationScope'
        numPassing:
          type: integer
          format: int32
        numFailing:
          type: integer
          format: int32
        numSkipped:
          type: integer
          format: int32
      title: 'Next available tag: 5'
    storageComplianceAggregationScope:
      type: string
      enum:
        - UNKNOWN
        - STANDARD
        - CLUSTER
        - CATEGORY
        - CONTROL
        - NAMESPACE
        - NODE
        - DEPLOYMENT
        - CHECK
      default: UNKNOWN
    storageComplianceControlResult:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/storageComplianceResource'
        controlId:
          type: string
        value:
          $ref: '#/components/schemas/storageComplianceResultValue'
    storageComplianceDomain:
      type: object
      properties:
        id:
          type: string
        cluster:
          $ref: '#/components/schemas/storageCluster'
        nodes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageNode'
        deployments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageDeployment'
      title: 'Next available tag: 5'
    storageComplianceResource:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/ComplianceResourceClusterName'
        deployment:
          $ref: '#/components/schemas/ComplianceResourceDeploymentName'
        node:
          $ref: '#/components/schemas/ComplianceResourceNodeName'
        image:
          $ref: '#/components/schemas/storageImageName'
    storageComplianceResultValue:
      type: object
      properties:
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceResultValueEvidence'
        overallState:
          $ref: '#/components/schemas/storageComplianceState'
    storageComplianceRunMetadata:
      type: object
      properties:
        runId:
          type: string
        standardId:
          type: string
        clusterId:
          type: string
        startTimestamp:
          type: string
          format: date-time
        finishTimestamp:
          type: string
          format: date-time
        success:
          type: boolean
        errorMessage:
          type: string
        domainId:
          type: string
      title: 'Next available tag: 5'
    storageComplianceRunResults:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/storageComplianceDomain'
        runMetadata:
          $ref: '#/components/schemas/storageComplianceRunMetadata'
        clusterResults:
          $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
        nodeResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
        deploymentResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
        machineConfigResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
      title: 'Next available tag: 6'
    storageComplianceState:
      type: string
      enum:
        - COMPLIANCE_STATE_UNKNOWN
        - COMPLIANCE_STATE_SKIP
        - COMPLIANCE_STATE_NOTE
        - COMPLIANCE_STATE_SUCCESS
        - COMPLIANCE_STATE_FAILURE
        - COMPLIANCE_STATE_ERROR
      default: COMPLIANCE_STATE_UNKNOWN
    storageContainer:
      type: object
      properties:
        id:
          type: string
        config:
          $ref: '#/components/schemas/storageContainerConfig'
        image:
          $ref: '#/components/schemas/storageContainerImage'
        securityContext:
          $ref: '#/components/schemas/storageSecurityContext'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/storageVolume'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storagePortConfig'
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedSecret'
        resources:
          $ref: '#/components/schemas/storageResources'
        instances:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerInstance'
        name:
          type: string
    storageContainerConfig:
      type: object
      properties:
        env:
          type: array
          items:
            $ref: '#/components/schemas/ContainerConfigEnvironmentConfig'
        command:
          type: array
          items:
            type: string
        args:
          type: array
          items:
            type: string
        directory:
          type: string
        user:
          type: string
        uid:
          type: string
          format: int64
        appArmorProfile:
          type: string
    storageContainerInstance:
      type: object
      properties:
        instanceId:
          $ref: '#/components/schemas/storageContainerInstanceID'
        containingPodId:
          type: string
          description: The pod containing this container instance (kubernetes only).
        containerName:
          type: string
          description: Container name.
        containerIps:
          type: array
          items:
            type: string
          description: The IP addresses of this container.
        started:
          type: string
          format: date-time
          title: The start time of the container
        imageDigest:
          type: string
          title: Image ID
        finished:
          type: string
          format: date-time
          description: The finish time of the container, if it finished.
        exitCode:
          type: integer
          format: int32
          description: The exit code of the container. Only valid when finished is populated.
        terminationReason:
          type: string
          description: The reason for the container's termination, if it finished.
      description: ContainerInstanceID allows to uniquely identify a container within a cluster.
    storageContainerInstanceID:
      type: object
      properties:
        containerRuntime:
          $ref: '#/components/schemas/storageContainerRuntime'
        id:
          type: string
          description: The ID of the container, specific to the given runtime.
        node:
          type: string
          description: The node on which this container runs.
    storageContainerRuntime:
      type: string
      enum:
        - UNKNOWN_CONTAINER_RUNTIME
        - DOCKER_CONTAINER_RUNTIME
        - CRIO_CONTAINER_RUNTIME
      default: UNKNOWN_CONTAINER_RUNTIME
    storageContainerRuntimeInfo:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageContainerRuntime'
        version:
          type: string
    storageDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        hash:
          type: string
          format: uint64
        type:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
        orchestratorComponent:
          type: boolean
        replicas:
          type: string
          format: int64
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'TODO(ROX-6895): "Label" search term is ambiguous.'
        podLabels:
          type: object
          additionalProperties:
            type: string
        labelSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        created:
          type: string
          format: date-time
        clusterId:
          type: string
        clusterName:
          type: string
        containers:
          type: array
          items:
            $ref: '#/components/schemas/storageContainer'
        annotations:
          type: object
          additionalProperties:
            type: string
        priority:
          type: string
          format: int64
        inactive:
          type: boolean
        imagePullSecrets:
          type: array
          items:
            type: string
        serviceAccount:
          type: string
        serviceAccountPermissionLevel:
          $ref: '#/components/schemas/storagePermissionLevel'
        automountServiceAccountToken:
          type: boolean
        hostNetwork:
          type: boolean
        hostPid:
          type: boolean
        hostIpc:
          type: boolean
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/storageToleration'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storagePortConfig'
        stateTimestamp:
          type: string
          format: int64
        riskScore:
          type: number
          format: float
        processTags:
          type: array
          items:
            type: string
      title: 'Next available tag: 34'
    storageEmbeddedNodeScanComponent:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        vulns:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedVulnerability'
        priority:
          type: string
          format: int64
        topCvss:
          type: number
          format: float
        riskScore:
          type: number
          format: float
    storageEmbeddedSecret:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
    storageEmbeddedVulnerability:
      type: object
      properties:
        cve:
          type: string
        cvss:
          type: number
          format: float
        summary:
          type: string
        link:
          type: string
        fixedBy:
          type: string
        scoreVersion:
          $ref: '#/components/schemas/storageEmbeddedVulnerabilityScoreVersion'
        cvssV2:
          $ref: '#/components/schemas/storageCVSSV2'
        cvssV3:
          $ref: '#/components/schemas/storageCVSSV3'
        publishedOn:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        vulnerabilityType:
          $ref: '#/components/schemas/EmbeddedVulnerabilityVulnerabilityType'
        vulnerabilityTypes:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedVulnerabilityVulnerabilityType'
        suppressed:
          type: boolean
        suppressActivation:
          type: string
          format: date-time
        suppressExpiry:
          type: string
          format: date-time
        firstSystemOccurrence:
          type: string
          format: date-time
          description: Time when the CVE was first seen in the system.
        firstImageOccurrence:
          type: string
          format: date-time
          description: Time when the CVE was first seen in the image.
        firstNodeOccurrence:
          type: string
          format: date-time
          description: Time when the CVE was first seen in the node.
        severity:
          $ref: '#/components/schemas/storageVulnerabilitySeverity'
      title: |-
        TODO: Remove when migration is in place
        Next Tag: 20
    storageEmbeddedVulnerabilityScoreVersion:
      type: string
      enum:
        - V2
        - V3
      default: V2
    storageLabelSelector:
      type: object
      properties:
        matchLabels:
          type: object
          additionalProperties:
            type: string
          description: |-
            This is actually a oneof, but we can't make it one due to backwards
            compatibility constraints.
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/storageLabelSelectorRequirement'
      description: 'Next available tag: 3'
      title: |-
        Label selector components are joined with logical AND, see
            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    storageLabelSelectorOperator:
      type: string
      enum:
        - UNKNOWN
        - IN
        - NOT_IN
        - EXISTS
        - NOT_EXISTS
      default: UNKNOWN
    storageLabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
        op:
          $ref: '#/components/schemas/storageLabelSelectorOperator'
        values:
          type: array
          items:
            type: string
      title: 'Next available tag: 4'
    storageNode:
      type: object
      properties:
        id:
          type: string
          description: A unique ID identifying this node.
        name:
          type: string
          description: The (host)name of the node. Might or might not be the same as ID.
        taints:
          type: array
          items:
            $ref: '#/components/schemas/storageTaint'
          title: Taints on the host
        clusterId:
          type: string
        clusterName:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'TODO(ROX-6895): "Label" search term is ambiguous.'
        annotations:
          type: object
          additionalProperties:
            type: string
        joinedAt:
          type: string
          format: date-time
          title: When the cluster reported the node was added
        internalIpAddresses:
          type: array
          items:
            type: string
          title: node internal IP addresses
        externalIpAddresses:
          type: array
          items:
            type: string
          title: node external IP addresses
        containerRuntimeVersion:
          type: string
          title: From NodeInfo
        containerRuntime:
          $ref: '#/components/schemas/storageContainerRuntimeInfo'
        kernelVersion:
          type: string
        operatingSystem:
          type: string
          description: 'From NodeInfo. Operating system reported by the node (ex: linux).'
        osImage:
          type: string
          description: From NodeInfo. OS image reported by the node from /etc/os-release.
        kubeletVersion:
          type: string
        kubeProxyVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        k8sUpdated:
          type: string
          format: date-time
          description: Time we received an update from Kubernetes.
        scan:
          $ref: '#/components/schemas/storageNodeScan'
        components:
          type: integer
          format: int32
        cves:
          type: integer
          format: int32
        fixableCves:
          type: integer
          format: int32
        priority:
          type: string
          format: int64
        riskScore:
          type: number
          format: float
        topCvss:
          type: number
          format: float
      title: |-
        Node represents information about a node in the cluster.
        next available tag: 27
    storageNodeScan:
      type: object
      properties:
        scanTime:
          type: string
          format: date-time
        operatingSystem:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedNodeScanComponent'
    storagePortConfig:
      type: object
      properties:
        name:
          type: string
        containerPort:
          type: integer
          format: int32
        protocol:
          type: string
        exposure:
          $ref: '#/components/schemas/PortConfigExposureLevel'
        exposedPort:
          type: integer
          format: int32
        exposureInfos:
          type: array
          items:
            $ref: '#/components/schemas/PortConfigExposureInfo'
      title: 'Next Available Tag: 6'
    storageResources:
      type: object
      properties:
        cpuCoresRequest:
          type: number
          format: float
        cpuCoresLimit:
          type: number
          format: float
        memoryMbRequest:
          type: number
          format: float
        memoryMbLimit:
          type: number
          format: float
    storageSecurityContext:
      type: object
      properties:
        privileged:
          type: boolean
        selinux:
          $ref: '#/components/schemas/SecurityContextSELinux'
        dropCapabilities:
          type: array
          items:
            type: string
        addCapabilities:
          type: array
          items:
            type: string
        readOnlyRootFilesystem:
          type: boolean
        seccompProfile:
          $ref: '#/components/schemas/SecurityContextSeccompProfile'
    storageTaint:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        taintEffect:
          $ref: '#/components/schemas/storageTaintEffect'
    storageTaintEffect:
      type: string
      enum:
        - UNKNOWN_TAINT_EFFECT
        - NO_SCHEDULE_TAINT_EFFECT
        - PREFER_NO_SCHEDULE_TAINT_EFFECT
        - NO_EXECUTE_TAINT_EFFECT
      default: UNKNOWN_TAINT_EFFECT
    storageToleration:
      type: object
      properties:
        key:
          type: string
        operator:
          $ref: '#/components/schemas/storageTolerationOperator'
        value:
          type: string
        taintEffect:
          $ref: '#/components/schemas/storageTaintEffect'
    storageTolerationOperator:
      type: string
      enum:
        - TOLERATION_OPERATION_UNKNOWN
        - TOLERATION_OPERATOR_EXISTS
        - TOLERATION_OPERATOR_EQUAL
      default: TOLERATION_OPERATION_UNKNOWN
    storageVolume:
      type: object
      properties:
        name:
          type: string
        source:
          type: string
        destination:
          type: string
        readOnly:
          type: boolean
        type:
          type: string
        mountPropagation:
          $ref: '#/components/schemas/VolumeMountPropagation'
    storageVulnerabilitySeverity:
      type: string
      enum:
        - UNKNOWN_VULNERABILITY_SEVERITY
        - LOW_VULNERABILITY_SEVERITY
        - MODERATE_VULNERABILITY_SEVERITY
        - IMPORTANT_VULNERABILITY_SEVERITY
        - CRITICAL_VULNERABILITY_SEVERITY
      default: UNKNOWN_VULNERABILITY_SEVERITY
    v1ComplianceControl:
      type: object
      properties:
        id:
          type: string
        standardId:
          type: string
        groupId:
          type: string
        name:
          type: string
        description:
          type: string
        implemented:
          type: boolean
        interpretationText:
          type: string
    v1ComplianceControlGroup:
      type: object
      properties:
        id:
          type: string
        standardId:
          type: string
        name:
          type: string
        description:
          type: string
        numImplementedChecks:
          type: integer
          format: int32
    v1ComplianceControlResultsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceControlResult'
    v1ComplianceStandard:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1ComplianceStandardMetadata'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceControlGroup'
        controls:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceControl'
    v1ComplianceStandardMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        numImplementedChecks:
          type: integer
          format: int32
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceStandardMetadataScope'
        dynamic:
          type: boolean
    v1ComplianceStandardMetadataScope:
      type: string
      enum:
        - UNSET
        - CLUSTER
        - NAMESPACE
        - DEPLOYMENT
        - NODE
      default: UNSET
    v1GetComplianceRunResultsResponse:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/storageComplianceRunResults'
        failedRuns:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceRunMetadata'
    v1GetComplianceStandardResponse:
      type: object
      properties:
        standard:
          $ref: '#/components/schemas/v1ComplianceStandard'
    v1GetComplianceStandardsResponse:
      type: object
      properties:
        standards:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceStandardMetadata'
    BannerConfigSize:
      type: string
      enum:
        - UNSET
        - SMALL
        - MEDIUM
        - LARGE
      default: UNSET
    storageAlertRetentionConfig:
      type: object
      properties:
        resolvedDeployRetentionDurationDays:
          type: integer
          format: int32
        deletedRuntimeRetentionDurationDays:
          type: integer
          format: int32
          description: This runtime alert retention configuration takes precedence after `allRuntimeRetentionDurationDays`.
        allRuntimeRetentionDurationDays:
          type: integer
          format: int32
          description: |-
            This runtime alert retention configuration has highest precedence. All runtime alerts, including attempted
            alerts and deleted deployment alerts, are deleted even if respective retention is longer.
        attemptedDeployRetentionDurationDays:
          type: integer
          format: int32
        attemptedRuntimeRetentionDurationDays:
          type: integer
          format: int32
          description: This runtime alert retention configuration has lowest precedence.
    storageBannerConfig:
      type: object
      properties:
        enabled:
          type: boolean
        text:
          type: string
        size:
          $ref: '#/components/schemas/BannerConfigSize'
        color:
          type: string
        backgroundColor:
          type: string
    storageConfig:
      type: object
      properties:
        publicConfig:
          $ref: '#/components/schemas/storagePublicConfig'
        privateConfig:
          $ref: '#/components/schemas/storagePrivateConfig'
    storageLoginNotice:
      type: object
      properties:
        enabled:
          type: boolean
        text:
          type: string
    storagePrivateConfig:
      type: object
      properties:
        DEPRECATEDAlertRetentionDurationDays:
          type: integer
          format: int32
          title: will be deprecated after migration is ready
        alertConfig:
          $ref: '#/components/schemas/storageAlertRetentionConfig'
        imageRetentionDurationDays:
          type: integer
          format: int32
      title: 'next available tag: 4'
    storagePublicConfig:
      type: object
      properties:
        loginNotice:
          $ref: '#/components/schemas/storageLoginNotice'
        header:
          $ref: '#/components/schemas/storageBannerConfig'
        footer:
          $ref: '#/components/schemas/storageBannerConfig'
    v1PutConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageConfig'
    v1GetCertExpiryComponent:
      type: string
      enum:
        - UNKNOWN
        - CENTRAL
        - SCANNER
      default: UNKNOWN
    v1GetCertExpiryResponse:
      type: object
      properties:
        expiry:
          type: string
          format: date-time
    v1SuppressCVERequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        duration:
          type: string
    v1UnsuppressCVERequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    DBExportManifestEncodingType:
      type: string
      enum:
        - UNKNOWN
        - UNCOMPREESSED
        - DEFLATED
      default: UNKNOWN
      description: The encoding of the file data in the restore body, usually for compression purposes.
    DBRestoreProcessStatusResumeInfo:
      type: object
      properties:
        pos:
          type: string
          format: int64
    DBRestoreRequestHeaderLocalFileInfo:
      type: object
      properties:
        path:
          type: string
          description: The full path of the file.
        bytesSize:
          type: string
          format: int64
          description: The size of the file, in bytes. 0 if unknown.
      description: |-
        LocalFileInfo provides information about the file on the local machine of the user initiating the restore
        process, in order to provide information to other users about ongoing restore processes.
    v1DBExportFormat:
      type: object
      properties:
        formatName:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/v1DBExportFormatFile'
      description: DBExportFormat describes a format (= a collection of files) for the database export.
    v1DBExportFormatFile:
      type: object
      properties:
        name:
          type: string
        optional:
          type: boolean
    v1DBExportManifest:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/v1DBExportManifestFile'
      description: |-
        A DB export manifest describes the file contents of a restore request. To prevent data loss, a manifest is always
        interpreted as binding, i.e., the server must ensure that it will read and make use of every file listed in the
        manifest, otherwise it must reject the request.
    v1DBExportManifestFile:
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the file. This may or may not be a (relative) file path and up to the server to interpret.
            For databases exported as ZIP files, this is the path relative to the root of the archive.
        encoding:
          $ref: '#/components/schemas/DBExportManifestEncodingType'
        encodedSize:
          type: string
          format: int64
        decodedSize:
          type: string
          format: int64
        decodedCrc32:
          type: integer
          format: int64
          description: The CRC32 (IEEE) checksum of the decoded(!) data.
      description: A single file in the restore body.
    v1DBRestoreProcessMetadata:
      type: object
      properties:
        id:
          type: string
          description: An ID identifying the restore process. Auto-assigned.
        header:
          $ref: '#/components/schemas/v1DBRestoreRequestHeader'
        startTime:
          type: string
          format: date-time
          description: The time at which the restore process was started.
        initiatingUserName:
          type: string
          description: The user who initiated the database restore process.
      description: |-
        The metadata of an ongoing or completed restore process. This is the *static* metadata, which will not change
        (i.e., it is not a status).
    v1DBRestoreProcessStatus:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1DBRestoreProcessMetadata'
        attemptId:
          type: string
        state:
          $ref: '#/components/schemas/v1DBRestoreProcessStatusState'
        resumeInfo:
          $ref: '#/components/schemas/DBRestoreProcessStatusResumeInfo'
        error:
          type: string
        bytesRead:
          type: string
          format: int64
        filesProcessed:
          type: string
          format: int64
    v1DBRestoreProcessStatusState:
      type: string
      enum:
        - UNKNOWN
        - NOT_STARTED
        - IN_PROGRESS
        - PAUSED
        - COMPLETED
      default: UNKNOWN
    v1DBRestoreRequestHeader:
      type: object
      properties:
        formatName:
          type: string
          description: The name of the database export format. Mandatory.
        manifest:
          $ref: '#/components/schemas/v1DBExportManifest'
        localFile:
          $ref: '#/components/schemas/DBRestoreRequestHeaderLocalFileInfo'
    v1GetActiveDBRestoreProcessResponse:
      type: object
      properties:
        activeStatus:
          $ref: '#/components/schemas/v1DBRestoreProcessStatus'
    v1GetDBExportCapabilitiesResponse:
      type: object
      properties:
        formats:
          type: array
          items:
            $ref: '#/components/schemas/v1DBExportFormat'
        supportedEncodings:
          type: array
          items:
            $ref: '#/components/schemas/DBExportManifestEncodingType'
    v1InterruptDBRestoreProcessResponse:
      type: object
      properties:
        resumeInfo:
          $ref: '#/components/schemas/DBRestoreProcessStatusResumeInfo'
    v1LogLevelRequest:
      type: object
      properties:
        level:
          type: string
        modules:
          type: array
          items:
            type: string
    v1LogLevelResponse:
      type: object
      properties:
        level:
          type: string
        moduleLevels:
          type: array
          items:
            $ref: '#/components/schemas/v1ModuleLevel'
    v1ModuleLevel:
      type: object
      properties:
        module:
          type: string
        level:
          type: string
    ContainerNameAndBaselineStatusBaselineStatus:
      type: string
      enum:
        - INVALID
        - NOT_GENERATED
        - UNLOCKED
        - LOCKED
      default: INVALID
    DeploymentLabelsResponseLabelValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageListDeployment'
        whitelistStatuses:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerNameAndBaselineStatus'
        baselineStatuses:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerNameAndBaselineStatus'
    ResultFactor:
      type: object
      properties:
        message:
          type: string
        url:
          type: string
    storageContainerNameAndBaselineStatus:
      type: object
      properties:
        containerName:
          type: string
        baselineStatus:
          $ref: '#/components/schemas/ContainerNameAndBaselineStatusBaselineStatus'
        anomalousProcessesExecuted:
          type: boolean
      description: |-
        `ContainerNameAndBaselineStatus` represents a cached result
        of process evaluation on a specific container name.
    storageListDeployment:
      type: object
      properties:
        id:
          type: string
        hash:
          type: string
          format: uint64
        name:
          type: string
        cluster:
          type: string
        clusterId:
          type: string
        namespace:
          type: string
        created:
          type: string
          format: date-time
        priority:
          type: string
          format: int64
      title: 'Next available tag: 9'
    storageRisk:
      type: object
      properties:
        id:
          type: string
        subject:
          $ref: '#/components/schemas/storageRiskSubject'
        score:
          type: number
          format: float
        results:
          type: array
          items:
            $ref: '#/components/schemas/storageRiskResult'
    storageRiskResult:
      type: object
      properties:
        name:
          type: string
        factors:
          type: array
          items:
            $ref: '#/components/schemas/ResultFactor'
        score:
          type: number
          format: float
    storageRiskSubject:
      type: object
      properties:
        id:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        type:
          $ref: '#/components/schemas/storageRiskSubjectType'
    storageRiskSubjectType:
      type: string
      enum:
        - UNKNOWN
        - DEPLOYMENT
        - NAMESPACE
        - CLUSTER
        - NODE
        - NODE_COMPONENT
        - IMAGE
        - IMAGE_COMPONENT
        - SERVICEACCOUNT
      default: UNKNOWN
      title: 'Next tag: 9'
    v1CountDeploymentsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DeploymentLabelsResponse:
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DeploymentLabelsResponseLabelValues'
        values:
          type: array
          items:
            type: string
    v1GetDeploymentWithRiskResponse:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageDeployment'
        risk:
          $ref: '#/components/schemas/storageRisk'
    v1ListDeploymentsResponse:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/storageListDeployment'
    v1ListDeploymentsWithProcessInfoResponse:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo'
    DeployDetectionResponseRun:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/storageAlert'
    v1BuildDetectionRequest:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageContainerImage'
        imageName:
          type: string
        noExternalMetadata:
          type: boolean
        sendNotifications:
          type: boolean
        policyCategories:
          type: array
          items:
            type: string
    v1BuildDetectionResponse:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/storageAlert'
    v1DeployDetectionRequest:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageDeployment'
        noExternalMetadata:
          type: boolean
        enforcementOnly:
          type: boolean
        clusterId:
          type: string
    v1DeployDetectionResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: '#/components/schemas/DeployDetectionResponseRun'
    v1DeployYAMLDetectionRequest:
      type: object
      properties:
        yaml:
          type: string
        noExternalMetadata:
          type: boolean
        enforcementOnly:
          type: boolean
        policyCategories:
          type: array
          items:
            type: string
    v1FeatureFlag:
      type: object
      properties:
        name:
          type: string
        envVar:
          type: string
        enabled:
          type: boolean
    v1GetFeatureFlagsResponse:
      type: object
      properties:
        featureFlags:
          type: array
          items:
            $ref: '#/components/schemas/v1FeatureFlag'
    storageGroup:
      type: object
      properties:
        props:
          $ref: '#/components/schemas/storageGroupProperties'
        roleName:
          type: string
          description: This is the name of the role that will apply to users in this group.
      description: 'Group is a GroupProperties : Role mapping.'
    storageGroupProperties:
      type: object
      properties:
        authProviderId:
          type: string
        key:
          type: string
        value:
          type: string
      description: |-
        GroupProperties defines the properties of a unique group.
        Groups apply to users when their properties match. For instance:
        If the GroupProperties on has a auth_provider_id, then that group applies to all users logged in
        with that auth provider. If it has a claim key, then it applies to all users with that auth provider
        and claim key, etc.
        This can be used to create default groups/roles for All source provider (no fields set), a specific
        auth provider (only auth_provider_id field set) etc.
    v1GetGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/storageGroup'
      title: |-
        API for updating Groups and getting users.
        Next Available Tag: 2
    v1GroupBatchUpdateRequest:
      type: object
      properties:
        previousGroups:
          type: array
          items:
            $ref: '#/components/schemas/storageGroup'
          description: |-
            Previous groups are the groups expected to be present in the store.
            Performs a diff on the GroupProperties present in previous_groups and required_groups:
            1) if in previous_groups but not required_groups, it gets deleted.
            2) if in previous_groups and required_groups, it gets updated.
            3) if not in previous_groups but in required_groups, it gets added.
        requiredGroups:
          type: array
          items:
            $ref: '#/components/schemas/storageGroup'
          description: Required groups are the groups we want to mutate the previous groups into.
      title: |-
        GroupBatchUpdateRequest is an in transaction batch update to the groups present.
        Next Available Tag: 3
    storageAnchoreConfig:
      type: object
      properties:
        endpoint:
          type: string
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        insecure:
          type: boolean
    storageClairConfig:
      type: object
      properties:
        endpoint:
          type: string
        insecure:
          type: boolean
    storageClairifyConfig:
      type: object
      properties:
        endpoint:
          type: string
        grpcEndpoint:
          type: string
        numConcurrentScans:
          type: integer
          format: int32
    storageDTRConfig:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        endpoint:
          type: string
        insecure:
          type: boolean
    storageDockerConfig:
      type: object
      properties:
        endpoint:
          type: string
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        insecure:
          type: boolean
    storageECRConfig:
      type: object
      properties:
        registryId:
          type: string
        accessKeyId:
          type: string
          description: The access key ID for the integration. The server will mask the value of this credential in responses and logs.
        secretAccessKey:
          type: string
          description: The secret access key for the integration. The server will mask the value of this credential in responses and logs.
        region:
          type: string
        useIam:
          type: boolean
        endpoint:
          type: string
    storageGoogleConfig:
      type: object
      properties:
        endpoint:
          type: string
        serviceAccount:
          type: string
          description: The service account for the integration. The server will mask the value of this credential in responses and logs.
        project:
          type: string
    storageIBMRegistryConfig:
      type: object
      properties:
        endpoint:
          type: string
        apiKey:
          type: string
          description: The API key for the integration. The server will mask the value of this credential in responses and logs.
    storageImageIntegration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        clusters:
          type: array
          items:
            type: string
          description: If a list of clusters is provided, the integration will only be accessed from the specified clusters' sensors.
        categories:
          type: array
          items:
            $ref: '#/components/schemas/storageImageIntegrationCategory'
        dtr:
          $ref: '#/components/schemas/storageDTRConfig'
        clairify:
          $ref: '#/components/schemas/storageClairifyConfig'
        docker:
          $ref: '#/components/schemas/storageDockerConfig'
        quay:
          $ref: '#/components/schemas/storageQuayConfig'
        ecr:
          $ref: '#/components/schemas/storageECRConfig'
        tenable:
          $ref: '#/components/schemas/storageTenableConfig'
        google:
          $ref: '#/components/schemas/storageGoogleConfig'
        clair:
          $ref: '#/components/schemas/storageClairConfig'
        anchore:
          $ref: '#/components/schemas/storageAnchoreConfig'
        ibm:
          $ref: '#/components/schemas/storageIBMRegistryConfig'
        autogenerated:
          type: boolean
        clusterId:
          type: string
        skipTestIntegration:
          type: boolean
      title: 'Next Tag: 21'
    storageImageIntegrationCategory:
      type: string
      enum:
        - REGISTRY
        - SCANNER
        - NODE_SCANNER
      default: REGISTRY
      description: |2-
         - NODE_SCANNER: Image and Node integrations are currently done on the same form in the UI
        so the image integration is also currently used for node integrations.
        This decision was made because we currently only support one node scanner (our scanner).
    storageQuayConfig:
      type: object
      properties:
        endpoint:
          type: string
        oauthToken:
          type: string
          description: The OAuth token for the integration. The server will mask the value of this credential in responses and logs.
        insecure:
          type: boolean
    storageTenableConfig:
      type: object
      properties:
        accessKey:
          type: string
          description: The access key for the integration. The server will mask the value of this credential in responses and logs.
        secretKey:
          type: string
          description: The secret key for the integration. The server will mask the value of this credential in responses and logs.
    v1GetImageIntegrationsResponse:
      type: object
      properties:
        integrations:
          type: array
          items:
            $ref: '#/components/schemas/storageImageIntegration'
    v1UpdateImageIntegrationRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageImageIntegration'
        updatePassword:
          type: boolean
          description: When false, use the stored credentials of an existing image integration given its ID.
    EmbeddedImageScanComponentExecutable:
      type: object
      properties:
        path:
          type: string
    WatchImageResponseErrorType:
      type: string
      enum:
        - NO_ERROR
        - INVALID_IMAGE_NAME
        - NO_VALID_INTEGRATION
        - SCAN_FAILED
      default: NO_ERROR
    storageDataSource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    storageEmbeddedImageScanComponent:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        license:
          $ref: '#/components/schemas/storageLicense'
        vulns:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedVulnerability'
        layerIndex:
          type: integer
          format: int32
        priority:
          type: string
          format: int64
        source:
          $ref: '#/components/schemas/storageSourceType'
        location:
          type: string
        topCvss:
          type: number
          format: float
        riskScore:
          type: number
          format: float
        fixedBy:
          type: string
          description: Component version that fixes all the fixable vulnerabilities in this component.
        executables:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedImageScanComponentExecutable'
      title: 'Next Tag: 13'
    storageImage:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/storageImageName'
        metadata:
          $ref: '#/components/schemas/storageImageMetadata'
        scan:
          $ref: '#/components/schemas/storageImageScan'
        components:
          type: integer
          format: int32
        cves:
          type: integer
          format: int32
        fixableCves:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        notPullable:
          type: boolean
        priority:
          type: string
          format: int64
        riskScore:
          type: number
          format: float
        topCvss:
          type: number
          format: float
        notes:
          type: array
          items:
            $ref: '#/components/schemas/storageImageNote'
      title: 'Next Tag: 15'
    storageImageLayer:
      type: object
      properties:
        instruction:
          type: string
        value:
          type: string
        created:
          type: string
          format: date-time
        author:
          type: string
        empty:
          type: boolean
    storageImageMetadata:
      type: object
      properties:
        v1:
          $ref: '#/components/schemas/storageV1Metadata'
        v2:
          $ref: '#/components/schemas/storageV2Metadata'
        layerShas:
          type: array
          items:
            type: string
          title: We never need both sets of layers so consolidate them. They will be ordered by oldest->newest
        dataSource:
          $ref: '#/components/schemas/storageDataSource'
    storageImageNote:
      type: string
      enum:
        - MISSING_METADATA
        - MISSING_SCAN_DATA
      default: MISSING_METADATA
    storageImageScan:
      type: object
      properties:
        scanTime:
          type: string
          format: date-time
        components:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedImageScanComponent'
        operatingSystem:
          type: string
        dataSource:
          $ref: '#/components/schemas/storageDataSource'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/storageImageScanNote'
    storageImageScanNote:
      type: string
      enum:
        - UNSET
        - OS_UNAVAILABLE
        - PARTIAL_SCAN_DATA
        - OS_CVES_UNAVAILABLE
        - OS_CVES_STALE
        - LANGUAGE_CVES_UNAVAILABLE
        - CERTIFIED_RHEL_SCAN_UNAVAILABLE
      default: UNSET
    storageLicense:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        url:
          type: string
    storageListImage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        components:
          type: integer
          format: int32
        cves:
          type: integer
          format: int32
        fixableCves:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        priority:
          type: string
          format: int64
    storageSourceType:
      type: string
      enum:
        - OS
        - PYTHON
        - JAVA
        - RUBY
        - NODEJS
        - DOTNETCORERUNTIME
        - INFRASTRUCTURE
      default: OS
    storageV1Metadata:
      type: object
      properties:
        digest:
          type: string
        created:
          type: string
          format: date-time
        author:
          type: string
        layers:
          type: array
          items:
            $ref: '#/components/schemas/storageImageLayer'
        user:
          type: string
        command:
          type: array
          items:
            type: string
        entrypoint:
          type: array
          items:
            type: string
        volumes:
          type: array
          items:
            type: string
        labels:
          type: object
          additionalProperties:
            type: string
    storageV2Metadata:
      type: object
      properties:
        digest:
          type: string
    storageWatchedImage:
      type: object
      properties:
        name:
          type: string
    v1CountImagesResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DeleteImagesResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int64
        dryRun:
          type: boolean
    v1GetWatchedImagesResponse:
      type: object
      properties:
        watchedImages:
          type: array
          items:
            $ref: '#/components/schemas/storageWatchedImage'
    v1ListImagesResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/storageListImage'
    v1ScanImageInternalResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageImage'
    v1ScanImageRequest:
      type: object
      properties:
        imageName:
          type: string
        force:
          type: boolean
        includeSnoozed:
          type: boolean
    v1WatchImageRequest:
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the image.
            This must be fully qualified, including a tag,
            but must NOT include a SHA.
    v1WatchImageResponse:
      type: object
      properties:
        normalizedName:
          type: string
          title: |-
            If the image was scanned successfully, this returns the normalized name of the image.
            This depends on what we get from the registry.
            For example, "docker.io/wordpress:latest" -> "docker.io/library/wordpress:latest"
        errorType:
          $ref: '#/components/schemas/WatchImageResponseErrorType'
        errorMessage:
          type: string
          description: Only set if error_type is NOT equal to "NO_ERROR".
    storageIntegrationHealth:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageIntegrationHealthType'
        status:
          $ref: '#/components/schemas/storageIntegrationHealthStatus'
        errorMessage:
          type: string
        lastTimestamp:
          type: string
          format: date-time
          title: Timestamp when the status was ascertained
    storageIntegrationHealthStatus:
      type: string
      enum:
        - UNINITIALIZED
        - UNHEALTHY
        - HEALTHY
      default: UNINITIALIZED
    storageIntegrationHealthType:
      type: string
      enum:
        - UNKNOWN
        - IMAGE_INTEGRATION
        - NOTIFIER
        - BACKUP
      default: UNKNOWN
    v1GetIntegrationHealthResponse:
      type: object
      properties:
        integrationHealth:
          type: array
          items:
            $ref: '#/components/schemas/storageIntegrationHealth'
    v1VulnDefinitionsInfo:
      type: object
      properties:
        lastUpdatedTimestamp:
          type: string
          format: date-time
    LicenseContact:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
        url:
          type: string
        name:
          type: string
    LicenseRestrictions:
      type: object
      properties:
        notValidBefore:
          type: string
          format: date-time
        notValidAfter:
          type: string
          format: date-time
        enforcementUrl:
          type: string
          description: URL for on-line license enforcement. Must be set unless allow_offline is true.
        allowOffline:
          type: boolean
          description: Allow offline use (i.e., no online license enforcement).
        maxNodes:
          type: integer
          format: int32
          description: Maximum number of nodes. Must be set unless no_node_restriction is true.
        noNodeRestriction:
          type: boolean
          description: Do not restrict the number of nodes.
        buildFlavors:
          type: array
          items:
            type: string
          description: |-
            Build flavors of the product this license is valid for (e.g., "development" or "release"). Must be set unless
            no_build_flavor_restriction is true.
        noBuildFlavorRestriction:
          type: boolean
          description: Do not restrict license to certain build flavors.
        deploymentEnvironments:
          type: array
          items:
            type: string
          description: |-
            Deployment environments that are valid for the product, such as `gcp` or `gcp/ultra-current-825`. Must be
            set unless no_deployment_environment_restriction is true.
        noDeploymentEnvironmentRestriction:
          type: boolean
          description: Do not restrict license to certain deployment environments.
    licenseLicense:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/licenseLicenseMetadata'
        supportContact:
          $ref: '#/components/schemas/LicenseContact'
        restrictions:
          $ref: '#/components/schemas/LicenseRestrictions'
    licenseLicenseMetadata:
      type: object
      properties:
        id:
          type: string
        signingKeyId:
          type: string
        issueDate:
          type: string
          format: date-time
        licensedForId:
          type: string
        licensedForName:
          type: string
    v1AddLicenseRequest:
      type: object
      properties:
        licenseKey:
          type: string
        activate:
          type: boolean
          description: Indicates whether the license represented by this key should be made the active license.
    v1AddLicenseResponse:
      type: object
      properties:
        license:
          $ref: '#/components/schemas/v1LicenseInfo'
        accepted:
          type: boolean
          description: |-
            Indicates whether or not the license was accepted by the product. Only licenses which are either valid or
            not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,
            e.g., contact information from the decoded blob.
    v1GetActiveLicenseExpirationResponse:
      type: object
      properties:
        expirationTime:
          type: string
          format: date-time
    v1GetActiveLicenseKeyResponse:
      type: object
      properties:
        licenseKey:
          type: string
    v1GetLicensesResponse:
      type: object
      properties:
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/v1LicenseInfo'
    v1LicenseInfo:
      type: object
      properties:
        license:
          $ref: '#/components/schemas/licenseLicense'
        status:
          $ref: '#/components/schemas/v1LicenseInfoStatus'
        statusReason:
          type: string
        active:
          type: boolean
    v1LicenseInfoStatus:
      type: string
      enum:
        - UNKNOWN
        - VALID
        - REVOKED
        - NOT_YET_VALID
        - EXPIRED
        - OTHER
      default: UNKNOWN
    MetadataLicenseStatus:
      type: string
      enum:
        - NONE
        - INVALID
        - EXPIRED
        - RESTARTING
        - VALID
      default: NONE
    v1Metadata:
      type: object
      properties:
        version:
          type: string
        buildFlavor:
          type: string
        releaseBuild:
          type: boolean
        licenseStatus:
          $ref: '#/components/schemas/MetadataLicenseStatus'
    v1TLSChallengeResponse:
      type: object
      properties:
        trustInfoSerialized:
          type: string
          format: byte
          title: signed data which is returned to the caller, is validated against the signature
        signature:
          type: string
          format: byte
    storageMitreAttackVector:
      type: object
      properties:
        tactic:
          $ref: '#/components/schemas/storageMitreTactic'
        techniques:
          type: array
          items:
            $ref: '#/components/schemas/storageMitreTechnique'
    storageMitreTactic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    storageMitreTechnique:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    v1GetMitreVectorResponse:
      type: object
      properties:
        mitreAttackVector:
          $ref: '#/components/schemas/storageMitreAttackVector'
    v1ListMitreAttackVectorsResponse:
      type: object
      properties:
        mitreAttackVectors:
          type: array
          items:
            $ref: '#/components/schemas/storageMitreAttackVector'
    storageNamespaceMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'TODO(ROX-6895): "Label" search term is ambiguous.'
        creationTime:
          type: string
          format: date-time
        priority:
          type: string
          format: int64
        annotations:
          type: object
          additionalProperties:
            type: string
    v1GetNamespacesResponse:
      type: object
      properties:
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/v1Namespace'
    v1Namespace:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/storageNamespaceMetadata'
        numDeployments:
          type: integer
          format: int32
        numSecrets:
          type: integer
          format: int32
        numNetworkPolicies:
          type: integer
          format: int32
    DeploymentListenPort:
      type: object
      properties:
        port:
          type: integer
          format: int64
        l4protocol:
          $ref: '#/components/schemas/storageL4Protocol'
    NetworkEntityInfoExternalSource:
      type: object
      properties:
        name:
          type: string
        cidr:
          type: string
        default:
          type: boolean
          description: '`default` indicates whether the external source is user-generated or system-generated.'
      description: Update normalizeDupNameExtSrcs(...) in `central/networkgraph/aggregator/aggregator.go` whenever this message is updated.
    storageNetworkBaseline:
      type: object
      properties:
        deploymentId:
          type: string
          description: This is the ID of the baseline.
        clusterId:
          type: string
        namespace:
          type: string
        peers:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselinePeer'
        forbiddenPeers:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselinePeer'
          description: |-
            A list of peers that will never be added to the baseline.
            For now, this contains peers that the user has manually removed.
            This is used to ensure we don't add it back in the event
            we see the flow again.
        observationPeriodEnd:
          type: string
          format: date-time
        locked:
          type: boolean
          title: |-
            Indicates if this baseline has been locked by user.
            Here locking means:
              1: Do not let system automatically add any allowed peer to baseline
              2: Start reporting violations on flows that are not in the baseline
        deploymentName:
          type: string
      title: |-
        NetworkBaseline represents a network baseline of a deployment. It contains all
        the baseline peers and their respective connections.
        next available tag: 8
    storageNetworkBaselineConnectionProperties:
      type: object
      properties:
        ingress:
          type: boolean
          title: |-
            Whether this connection is an ingress/egress, from the PoV
            of the deployment whose baseline this is in
        port:
          type: integer
          format: int64
          title: May be 0 if not applicable (e.g., icmp), and denotes the destination port
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
      title: |-
        NetworkBaselineConnectionProperties represents information about a baseline connection
        next available tag: 4
    storageNetworkBaselinePeer:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntity'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
          title: Will always have at least one element
      title: |-
        NetworkBaselinePeer represents a baseline peer.
        next available tag: 3
    storageNetworkEntity:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        scope:
          $ref: '#/components/schemas/storageNetworkEntityScope'
    storageNetworkEntityInfo:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageNetworkEntityInfoType'
        id:
          type: string
        deployment:
          $ref: '#/components/schemas/storageNetworkEntityInfoDeployment'
        externalSource:
          $ref: '#/components/schemas/NetworkEntityInfoExternalSource'
    storageNetworkEntityInfoDeployment:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        cluster:
          type: string
        listenPorts:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentListenPort'
    storageNetworkEntityScope:
      type: object
      properties:
        clusterId:
          type: string
    v1ModifyBaselineStatusForPeersRequest:
      type: object
      properties:
        deploymentId:
          type: string
        peers:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'
    v1NetworkBaselinePeerEntity:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/storageNetworkEntityInfoType'
    v1NetworkBaselinePeerStatus:
      type: object
      properties:
        peer:
          $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'
        status:
          $ref: '#/components/schemas/v1NetworkBaselinePeerStatusStatus'
    v1NetworkBaselinePeerStatusStatus:
      type: string
      enum:
        - BASELINE
        - ANOMALOUS
      default: BASELINE
      title: |-
        Status of this peer connection. As of now we only have two statuses:
          - BASELINE: the connection is in the current deployment baseline
          - ANOMALOUS: the connection is not recognized by the current deployment baseline
    v1NetworkBaselineStatusPeer:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/v1NetworkBaselinePeerEntity'
        port:
          type: integer
          format: int64
          description: The port and protocol of the destination of the given connection.
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
        ingress:
          type: boolean
          description: |-
            A boolean representing whether the query is for an ingress or egress
            connection. This is defined with respect to the current deployment.
            Thus:
              - If the connection in question is in the outEdges of the current deployment,
                this should be false.
              - If it is in the outEdges of the peer deployment, this
                should be true.
    v1NetworkBaselineStatusRequest:
      type: object
      properties:
        deploymentId:
          type: string
        peers:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'
    v1NetworkBaselineStatusResponse:
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'
    v1ResourceByID:
      type: object
      properties:
        id:
          type: string
    storageNetworkGraphConfig:
      type: object
      properties:
        hideDefaultExternalSrcs:
          type: boolean
    v1CreateNetworkEntityRequest:
      type: object
      properties:
        clusterId:
          type: string
        entity:
          $ref: '#/components/schemas/NetworkEntityInfoExternalSource'
    v1GetExternalNetworkEntitiesResponse:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkEntity'
    v1NetworkEdgeProperties:
      type: object
      properties:
        port:
          type: integer
          format: int64
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
        lastActiveTimestamp:
          type: string
          format: date-time
    v1NetworkEdgePropertiesBundle:
      type: object
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkEdgeProperties'
    v1NetworkGraph:
      type: object
      properties:
        epoch:
          type: integer
          format: int64
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkNode'
    v1NetworkGraphScope:
      type: object
      properties:
        query:
          type: string
    v1NetworkNode:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        internetAccess:
          type: boolean
        policyIds:
          type: array
          items:
            type: string
        nonIsolatedIngress:
          type: boolean
        nonIsolatedEgress:
          type: boolean
        queryMatch:
          type: boolean
        outEdges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'
    v1PatchNetworkEntityRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    v1PutNetworkGraphConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageNetworkGraphConfig'
    GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode:
      type: string
      enum:
        - UNKNOWN
        - NONE
        - GENERATED_ONLY
        - ALL
      default: UNKNOWN
    storageIPBlock:
      type: object
      properties:
        cidr:
          type: string
        except:
          type: array
          items:
            type: string
    storageNetworkPolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        spec:
          $ref: '#/components/schemas/storageNetworkPolicySpec'
        yaml:
          type: string
        apiVersion:
          type: string
        created:
          type: string
          format: date-time
    storageNetworkPolicyApplicationUndoRecord:
      type: object
      properties:
        user:
          type: string
        applyTimestamp:
          type: string
          format: date-time
        originalModification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
        undoModification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
    storageNetworkPolicyEgressRule:
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPort'
        to:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPeer'
    storageNetworkPolicyIngressRule:
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPort'
        from:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPeer'
    storageNetworkPolicyModification:
      type: object
      properties:
        applyYaml:
          type: string
        toDelete:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyReference'
      title: 'Next available tag: 3'
    storageNetworkPolicyPeer:
      type: object
      properties:
        podSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        namespaceSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        ipBlock:
          $ref: '#/components/schemas/storageIPBlock'
    storageNetworkPolicyPort:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/storageProtocol'
        port:
          type: integer
          format: int32
        portName:
          type: string
    storageNetworkPolicyReference:
      type: object
      properties:
        namespace:
          type: string
        name:
          type: string
      title: 'Next available tag: 3'
    storageNetworkPolicySpec:
      type: object
      properties:
        podSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        ingress:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyIngressRule'
        egress:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyEgressRule'
        policyTypes:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyType'
    storageNetworkPolicyType:
      type: string
      enum:
        - UNSET_NETWORK_POLICY_TYPE
        - INGRESS_NETWORK_POLICY_TYPE
        - EGRESS_NETWORK_POLICY_TYPE
      default: UNSET_NETWORK_POLICY_TYPE
    storageProtocol:
      type: string
      enum:
        - UNSET_PROTOCOL
        - TCP_PROTOCOL
        - UDP_PROTOCOL
        - SCTP_PROTOCOL
      default: UNSET_PROTOCOL
    v1ApplyNetworkPolicyYamlForDeploymentRequest:
      type: object
      properties:
        deploymentId:
          type: string
        modification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
    v1GenerateNetworkPoliciesResponse:
      type: object
      properties:
        modification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
      title: 'Next available tag: 2'
    v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse:
      type: object
      properties:
        allowedPeers:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'
    v1GetBaselineGeneratedPolicyForDeploymentRequest:
      type: object
      properties:
        deploymentId:
          type: string
        deleteExisting:
          $ref: '#/components/schemas/GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode'
        includePorts:
          type: boolean
    v1GetBaselineGeneratedPolicyForDeploymentResponse:
      type: object
      properties:
        modification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
    v1GetDiffFlowsGroupedFlow:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
    v1GetDiffFlowsReconciledFlow:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        added:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
        removed:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
        unchanged:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
    v1GetDiffFlowsResponse:
      type: object
      properties:
        added:
          type: array
          items:
            $ref: '#/components/schemas/v1GetDiffFlowsGroupedFlow'
        removed:
          type: array
          items:
            $ref: '#/components/schemas/v1GetDiffFlowsGroupedFlow'
        reconciled:
          type: array
          items:
            $ref: '#/components/schemas/v1GetDiffFlowsReconciledFlow'
    v1GetUndoModificationForDeploymentResponse:
      type: object
      properties:
        undoRecord:
          $ref: '#/components/schemas/storageNetworkPolicyApplicationUndoRecord'
    v1GetUndoModificationResponse:
      type: object
      properties:
        undoRecord:
          $ref: '#/components/schemas/storageNetworkPolicyApplicationUndoRecord'
    v1NetworkGraphDiff:
      type: object
      properties:
        DEPRECATEDNodeDiffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkNodeDiff'
        nodeDiffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkNodeDiff'
    v1NetworkGraphEpoch:
      type: object
      properties:
        epoch:
          type: integer
          format: int64
    v1NetworkNodeDiff:
      type: object
      properties:
        policyIds:
          type: array
          items:
            type: string
        DEPRECATEDOutEdges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'
        outEdges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'
        nonIsolatedIngress:
          type: boolean
        nonIsolatedEgress:
          type: boolean
    v1NetworkPoliciesResponse:
      type: object
      properties:
        networkPolicies:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicy'
    v1NetworkPolicyInSimulation:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storageNetworkPolicy'
        status:
          $ref: '#/components/schemas/v1NetworkPolicyInSimulationStatus'
        oldPolicy:
          $ref: '#/components/schemas/storageNetworkPolicy'
    v1NetworkPolicyInSimulationStatus:
      type: string
      enum:
        - INVALID
        - UNCHANGED
        - MODIFIED
        - ADDED
        - DELETED
      default: INVALID
    v1SimulateNetworkGraphResponse:
      type: object
      properties:
        simulatedGraph:
          $ref: '#/components/schemas/v1NetworkGraph'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkPolicyInSimulation'
        added:
          $ref: '#/components/schemas/v1NetworkGraphDiff'
        removed:
          $ref: '#/components/schemas/v1NetworkGraphDiff'
    v1ListNodesResponse:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/storageNode'
    AWSSecurityHubCredentials:
      type: object
      properties:
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
    EmailAuthMethod:
      type: string
      enum:
        - DISABLED
        - PLAIN
        - LOGIN
      default: DISABLED
    JiraPriorityMapping:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/storageSeverity'
        priorityName:
          type: string
    SyslogLocalFacility:
      type: string
      enum:
        - LOCAL0
        - LOCAL1
        - LOCAL2
        - LOCAL3
        - LOCAL4
        - LOCAL5
        - LOCAL6
        - LOCAL7
      default: LOCAL0
    SyslogTCPConfig:
      type: object
      properties:
        hostname:
          type: string
        port:
          type: integer
          format: int32
        skipTlsVerify:
          type: boolean
        useTls:
          type: boolean
    storageAWSSecurityHub:
      type: object
      properties:
        region:
          type: string
        credentials:
          $ref: '#/components/schemas/AWSSecurityHubCredentials'
        accountId:
          type: string
    storageCSCC:
      type: object
      properties:
        serviceAccount:
          type: string
          description: The service account for the integration. The server will mask the value of this credential in responses and logs.
        sourceId:
          type: string
    storageEmail:
      type: object
      properties:
        server:
          type: string
        sender:
          type: string
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        disableTLS:
          type: boolean
        DEPRECATEDUseStartTLS:
          type: boolean
        from:
          type: string
        startTLSAuthMethod:
          $ref: '#/components/schemas/EmailAuthMethod'
    storageGeneric:
      type: object
      properties:
        endpoint:
          type: string
        skipTLSVerify:
          type: boolean
        caCert:
          type: string
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/storageKeyValuePair'
        extraFields:
          type: array
          items:
            $ref: '#/components/schemas/storageKeyValuePair'
        auditLoggingEnabled:
          type: boolean
    storageJira:
      type: object
      properties:
        url:
          type: string
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        issueType:
          type: string
        priorityMappings:
          type: array
          items:
            $ref: '#/components/schemas/JiraPriorityMapping'
        defaultFieldsJson:
          type: string
    storageKeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    storageNotifier:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        uiEndpoint:
          type: string
        labelKey:
          type: string
        labelDefault:
          type: string
        jira:
          $ref: '#/components/schemas/storageJira'
        email:
          $ref: '#/components/schemas/storageEmail'
        cscc:
          $ref: '#/components/schemas/storageCSCC'
        splunk:
          $ref: '#/components/schemas/storageSplunk'
        pagerduty:
          $ref: '#/components/schemas/storagePagerDuty'
        generic:
          $ref: '#/components/schemas/storageGeneric'
        sumologic:
          $ref: '#/components/schemas/storageSumoLogic'
        awsSecurityHub:
          $ref: '#/components/schemas/storageAWSSecurityHub'
        syslog:
          $ref: '#/components/schemas/storageSyslog'
    storagePagerDuty:
      type: object
      properties:
        apiKey:
          type: string
          description: The API key for the integration. The server will mask the value of this credential in responses and logs.
    storageSplunk:
      type: object
      properties:
        httpToken:
          type: string
          description: The HTTP token for the integration. The server will mask the value of this credential in responses and logs.
        httpEndpoint:
          type: string
        insecure:
          type: boolean
        truncate:
          type: string
          format: int64
        auditLoggingEnabled:
          type: boolean
        derivedSourceType:
          type: boolean
          title: derived_source_type is deprecated in lieu of source_types
        sourceTypes:
          type: object
          additionalProperties:
            type: string
    storageSumoLogic:
      type: object
      properties:
        httpSourceAddress:
          type: string
        skipTLSVerify:
          type: boolean
    storageSyslog:
      type: object
      properties:
        localFacility:
          $ref: '#/components/schemas/SyslogLocalFacility'
        tcpConfig:
          $ref: '#/components/schemas/SyslogTCPConfig'
    v1GetNotifiersResponse:
      type: object
      properties:
        notifiers:
          type: array
          items:
            $ref: '#/components/schemas/storageNotifier'
    v1UpdateNotifierRequest:
      type: object
      properties:
        notifier:
          $ref: '#/components/schemas/storageNotifier'
        updatePassword:
          type: boolean
          description: When false, use the stored credentials of an existing notifier configuration given its ID.
    v1PongMessage:
      type: object
      properties:
        status:
          type: string
    PodContainerInstanceList:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerInstance'
    storagePod:
      type: object
      properties:
        id:
          type: string
          title: Pod UID
        name:
          type: string
        deploymentId:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        liveInstances:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerInstance'
        terminatedInstances:
          type: array
          items:
            $ref: '#/components/schemas/PodContainerInstanceList'
          description: |-
            Must be a list of lists, so we can perform search queries (does not work for maps that aren't <string, string>)
            There is one bucket (list) per container name.
        started:
          type: string
          format: date-time
          description: Time Kubernetes reports the pod was created.
      description: Pod represents information for a currently running pod or deleted pod in an active deployment.
    v1PodsResponse:
      type: object
      properties:
        pods:
          type: array
          items:
            $ref: '#/components/schemas/storagePod'
    GetPolicyMitreVectorsRequestOptions:
      type: object
      properties:
        excludePolicy:
          type: boolean
          description: If set to true, policy is excluded from the response.
    storageExportPoliciesResponse:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicy'
      title: |-
        ExportPoliciesResponse is used by the API but it is defined in storage because we expect customers to store them.
        We do backwards-compatibility checks on objects in the storge folder and those checks should be applied to this object
    storageListPolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        severity:
          $ref: '#/components/schemas/storageSeverity'
        disabled:
          type: boolean
        lifecycleStages:
          type: array
          items:
            $ref: '#/components/schemas/storageLifecycleStage'
        notifiers:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time
        eventSource:
          $ref: '#/components/schemas/storageEventSource'
    v1DryRunJobStatusResponse:
      type: object
      properties:
        pending:
          type: boolean
        result:
          $ref: '#/components/schemas/v1DryRunResponse'
    v1DryRunResponse:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/v1DryRunResponseAlert'
    v1DryRunResponseAlert:
      type: object
      properties:
        deployment:
          type: string
        violations:
          type: array
          items:
            type: string
    v1EnableDisablePolicyNotificationRequest:
      type: object
      properties:
        policyId:
          type: string
        notifierIds:
          type: array
          items:
            type: string
        disable:
          type: boolean
    v1ExportPoliciesRequest:
      type: object
      properties:
        policyIds:
          type: array
          items:
            type: string
    v1GetPolicyMitreVectorsResponse:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storagePolicy'
        vectors:
          type: array
          items:
            $ref: '#/components/schemas/storageMitreAttackVector'
    v1ImportPoliciesMetadata:
      type: object
      properties:
        overwrite:
          type: boolean
    v1ImportPoliciesRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1ImportPoliciesMetadata'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicy'
    v1ImportPoliciesResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/v1ImportPolicyResponse'
        allSucceeded:
          type: boolean
    v1ImportPolicyError:
      type: object
      properties:
        message:
          type: string
        type:
          type: string
        duplicateName:
          type: string
        validationError:
          type: string
    v1ImportPolicyResponse:
      type: object
      properties:
        succeeded:
          type: boolean
        policy:
          $ref: '#/components/schemas/storagePolicy'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/v1ImportPolicyError'
    v1JobId:
      type: object
      properties:
        jobId:
          type: string
    v1ListPoliciesResponse:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/storageListPolicy'
    v1PatchPolicyRequest:
      type: object
      properties:
        id:
          type: string
        disabled:
          type: boolean
    v1PolicyCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
    v1PolicyFromSearchRequest:
      type: object
      properties:
        searchParams:
          type: string
    v1PolicyFromSearchResponse:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storagePolicy'
        alteredSearchTerms:
          type: array
          items:
            type: string
        hasNestedFields:
          type: boolean
    v1RenamePolicyCategoryRequest:
      type: object
      properties:
        oldCategory:
          type: string
        newCategory:
          type: string
    v1GetExistingProbesResponse:
      type: object
      properties:
        existingFiles:
          type: array
          items:
            $ref: '#/components/schemas/v1ProbeUploadManifestFile'
    v1ProbeUploadManifestFile:
      type: object
      properties:
        name:
          type: string
        size:
          type: string
          format: int64
        crc32:
          type: integer
          format: int64
    storageBaselineElement:
      type: object
      properties:
        element:
          $ref: '#/components/schemas/storageBaselineItem'
        auto:
          type: boolean
    storageBaselineItem:
      type: object
      properties:
        processName:
          type: string
    storageProcessBaseline:
      type: object
      properties:
        id:
          type: string
        key:
          $ref: '#/components/schemas/storageProcessBaselineKey'
        elements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineElement'
        elementGraveyard:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineElement'
        created:
          type: string
          format: date-time
        userLockedTimestamp:
          type: string
          format: date-time
        stackRoxLockedTimestamp:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
    storageProcessBaselineKey:
      type: object
      properties:
        deploymentId:
          type: string
          description: |-
            The idea is for the keys to be flexible.
            Only certain combinations of these will be supported.
        containerName:
          type: string
        clusterId:
          type: string
        namespace:
          type: string
    v1DeleteProcessBaselinesResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int32
        dryRun:
          type: boolean
    v1LockProcessBaselinesRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaselineKey'
        locked:
          type: boolean
    v1ProcessBaselineUpdateError:
      type: object
      properties:
        error:
          type: string
        key:
          $ref: '#/components/schemas/storageProcessBaselineKey'
    v1UpdateProcessBaselinesRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaselineKey'
        addElements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineItem'
        removeElements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineItem'
    v1UpdateProcessBaselinesResponse:
      type: object
      properties:
        baselines:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaseline'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessBaselineUpdateError'
    v1GetGroupedProcessesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessNameGroup'
    v1GetGroupedProcessesWithContainerResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessNameAndContainerNameGroup'
    v1GetProcessesResponse:
      type: object
      properties:
        processes:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessIndicator'
    v1ProcessGroup:
      type: object
      properties:
        args:
          type: string
        signals:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessIndicator'
    v1ProcessNameAndContainerNameGroup:
      type: object
      properties:
        name:
          type: string
        containerName:
          type: string
        timesExecuted:
          type: integer
          format: int64
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessGroup'
        suspicious:
          type: boolean
    v1ProcessNameGroup:
      type: object
      properties:
        name:
          type: string
        timesExecuted:
          type: integer
          format: int64
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessGroup'
    v1DeleteProcessWhitelistsResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int32
        dryRun:
          type: boolean
    v1LockProcessWhitelistsRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaselineKey'
        locked:
          type: boolean
    v1ProcessWhitelistUpdateError:
      type: object
      properties:
        error:
          type: string
        key:
          $ref: '#/components/schemas/storageProcessBaselineKey'
    v1UpdateProcessWhitelistsRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaselineKey'
        addElements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineItem'
        removeElements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineItem'
    v1UpdateProcessWhitelistsResponse:
      type: object
      properties:
        whitelists:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaseline'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessWhitelistUpdateError'
    storageK8sRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        clusterRole:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'TODO(ROX-6895): "Label" search term is ambiguous.'
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        rules:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicyRule'
      title: |-
        Properties of an individual k8s Role or ClusterRole.
        ////////////////////////////////////////
    storageK8sRoleBinding:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        clusterRole:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'TODO(ROX-6895): "Label" search term is ambiguous.'
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/storageSubject'
        roleId:
          type: string
      title: |-
        Properties of an individual k8s RoleBinding or ClusterRoleBinding.
        ////////////////////////////////////////
    storagePolicyRule:
      type: object
      properties:
        verbs:
          type: array
          items:
            type: string
        apiGroups:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            type: string
        nonResourceUrls:
          type: array
          items:
            type: string
        resourceNames:
          type: array
          items:
            type: string
      title: |-
        Properties of an individual rules that grant permissions to resources.
        ////////////////////////////////////////
    storageSubject:
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/storageSubjectKind'
        name:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
      title: |-
        Properties of an individual subjects who are granted roles via role bindings.
        ////////////////////////////////////////
    storageSubjectKind:
      type: string
      enum:
        - UNSET_KIND
        - SERVICE_ACCOUNT
        - USER
        - GROUP
      default: UNSET_KIND
    v1GetRoleBindingResponse:
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/storageK8sRoleBinding'
    v1GetRoleResponse:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/storageK8sRole'
    v1GetSubjectResponse:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/storageSubject'
        clusterRoles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
        scopedRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopedRoles'
    v1ListRoleBindingsResponse:
      type: object
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRoleBinding'
      title: |-
        A list of k8s role bindings (free of scoped information)
        Next Tag: 2
    v1ListRolesResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
      title: |-
        A list of k8s roles (free of scoped information)
        Next Tag: 2
    v1ListSubjectsResponse:
      type: object
      properties:
        subjectAndRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectAndRoles'
      title: |-
        A list of k8s subjects (users and groups only, for service accounts, try the service account service)
        Next Tag: 2
    v1ScopedRoles:
      type: object
      properties:
        namespace:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
    v1SubjectAndRoles:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/storageSubject'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
    ComputeEffectiveAccessScopeRequestDetail:
      type: string
      enum:
        - STANDARD
        - MINIMAL
        - HIGH
      default: STANDARD
    ComputeEffectiveAccessScopeRequestPayload:
      type: object
      properties:
        simpleRules:
          $ref: '#/components/schemas/SimpleAccessScopeRules'
    SimpleAccessScopeRules:
      type: object
      properties:
        includedClusters:
          type: array
          items:
            type: string
        includedNamespaces:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAccessScopeRulesNamespace'
        clusterLabelSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageSetBasedLabelSelector'
        namespaceLabelSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageSetBasedLabelSelector'
      description: |-
        Each element of any repeated field is an individual rule. Rules are
        joined by logical OR: if there exists a rule allowing resource `x`,
        `x` is in the access scope.
    SimpleAccessScopeRulesNamespace:
      type: object
      properties:
        clusterName:
          type: string
          description: Both fields must be set.
        namespaceName:
          type: string
    storageEffectiveAccessScope:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/storageEffectiveAccessScopeCluster'
      description: |-
        EffectiveAccessScope describes which clusters and namespaces are "in scope"
        given current state. Basically, if AccessScope is applied to the currently
        known clusters and namespaces, the result is EffectiveAccessScope.

        EffectiveAccessScope represents a tree with nodes marked as included and
        excluded. If a node is included, all its child nodes are included.
    storageEffectiveAccessScopeCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state:
          $ref: '#/components/schemas/storageEffectiveAccessScopeState'
        labels:
          type: object
          additionalProperties:
            type: string
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/storageEffectiveAccessScopeNamespace'
    storageEffectiveAccessScopeNamespace:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state:
          $ref: '#/components/schemas/storageEffectiveAccessScopeState'
        labels:
          type: object
          additionalProperties:
            type: string
    storageEffectiveAccessScopeState:
      type: string
      enum:
        - UNKNOWN
        - INCLUDED
        - EXCLUDED
        - PARTIAL
      default: UNKNOWN
    storagePermissionSet:
      type: object
      properties:
        id:
          type: string
          description: id is generated and cannot be changed.
        name:
          type: string
          description: '`name` and `description` are provided by the user and can be changed.'
        description:
          type: string
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: This encodes a set of permissions for StackRox resources.
    storageRole:
      type: object
      properties:
        name:
          type: string
          description: '`name` and `description` are provided by the user and can be changed.'
        description:
          type: string
        permissionSetId:
          type: string
          description: The associated PermissionSet and AccessScope for this Role.
        accessScopeId:
          type: string
        globalAccess:
          $ref: '#/components/schemas/storageAccess'
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
          description: Deprecated 2021-04-20 in favor of `permission_set_id`.
      description: |-
        A role specifies which actions are allowed for which subset of cluster
        objects. Permissions be can either specified directly via setting
        resource_to_access together with global_access or by referencing a
        permission set by its id in permission_set_name.
    storageSetBasedLabelSelector:
      type: object
      properties:
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/storageSetBasedLabelSelectorRequirement'
      description: |-
        SetBasedLabelSelector only allows set-based label requirements.

        Next available tag: 3
    storageSetBasedLabelSelectorOperator:
      type: string
      enum:
        - UNKNOWN
        - IN
        - NOT_IN
        - EXISTS
        - NOT_EXISTS
      default: UNKNOWN
    storageSetBasedLabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
        op:
          $ref: '#/components/schemas/storageSetBasedLabelSelectorOperator'
        values:
          type: array
          items:
            type: string
      title: 'Next available tag: 4'
    storageSimpleAccessScope:
      type: object
      properties:
        id:
          type: string
          description: '`id` is generated and cannot be changed.'
        name:
          type: string
          description: '`name` and `description` are provided by the user and can be changed.'
        description:
          type: string
        rules:
          $ref: '#/components/schemas/SimpleAccessScopeRules'
      description: |-
        Simple access scope is a (simple) selection criteria for scoped resources.
        It does *not* allow multi-component AND-rules nor set operations on names.
    v1GetPermissionsResponse:
      type: object
      properties:
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: |-
        GetPermissionsResponse is wire-compatible with the old format of the Role
        message and represents a collection of aggregated permissions.
    v1GetResourcesResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            type: string
    v1GetRolesResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageRole'
    v1ListPermissionSetsResponse:
      type: object
      properties:
        permissionSets:
          type: array
          items:
            $ref: '#/components/schemas/storagePermissionSet'
    v1ListSimpleAccessScopesResponse:
      type: object
      properties:
        accessScopes:
          type: array
          items:
            $ref: '#/components/schemas/storageSimpleAccessScope'
    storageAuthzPluginConfig:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        endpointConfig:
          $ref: '#/components/schemas/storageHTTPEndpointConfig'
    storageHTTPEndpointConfig:
      type: object
      properties:
        endpoint:
          type: string
        skipTlsVerify:
          type: boolean
        caCert:
          type: string
        username:
          type: string
        password:
          type: string
          description: The password for the integration. The server will mask the value of this credential in responses and logs.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/storageKeyValuePair'
        clientCertPem:
          type: string
          description: The client certificate in PEM format for the integration.
        clientKeyPem:
          type: string
          description: The client key in PEM format for the integration. The server will mask the value of this credential in responses and logs.
    v1GetAuthzPluginConfigsResponse:
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/storageAuthzPluginConfig'
    v1UpsertAuthzPluginConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageAuthzPluginConfig'
        updatePassword:
          type: boolean
          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.
    SearchResponseCount:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/v1SearchCategory'
        count:
          type: string
          format: int64
    SearchResultMatches:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    v1AutocompleteResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    v1SearchCategory:
      type: string
      enum:
        - SEARCH_UNSET
        - ALERTS
        - IMAGES
        - IMAGE_COMPONENTS
        - IMAGE_VULN_EDGE
        - IMAGE_COMPONENT_EDGE
        - POLICIES
        - DEPLOYMENTS
        - ACTIVE_COMPONENT
        - PODS
        - SECRETS
        - PROCESS_INDICATORS
        - COMPLIANCE
        - CLUSTERS
        - NAMESPACES
        - NODES
        - NODE_VULN_EDGE
        - NODE_COMPONENT_EDGE
        - COMPLIANCE_STANDARD
        - COMPLIANCE_CONTROL_GROUP
        - COMPLIANCE_CONTROL
        - SERVICE_ACCOUNTS
        - ROLES
        - ROLEBINDINGS
        - PROCESS_BASELINES
        - SUBJECTS
        - RISKS
        - VULNERABILITIES
        - COMPONENT_VULN_EDGE
        - CLUSTER_VULN_EDGE
        - NETWORK_ENTITY
      default: SEARCH_UNSET
      title: 'Next available tag: 31'
    v1SearchOptionsResponse:
      type: object
      properties:
        options:
          type: array
          items:
            type: string
    v1SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/v1SearchResult'
        counts:
          type: array
          items:
            $ref: '#/components/schemas/SearchResponseCount'
    v1SearchResult:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          $ref: '#/components/schemas/v1SearchCategory'
        fieldToMatches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SearchResultMatches'
        score:
          type: number
          format: double
        location:
          type: string
    ImagePullSecretRegistry:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
    storageCert:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/storageCertName'
        issuer:
          $ref: '#/components/schemas/storageCertName'
        sans:
          type: array
          items:
            type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        algorithm:
          type: string
    storageCertName:
      type: object
      properties:
        commonName:
          type: string
        country:
          type: string
        organization:
          type: string
        organizationUnit:
          type: string
        locality:
          type: string
        province:
          type: string
        streetAddress:
          type: string
        postalCode:
          type: string
        names:
          type: array
          items:
            type: string
    storageImagePullSecret:
      type: object
      properties:
        registries:
          type: array
          items:
            $ref: '#/components/schemas/ImagePullSecretRegistry'
    storageListSecret:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        types:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretType'
        createdAt:
          type: string
          format: date-time
    storageSecret:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        type:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        files:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretDataFile'
          description: |-
            Metadata about the secrets.
            The secret need not be a file, but rather may be an arbitrary value.
        relationship:
          $ref: '#/components/schemas/storageSecretRelationship'
      title: |-
        Flat secret object.
        Any properties of an individual secret.
        (regardless of time, scope, or context)
        ////////////////////////////////////////
    storageSecretContainerRelationship:
      type: object
      properties:
        id:
          type: string
          description: Id of the container the secret is mounted in.
        path:
          type: string
          description: Path is a container specific mounting directory.
      title: |-
        Secrets can be mounted in a path in a container.
        Next Tag: 3
    storageSecretDataFile:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageSecretType'
        cert:
          $ref: '#/components/schemas/storageCert'
        imagePullSecret:
          $ref: '#/components/schemas/storageImagePullSecret'
      description: |-
        Metadata about secret. Additional information is presented for a certificate file and
        imagePullSecret, but the "file" may also represent some arbitrary value.
    storageSecretDeploymentRelationship:
      type: object
      properties:
        id:
          type: string
          description: Id of the deployment using the secret within a container.
        name:
          type: string
          description: Name of the deployment.
      title: |-
        Secrets can be used by a deployment.
        Next Tag: 3
    storageSecretRelationship:
      type: object
      properties:
        id:
          type: string
          title: Secret id
        containerRelationships:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretContainerRelationship'
          title: Container id to relationship.s
        deploymentRelationships:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretDeploymentRelationship'
          description: Deployment id to relationship.
      title: |-
        The combined relationships that belong to the secret.
        Next Tag: 6
    storageSecretType:
      type: string
      enum:
        - UNDETERMINED
        - PUBLIC_CERTIFICATE
        - CERTIFICATE_REQUEST
        - PRIVACY_ENHANCED_MESSAGE
        - OPENSSH_PRIVATE_KEY
        - PGP_PRIVATE_KEY
        - EC_PRIVATE_KEY
        - RSA_PRIVATE_KEY
        - DSA_PRIVATE_KEY
        - CERT_PRIVATE_KEY
        - ENCRYPTED_PRIVATE_KEY
        - IMAGE_PULL_SECRET
      default: UNDETERMINED
    v1CountSecretsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1ListSecretsResponse:
      type: object
      properties:
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/storageListSecret'
      title: |-
        A list of secrets with their relationships.
        Next Tag: 2
    storageSensorUpgradeConfig:
      type: object
      properties:
        enableAutoUpgrade:
          type: boolean
          description: Whether to automatically trigger upgrades for out-of-date sensors.
      description: SensorUpgradeConfig encapsulates configuration relevant to sensor auto-upgrades.
    v1GetSensorUpgradeConfigResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageSensorUpgradeConfig'
    v1UpdateSensorUpgradeConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageSensorUpgradeConfig'
    storageServiceAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        clusterName:
          type: string
        clusterId:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'TODO(ROX-6895): "Label" search term is ambiguous.'
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        automountToken:
          type: boolean
        secrets:
          type: array
          items:
            type: string
        imagePullSecrets:
          type: array
          items:
            type: string
      title: |-
        Any properties of an individual service account.
        (regardless of time, scope, or context)
        ////////////////////////////////////////
    v1GetServiceAccountResponse:
      type: object
      properties:
        saAndRole:
          $ref: '#/components/schemas/v1ServiceAccountAndRoles'
      title: |-
        One service account
        Next Tag: 2
    v1ListServiceAccountResponse:
      type: object
      properties:
        saAndRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1ServiceAccountAndRoles'
      title: |-
        A list of service accounts (free of scoped information)
        Next Tag: 2
    v1SADeploymentRelationship:
      type: object
      properties:
        id:
          type: string
          title: Id of the deployment using the service account
        name:
          type: string
          description: Name of the deployment.
      title: |-
        Service accounts can be used by a deployment.
        Next Tag: 3
    v1ServiceAccountAndRoles:
      type: object
      properties:
        serviceAccount:
          $ref: '#/components/schemas/storageServiceAccount'
        clusterRoles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
        scopedRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopedRoles'
        deploymentRelationships:
          type: array
          items:
            $ref: '#/components/schemas/v1SADeploymentRelationship'
      title: |-
        A service account and the roles that reference it
        Next Tag: 5
    v1Authorities:
      type: object
      properties:
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/v1Authority'
    v1Authority:
      type: object
      properties:
        certificatePem:
          type: string
          format: byte
    v1CreateServiceIdentityRequest:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/storageServiceType'
    v1CreateServiceIdentityResponse:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/storageServiceIdentity'
        certificatePem:
          type: string
          format: byte
        privateKeyPem:
          type: string
          format: byte
    v1ServiceIdentityResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/storageServiceIdentity'
    v1SummaryCountsResponse:
      type: object
      properties:
        numAlerts:
          type: string
          format: int64
        numClusters:
          type: string
          format: int64
        numDeployments:
          type: string
          format: int64
        numImages:
          type: string
          format: int64
        numSecrets:
          type: string
          format: int64
        numNodes:
          type: string
          format: int64
    storageTelemetryConfiguration:
      type: object
      properties:
        enabled:
          type: boolean
        lastSetTime:
          type: string
          format: date-time
    v1ConfigureTelemetryRequest:
      type: object
      properties:
        enabled:
          type: boolean
    v1GetUsersAttributesResponse:
      type: object
      properties:
        usersAttributes:
          type: array
          items:
            $ref: '#/components/schemas/v1UserAttributeTuple'
      title: 'Next Tag: 2'
    v1GetUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/storageUser'
      title: 'Next Tag: 2'
    v1UserAttributeTuple:
      type: object
      properties:
        authProviderId:
          type: string
        key:
          type: string
        value:
          type: string
      title: |-
        UserAttributeTuple descript the auth:key:value tuple that decides group membership.
        Next Tag: 4
  ##########################
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
security:
  - basicAuth: [ ]
  - bearerAuth: [ ]
