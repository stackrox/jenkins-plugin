openapi: 3.0.0
info:
  title: API Reference
  version: '1'
  description: API reference for the StackRox Security Platform
paths:
  /v1/administration/events:
    get:
      summary: >-
        ListAdministrationEvents returns the list of events after filtered by
        requested fields.
      operationId: AdministrationEventService_ListAdministrationEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAdministrationEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: filter.from
          description: >-
            Matches events with last_occurred_at after a specific timestamp,
            i.e. the lower boundary.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.until
          description: >-
            Matches events with last_occurred_at before a specific timestamp,
            i.e. the upper boundary.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.domain
          description: Matches events from a specific domain.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.resourceType
          description: Matches events associated with a specific resource type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.type
          description: Matches events based on their type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ADMINISTRATION_EVENT_TYPE_UNKNOWN
                - ADMINISTRATION_EVENT_TYPE_GENERIC
                - ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE
        - name: filter.level
          description: Matches events based on their level.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ADMINISTRATION_EVENT_LEVEL_UNKNOWN
                - ADMINISTRATION_EVENT_LEVEL_INFO
                - ADMINISTRATION_EVENT_LEVEL_SUCCESS
                - ADMINISTRATION_EVENT_LEVEL_WARNING
                - ADMINISTRATION_EVENT_LEVEL_ERROR
      tags:
        - AdministrationEventService
  /v1/administration/events/{id}:
    get:
      summary: GetAdministrationEvent retrieves an event by ID.
      operationId: AdministrationEventService_GetAdministrationEvent
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAdministrationEventResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AdministrationEventService
  /v1/count/administration/events:
    get:
      summary: >-
        CountAdministrationEvents returns the number of events after filtering
        by requested fields.
      operationId: AdministrationEventService_CountAdministrationEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountAdministrationEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: filter.from
          description: >-
            Matches events with last_occurred_at after a specific timestamp,
            i.e. the lower boundary.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.until
          description: >-
            Matches events with last_occurred_at before a specific timestamp,
            i.e. the upper boundary.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.domain
          description: Matches events from a specific domain.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.resourceType
          description: Matches events associated with a specific resource type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.type
          description: Matches events based on their type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ADMINISTRATION_EVENT_TYPE_UNKNOWN
                - ADMINISTRATION_EVENT_TYPE_GENERIC
                - ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE
        - name: filter.level
          description: Matches events based on their level.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ADMINISTRATION_EVENT_LEVEL_UNKNOWN
                - ADMINISTRATION_EVENT_LEVEL_INFO
                - ADMINISTRATION_EVENT_LEVEL_SUCCESS
                - ADMINISTRATION_EVENT_LEVEL_WARNING
                - ADMINISTRATION_EVENT_LEVEL_ERROR
      tags:
        - AdministrationEventService
  /v1/administration/usage/secured-units/current:
    get:
      summary: |-
        GetCurrentSecuredUnitsUsage returns the current secured units usage
        metrics values.
      description: >-
        The secured units metrics are collected from all connected clusters
        every

        5 minutes, so the returned result includes data for the connected

        clusters accurate to about these 5 minutes, and potentially some
        outdated

        data for the disconnected clusters.
      operationId: AdministrationUsageService_GetCurrentSecuredUnitsUsage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SecuredUnitsUsageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - AdministrationUsageService
  /v1/administration/usage/secured-units/max:
    get:
      summary: |-
        GetMaxSecuredUnitsUsage returns the maximum, i.e. peak, secured units
        usage observed during a given time range, together with the time when
        this maximum was aggregated and stored.
      description: |-
        The usage metrics are continuously collected from all the connected
        clusters. The maximum values are kept for some period of time in memory,
        and then, periodically, are stored to the database.
        The last data from disconnected clusters are taken into account.
      operationId: AdministrationUsageService_GetMaxSecuredUnitsUsage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1MaxSecuredUnitsUsageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
      tags:
        - AdministrationUsageService
  /v1/alerts:
    get:
      summary: List returns the slim list version of the alerts.
      operationId: AlertService_ListAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAlertsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
    delete:
      operationId: AlertService_DeleteAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteAlertsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: query.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: query.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/alerts/resolve:
    patch:
      summary: ResolveAlertsByQuery marks alerts matching search query as resolved.
      operationId: AlertService_ResolveAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ResolveAlertsRequest'
        required: true
      tags:
        - AlertService
  /v1/alerts/summary/counts:
    get:
      summary: >-
        GetAlertsCounts returns the number of alerts in the requested cluster or
        category.
      operationId: AlertService_GetAlertsCounts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAlertsCountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: request.query
          in: query
          required: false
          schema:
            type: string
        - name: request.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: request.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: request.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: request.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: request.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: request.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: groupBy
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - CATEGORY
              - CLUSTER
            default: UNSET
      tags:
        - AlertService
  /v1/alerts/summary/groups:
    get:
      summary: GetAlertsGroup returns alerts grouped by policy.
      operationId: AlertService_GetAlertsGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAlertsGroupResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/alerts/summary/timeseries:
    get:
      summary: GetAlertTimeseries returns the alerts sorted by time.
      operationId: AlertService_GetAlertTimeseries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAlertTimeseriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/alerts/{id}:
    get:
      summary: GetAlert returns the alert given its id.
      operationId: AlertService_GetAlert
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAlert'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AlertService
  /v1/alerts/{id}/resolve:
    patch:
      summary: ResolveAlert marks the given alert (by ID) as resolved.
      operationId: AlertService_ResolveAlert
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertServiceResolveAlertBody'
        required: true
      tags:
        - AlertService
  /v1/alertscount:
    get:
      summary: CountAlerts counts how many alerts match the get request.
      operationId: AlertService_CountAlerts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountAlertsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AlertService
  /v1/apitokens:
    get:
      summary: GetAPITokens returns all the API tokens.
      operationId: APITokenService_GetAPITokens
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAPITokensResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: revoked
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - APITokenService
  /v1/apitokens/generate:
    post:
      summary: GenerateToken generates API token for a given user and role.
      operationId: APITokenService_GenerateToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GenerateTokenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GenerateTokenRequest'
        required: true
      tags:
        - APITokenService
  /v1/apitokens/generate/allowed-roles:
    get:
      summary: >-
        GetAllowedTokenRoles return roles that user is allowed to request for
        API token.
      operationId: APITokenService_ListAllowedTokenRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAllowedTokenRolesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - APITokenService
  /v1/apitokens/revoke/{id}:
    patch:
      summary: RevokeToken removes the API token for a given id.
      operationId: APITokenService_RevokeToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - APITokenService
  /v1/apitokens/{id}:
    get:
      summary: GetAPIToken returns API token metadata for a given id.
      operationId: APITokenService_GetAPIToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageTokenMetadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - APITokenService
  /v1/auth/m2m:
    get:
      summary: >-
        ListAuthMachineToMachineConfigs lists the available auth machine to
        machine configs.
      operationId: AuthService_ListAuthMachineToMachineConfigs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAuthMachineToMachineConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - AuthService
    post:
      summary: >-
        AddAuthMachineToMachineConfig creates a new auth machine to machine
        config.
      operationId: AuthService_AddAuthMachineToMachineConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddAuthMachineToMachineConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddAuthMachineToMachineConfigRequest'
        required: true
      tags:
        - AuthService
  /v1/auth/m2m/exchange:
    post:
      summary: >-
        ExchangeAuthMachineToMachineToken exchanges a given identity token for a
        Central access token based on

        configured auth machine to machine configs.
      operationId: AuthService_ExchangeAuthMachineToMachineToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1ExchangeAuthMachineToMachineTokenResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ExchangeAuthMachineToMachineTokenRequest'
        required: true
      tags:
        - AuthService
  /v1/auth/m2m/{config.id}:
    put:
      summary: >-
        UpdateAuthMachineToMachineConfig updates an existing auth machine to
        machine config.

        In case the auth machine to machine config does not exist, a new one
        will be created.
      operationId: AuthService_UpdateAuthMachineToMachineConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: config.id
          description: >-
            UUID of the config.

            Note that when adding a machine to machine config, this field should
            not be set.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AuthServiceUpdateAuthMachineToMachineConfigBody
        required: true
      tags:
        - AuthService
  /v1/auth/m2m/{id}:
    get:
      summary: >-
        GetAuthMachineToMachineConfig retrieves the specific auth machine to
        machine config.
      operationId: AuthService_GetAuthMachineToMachineConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAuthMachineToMachineConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AuthService
    delete:
      summary: >-
        DeleteAuthMachineToMachineConfig deletes the specific auth machine to
        machine config.

        In case a specified auth machine to machine config does not exist is
        deleted, no error will be returned.
      operationId: AuthService_DeleteAuthMachineToMachineConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AuthService
  /v1/auth/status:
    get:
      summary: GetAuthStatus returns the status for the current client.
      operationId: AuthService_GetAuthStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AuthStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - AuthService
  /v1/authProviders:
    get:
      operationId: AuthProviderService_GetAuthProviders
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAuthProvidersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
      tags:
        - AuthProviderService
    post:
      operationId: AuthProviderService_PostAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageAuthProvider'
        required: true
      tags:
        - AuthProviderService
  /v1/authProviders/exchangeToken:
    post:
      operationId: AuthProviderService_ExchangeToken
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ExchangeTokenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ExchangeTokenRequest'
        required: true
      tags:
        - AuthProviderService
  /v1/authProviders/{id}:
    get:
      operationId: AuthProviderService_GetAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - AuthProviderService
    delete:
      operationId: AuthProviderService_DeleteAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - AuthProviderService
    put:
      operationId: AuthProviderService_PutAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProviderServicePutAuthProviderBody'
        required: true
      tags:
        - AuthProviderService
    patch:
      operationId: AuthProviderService_UpdateAuthProvider
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageAuthProvider'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProviderServiceUpdateAuthProviderBody'
        required: true
      tags:
        - AuthProviderService
  /v1/availableAuthProviders:
    get:
      operationId: AuthProviderService_ListAvailableProviderTypes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AvailableProviderTypesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - AuthProviderService
  /v1/login/authproviders:
    get:
      operationId: AuthProviderService_GetLoginAuthProviders
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetLoginAuthProvidersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - AuthProviderService
  /v1/externalbackups:
    get:
      summary: GetExternalBackups returns all external backup configurations.
      operationId: ExternalBackupService_GetExternalBackups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExternalBackupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ExternalBackupService
    post:
      summary: PostExternalBackup creates an external backup configuration.
      operationId: ExternalBackupService_PostExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storageExternalBackup'
      tags:
        - ExternalBackupService
  /v1/externalbackups/test:
    post:
      summary: TestExternalBackup tests an external backup configuration.
      operationId: ExternalBackupService_TestExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storageExternalBackup'
      tags:
        - ExternalBackupService
  /v1/externalbackups/test/updated:
    post:
      summary: >-
        TestUpdatedExternalBackup checks if the given external backup is
        correctly configured, with optional stored credential reconciliation.
      operationId: ExternalBackupService_TestUpdatedExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateExternalBackupRequest'
        required: true
      tags:
        - ExternalBackupService
  /v1/externalbackups/{externalBackup.id}:
    patch:
      summary: >-
        UpdateExternalBackup modifies a given external backup, with optional
        stored credential reconciliation.
      operationId: ExternalBackupService_UpdateExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: externalBackup.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ExternalBackupServiceUpdateExternalBackupBody
        required: true
      tags:
        - ExternalBackupService
  /v1/externalbackups/{id}:
    get:
      summary: >-
        GetExternalBackup returns the external backup configuration given its
        ID.
      operationId: ExternalBackupService_GetExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ExternalBackupService
    delete:
      summary: >-
        DeleteExternalBackup removes an external backup configuration given its
        ID.
      operationId: ExternalBackupService_DeleteExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ExternalBackupService
    post:
      summary: >-
        TriggerExternalBackup initiates an external backup for the given
        configuration.
      operationId: ExternalBackupService_TriggerExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ExternalBackupService
    put:
      summary: >-
        PutExternalBackup modifies a given external backup, without using stored
        credential reconciliation.
      operationId: ExternalBackupService_PutExternalBackup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExternalBackup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalBackupServicePutExternalBackupBody'
        required: true
      tags:
        - ExternalBackupService
  /v1/centralhealth/upgradestatus:
    get:
      operationId: CentralHealthService_GetUpgradeStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUpgradeStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - CentralHealthService
  /v1/cloud-sources:
    get:
      summary: >-
        ListCloudSources returns the list of cloud sources after filtered by
        requested fields.
      operationId: CloudSourcesService_ListCloudSources
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListCloudSourcesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: filter.names
          description: Matches cloud sources based on their name.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.types
          description: Matches cloud sources based on their type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - TYPE_UNSPECIFIED
                - TYPE_PALADIN_CLOUD
                - TYPE_OCM
      tags:
        - CloudSourcesService
    post:
      summary: CreateCloudSource creates a cloud source.
      operationId: CloudSourcesService_CreateCloudSource
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateCloudSourceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateCloudSourceRequest'
        required: true
      tags:
        - CloudSourcesService
  /v1/cloud-sources/test:
    post:
      summary: TestCloudSource tests a cloud source.
      operationId: CloudSourcesService_TestCloudSource
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TestCloudSourceRequest'
        required: true
      tags:
        - CloudSourcesService
  /v1/cloud-sources/{cloudSource.id}:
    put:
      summary: UpdateCloudSource creates or replaces a cloud source.
      operationId: CloudSourcesService_UpdateCloudSource
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: cloudSource.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudSourcesServiceUpdateCloudSourceBody'
        required: true
      tags:
        - CloudSourcesService
  /v1/cloud-sources/{id}:
    get:
      summary: GetCloudSource retrieves a cloud source by ID.
      operationId: CloudSourcesService_GetCloudSource
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCloudSourceResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - CloudSourcesService
    delete:
      summary: DeleteCloudSource removes a cloud source.
      operationId: CloudSourcesService_DeleteCloudSource
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - CloudSourcesService
  /v1/count/cloud-sources:
    get:
      summary: >-
        CountCloudSources returns the number of cloud sources after filtering by
        requested fields.
      operationId: CloudSourcesService_CountCloudSources
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountCloudSourcesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: filter.names
          description: Matches cloud sources based on their name.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.types
          description: Matches cloud sources based on their type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - TYPE_UNSPECIFIED
                - TYPE_PALADIN_CLOUD
                - TYPE_OCM
      tags:
        - CloudSourcesService
  /v1/cluster-init/ca-config:
    get:
      operationId: ClusterInitService_GetCAConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCAConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ClusterInitService
  /v1/cluster-init/crs:
    get:
      operationId: ClusterInitService_GetCRSs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CRSMetasResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ClusterInitService
    post:
      operationId: ClusterInitService_GenerateCRS
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CRSGenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CRSGenRequest'
        required: true
      tags:
        - ClusterInitService
  /v1/cluster-init/crs/revoke:
    patch:
      summary: RevokeCRSBundle deletes cluster registration secrets.
      operationId: ClusterInitService_RevokeCRS
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CRSRevokeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CRSRevokeRequest'
        required: true
      tags:
        - ClusterInitService
  /v1/cluster-init/init-bundles:
    get:
      operationId: ClusterInitService_GetInitBundles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InitBundleMetasResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ClusterInitService
    post:
      operationId: ClusterInitService_GenerateInitBundle
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InitBundleGenResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InitBundleGenRequest'
        required: true
      tags:
        - ClusterInitService
  /v1/cluster-init/init-bundles/revoke:
    patch:
      summary: >-
        RevokeInitBundle deletes cluster init bundle. If this operation impacts
        any cluster

        then its ID should be included in request.

        If confirm_impacted_clusters_ids does not match with current impacted
        clusters

        then request will fail with error that includes all impacted clusters.
      operationId: ClusterInitService_RevokeInitBundle
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InitBundleRevokeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InitBundleRevokeRequest'
        required: true
      tags:
        - ClusterInitService
  /v1/cluster-defaults:
    get:
      operationId: ClustersService_GetClusterDefaultValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterDefaultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ClustersService
  /v1/clusters:
    get:
      operationId: ClustersService_GetClusters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClustersList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - ClustersService
    post:
      operationId: ClustersService_PostCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageCluster'
        required: true
      tags:
        - ClustersService
  /v1/clusters-env/kernel-support-available:
    get:
      summary: >-
        GetKernelSupportAvailable is deprecated in favor of
        GetClusterDefaultValues.
      operationId: ClustersService_GetKernelSupportAvailable
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1KernelSupportAvailableResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ClustersService
  /v1/clusters/{id}:
    get:
      operationId: ClustersService_GetCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ClustersService
    delete:
      operationId: ClustersService_DeleteCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ClustersService
    put:
      operationId: ClustersService_PutCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClustersServicePutClusterBody'
        required: true
      tags:
        - ClustersService
  /v1/complianceManagement/runs:
    get:
      operationId: ComplianceManagementService_GetRecentRuns
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRecentComplianceRunsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
        - name: standardId
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
      tags:
        - ComplianceManagementService
  /v1/compliancemanagement/runs:
    post:
      operationId: ComplianceManagementService_TriggerRuns
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TriggerComplianceRunsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TriggerComplianceRunsRequest'
        required: true
      tags:
        - ComplianceManagementService
  /v1/compliancemanagement/runstatuses:
    get:
      operationId: ComplianceManagementService_GetRunStatuses
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceRunStatusesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: runIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: latest
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ComplianceManagementService
  /v1/compliance/aggregatedresults:
    get:
      operationId: ComplianceService_GetAggregatedResults
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageComplianceAggregationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - UNKNOWN
                - STANDARD
                - CLUSTER
                - CATEGORY
                - CONTROL
                - NAMESPACE
                - NODE
                - DEPLOYMENT
                - CHECK
        - name: unit
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - STANDARD
              - CLUSTER
              - CATEGORY
              - CONTROL
              - NAMESPACE
              - NODE
              - DEPLOYMENT
              - CHECK
            default: UNKNOWN
        - name: where.query
          in: query
          required: false
          schema:
            type: string
        - name: where.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: where.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: where.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: where.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: where.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: where.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ComplianceService
  /v1/compliance/runresults:
    get:
      operationId: ComplianceService_GetRunResults
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceRunResultsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
        - name: standardId
          in: query
          required: false
          schema:
            type: string
        - name: runId
          description: >-
            Specifies the run ID for which to return results. If empty, the most
            recent run is returned.

            CAVEAT: Setting this field circumvents the results cache on the
            server-side, which may lead to significantly
                    increased memory pressure and decreased performance.
          in: query
          required: false
          schema:
            type: string
      tags:
        - ComplianceService
  /v1/compliance/standards:
    get:
      operationId: ComplianceService_GetStandards
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceStandardsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ComplianceService
  /v1/compliance/standards/{id}:
    get:
      operationId: ComplianceService_GetStandard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetComplianceStandardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ComplianceService
    patch:
      operationId: ComplianceService_UpdateComplianceStandardConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ComplianceServiceUpdateComplianceStandardConfigBody
        required: true
      tags:
        - ComplianceService
  /v1/config:
    get:
      operationId: ConfigService_GetConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ConfigService
    put:
      operationId: ConfigService_PutConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PutConfigRequest'
        required: true
      tags:
        - ConfigService
  /v1/config/platformcomponent:
    get:
      operationId: ConfigService_GetPlatformComponentConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePlatformComponentConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ConfigService
    put:
      operationId: ConfigService_UpdatePlatformComponentConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePlatformComponentConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PutPlatformComponentConfigRequest'
        required: true
      tags:
        - ConfigService
  /v1/config/platformcomponent/rhlp/default:
    get:
      summary: >-
        GetDefaultRedHatLayeredProductsRegex returns a static string containing
        the default Red Hat Layered Products regex.
      operationId: ConfigService_GetDefaultRedHatLayeredProductsRegex
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1GetDefaultRedHatLayeredProductsRegexResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ConfigService
  /v1/config/private:
    get:
      operationId: ConfigService_GetPrivateConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePrivateConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ConfigService
  /v1/config/private/exception/vulnerabilities:
    get:
      operationId: ConfigService_GetVulnerabilityExceptionConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetVulnerabilityExceptionConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ConfigService
    put:
      operationId: ConfigService_UpdateVulnerabilityExceptionConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1UpdateVulnerabilityExceptionConfigResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateVulnerabilityExceptionConfigRequest'
        required: true
      tags:
        - ConfigService
  /v1/config/public:
    get:
      operationId: ConfigService_GetPublicConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePublicConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ConfigService
  /v1/credentialexpiry:
    get:
      summary: >-
        GetCertExpiry returns information related to the expiry component mTLS
        certificate.
      operationId: CredentialExpiryService_GetCertExpiry
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCertExpiryResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: component
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - CENTRAL
              - SCANNER
              - SCANNER_V4
              - CENTRAL_DB
            default: UNKNOWN
      tags:
        - CredentialExpiryService
  /v1/clustercves/suppress:
    patch:
      summary: SuppressCVE suppresses cluster cves.
      operationId: ClusterCVEService_SuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/v1SuppressCVERequest'
      tags:
        - ClusterCVEService
  /v1/clustercves/unsuppress:
    patch:
      summary: UnsuppressCVE unsuppresses cluster cves.
      operationId: ClusterCVEService_UnsuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/v1UnsuppressCVERequest'
      tags:
        - ClusterCVEService
  /v1/imagecves/suppress:
    patch:
      summary: SuppressCVE suppresses image cves.
      operationId: ImageCVEService_SuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/v1SuppressCVERequest'
      tags:
        - ImageCVEService
  /v1/imagecves/unsuppress:
    patch:
      summary: UnsuppressCVE unsuppresses image cves.
      operationId: ImageCVEService_UnsuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/v1UnsuppressCVERequest'
      tags:
        - ImageCVEService
  /v1/nodecves/suppress:
    patch:
      summary: SuppressCVE suppresses node cves.
      operationId: NodeCVEService_SuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/v1SuppressCVERequest'
      tags:
        - NodeCVEService
  /v1/nodecves/unsuppress:
    patch:
      summary: UnsuppressCVE unsuppresses node cves.
      operationId: NodeCVEService_UnsuppressCVEs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/v1UnsuppressCVERequest'
      tags:
        - NodeCVEService
  /v1/db/exportcaps:
    get:
      operationId: DBService_GetExportCapabilities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDBExportCapabilitiesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DBService
  /v1/db/interruptrestore/{processId}/{attemptId}:
    post:
      operationId: DBService_InterruptRestoreProcess
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InterruptDBRestoreProcessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
        - name: attemptId
          in: path
          required: true
          schema:
            type: string
      tags:
        - DBService
  /v1/db/restore:
    get:
      operationId: DBService_GetActiveRestoreProcess
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetActiveDBRestoreProcessResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DBService
  /v1/db/restore/{id}:
    delete:
      operationId: DBService_CancelRestoreProcess
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DBService
  /v1/debug/authz/trace:
    get:
      summary: Stream authorization traces for all incoming requests.
      operationId: DebugService_StreamAuthzTraces
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/v1AuthorizationTraceResponse'
                  error:
                    $ref: '#/components/schemas/googlerpcStatus'
                title: Stream result of v1AuthorizationTraceResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DebugService
  /v1/debug/db/stats/reset:
    post:
      summary: Reset database debugging statistics.
      operationId: DebugService_ResetDBStats
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DebugService
  /v1/debug/loglevel:
    get:
      summary: Get the current logging level for StackRox services.
      operationId: DebugService_GetLogLevel
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1LogLevelResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: modules
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - DebugService
    patch:
      summary: Set logging level for StackRox services.
      operationId: DebugService_SetLogLevel
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1LogLevelRequest'
        required: true
      tags:
        - DebugService
  /v1/declarative-config/health:
    get:
      operationId: DeclarativeConfigHealthService_GetDeclarativeConfigHealths
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDeclarativeConfigHealthsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DeclarativeConfigHealthService
  /v1/delegatedregistryconfig:
    get:
      summary: GetConfig returns the current delegated registry configuration
      operationId: DelegatedRegistryConfigService_GetConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DelegatedRegistryConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DelegatedRegistryConfigService
    put:
      summary: UpdateConfig updates the stored delegated registry configuration
      operationId: DelegatedRegistryConfigService_UpdateConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DelegatedRegistryConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DelegatedRegistryConfig'
        description: >-
          DelegatedRegistryConfig determines if and where scan requests are
          delegated to, such as kept in

          central services or sent to particular secured clusters.
        required: true
      tags:
        - DelegatedRegistryConfigService
  /v1/delegatedregistryconfig/clusters:
    get:
      summary: >-
        GetClusters returns the list of clusters (id + name) and a flag
        indicating whether or not

        the cluster is valid for use in the delegated registry config
      operationId: DelegatedRegistryConfigService_GetClusters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DelegatedRegistryClustersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DelegatedRegistryConfigService
  /v1/deployments:
    get:
      summary: ListDeployments returns the list of deployments.
      operationId: DeploymentService_ListDeployments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - DeploymentService
  /v1/deployments/metadata/labels:
    get:
      summary: GetLabels returns the labels used by deployments.
      operationId: DeploymentService_GetLabels
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentLabelsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - DeploymentService
  /v1/deployments/{id}:
    get:
      summary: GetDeployment returns a deployment given its ID.
      operationId: DeploymentService_GetDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageDeployment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DeploymentService
  /v1/deploymentscount:
    get:
      summary: CountDeployments returns the number of deployments.
      operationId: DeploymentService_CountDeployments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountDeploymentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - DeploymentService
  /v1/deploymentswithprocessinfo:
    get:
      summary: >-
        ListDeploymentsWithProcessInfo returns the list of deployments with
        process information.
      operationId: DeploymentService_ListDeploymentsWithProcessInfo
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentsWithProcessInfoResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - DeploymentService
  /v1/deploymentswithrisk/{id}:
    get:
      summary: GetDeploymentWithRisk returns a deployment and its risk given its ID.
      operationId: DeploymentService_GetDeploymentWithRisk
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDeploymentWithRiskResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DeploymentService
  /v1/export/deployments:
    get:
      operationId: DeploymentService_ExportDeployments
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/v1ExportDeploymentResponse'
                  error:
                    $ref: '#/components/schemas/googlerpcStatus'
                title: Stream result of v1ExportDeploymentResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: timeout
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - DeploymentService
  /v1/detect/build:
    post:
      summary: DetectBuildTime checks if any images violate build time policies.
      operationId: DetectionService_DetectBuildTime
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BuildDetectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BuildDetectionRequest'
        required: true
      tags:
        - DetectionService
  /v1/detect/deploy:
    post:
      summary: DetectDeployTime checks if any deployments violate deploy time policies.
      operationId: DetectionService_DetectDeployTime
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeployDetectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeployDetectionRequest'
        required: true
      tags:
        - DetectionService
  /v1/detect/deploy/yaml:
    post:
      summary: >-
        DetectDeployTimeFromYAML checks if the given deployment yaml violates
        any deploy time policies.
      operationId: DetectionService_DetectDeployTimeFromYAML
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeployDetectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeployYAMLDetectionRequest'
        required: true
      tags:
        - DetectionService
  /v1/count/discovered-clusters:
    get:
      summary: >-
        CountDiscoveredClusters returns the number of discovered clusters after
        filtering by requested fields.
      operationId: DiscoveredClustersService_CountDiscoveredClusters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountDiscoveredClustersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: filter.names
          description: Matches discovered clusters of specific names.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.types
          description: Matches discovered clusters of specific types.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - UNSPECIFIED
                - AKS
                - ARO
                - EKS
                - GKE
                - OCP
                - OSD
                - ROSA
        - name: filter.statuses
          description: |-
            Matches discovered clusters of specific statuses.

             - STATUS_UNSPECIFIED: The status of the cluster is unknown. May occur if a secured cluster
            is missing the metadata for a possible match.
             - STATUS_SECURED: The discovered cluster was matched with a secured cluster.
             - STATUS_UNSECURED: The discovered cluster was not matched with a secured cluster.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - STATUS_UNSPECIFIED
                - STATUS_SECURED
                - STATUS_UNSECURED
        - name: filter.sourceIds
          description: Matches discovered clusters of specific cloud source IDs.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - DiscoveredClustersService
  /v1/discovered-clusters:
    get:
      summary: >-
        ListDiscoveredClusters returns the list of discovered clusters after
        filtered by requested fields.
      operationId: DiscoveredClustersService_ListDiscoveredClusters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDiscoveredClustersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: filter.names
          description: Matches discovered clusters of specific names.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.types
          description: Matches discovered clusters of specific types.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - UNSPECIFIED
                - AKS
                - ARO
                - EKS
                - GKE
                - OCP
                - OSD
                - ROSA
        - name: filter.statuses
          description: |-
            Matches discovered clusters of specific statuses.

             - STATUS_UNSPECIFIED: The status of the cluster is unknown. May occur if a secured cluster
            is missing the metadata for a possible match.
             - STATUS_SECURED: The discovered cluster was matched with a secured cluster.
             - STATUS_UNSECURED: The discovered cluster was not matched with a secured cluster.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - STATUS_UNSPECIFIED
                - STATUS_SECURED
                - STATUS_UNSECURED
        - name: filter.sourceIds
          description: Matches discovered clusters of specific cloud source IDs.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - DiscoveredClustersService
  /v1/discovered-clusters/{id}:
    get:
      summary: GetDiscoveredCluster retrieves a discovered cluster by ID.
      operationId: DiscoveredClustersService_GetDiscoveredCluster
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDiscoveredClusterResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - DiscoveredClustersService
  /v1/featureflags:
    get:
      operationId: FeatureFlagService_GetFeatureFlags
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetFeatureFlagsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - FeatureFlagService
  /v1/group:
    get:
      operationId: GroupService_GetGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          description: Unique identifier for group properties and respectively the group.
          in: query
          required: false
          schema:
            type: string
        - name: traits.mutabilityMode
          in: query
          required: false
          schema:
            type: string
            enum:
              - ALLOW_MUTATE
              - ALLOW_MUTATE_FORCED
            default: ALLOW_MUTATE
        - name: traits.visibility
          in: query
          required: false
          schema:
            type: string
            enum:
              - VISIBLE
              - HIDDEN
            default: VISIBLE
        - name: traits.origin
          in: query
          required: false
          schema:
            type: string
            enum:
              - IMPERATIVE
              - DEFAULT
              - DECLARATIVE
              - DECLARATIVE_ORPHANED
            default: IMPERATIVE
        - name: authProviderId
          in: query
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
      tags:
        - GroupService
  /v1/groups:
    get:
      operationId: GroupService_GetGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: authProviderId
          in: query
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
      tags:
        - GroupService
    delete:
      operationId: GroupService_DeleteGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: authProviderId
          description: >-
            We copy over parameters from storage.GroupProperties for seamless
            HTTP API migration.
          in: query
          required: false
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: force
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - GroupService
    post:
      operationId: GroupService_CreateGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageGroup'
        description: 'Group is a GroupProperties : Role mapping.'
        required: true
      tags:
        - GroupService
    put:
      operationId: GroupService_UpdateGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: force
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageGroup'
        required: true
      tags:
        - GroupService
  /v1/groupsbatch:
    post:
      operationId: GroupService_BatchUpdate
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GroupBatchUpdateRequest'
        required: true
      tags:
        - GroupService
  /v1/grpc-preferences:
    get:
      operationId: GRPCPreferencesService_Get
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preferences'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - GRPCPreferencesService
  /api/v1/images/sbom:
    post:
      summary: Generate an SPDX 2.3 SBOM from an image scan.
      operationId: GenerateSBOM
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SBOM-SPDX23-Document'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/imageSBOMRequest'
        required: true
      tags:
        - ImageService
  /v1/imageintegrations:
    get:
      summary: >-
        GetImageIntegrations returns all image integrations that match the
        request filters.
      operationId: ImageIntegrationService_GetImageIntegrations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetImageIntegrationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: cluster
          in: query
          required: false
          schema:
            type: string
      tags:
        - ImageIntegrationService
    post:
      summary: PostImageIntegration creates a image integration.
      operationId: ImageIntegrationService_PostImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImageIntegration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storageImageIntegration'
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/test:
    post:
      summary: >-
        TestImageIntegration checks if the given image integration is correctly
        configured, without using stored credential reconciliation.
      operationId: ImageIntegrationService_TestImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storageImageIntegration'
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/test/updated:
    post:
      summary: >-
        TestUpdatedImageIntegration checks if the given image integration is
        correctly configured, with optional stored credential reconciliation.
      operationId: ImageIntegrationService_TestUpdatedImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateImageIntegrationRequest'
        required: true
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/{config.id}:
    patch:
      summary: >-
        UpdateImageIntegration modifies a given image integration, with optional
        stored credential reconciliation.
      operationId: ImageIntegrationService_UpdateImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: config.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ImageIntegrationServiceUpdateImageIntegrationBody
        required: true
      tags:
        - ImageIntegrationService
  /v1/imageintegrations/{id}:
    get:
      summary: GetImageIntegration returns the image integration given its ID.
      operationId: ImageIntegrationService_GetImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImageIntegration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ImageIntegrationService
    delete:
      summary: DeleteImageIntegration removes a image integration given its ID.
      operationId: ImageIntegrationService_DeleteImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ImageIntegrationService
    put:
      summary: >-
        PutImageIntegration modifies a given image integration, without using
        stored credential reconciliation.
      operationId: ImageIntegrationService_PutImageIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ImageIntegrationServicePutImageIntegrationBody
        required: true
      tags:
        - ImageIntegrationService
  /v1/export/images:
    get:
      operationId: ImageService_ExportImages
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/v1ExportImageResponse'
                  error:
                    $ref: '#/components/schemas/googlerpcStatus'
                title: Stream result of v1ExportImageResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: timeout
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - ImageService
  /v1/images:
    get:
      summary: ListImages returns all the images that match the input query.
      operationId: ImageService_ListImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
    delete:
      summary: DeleteImage removes the images based on a query
      operationId: ImageService_DeleteImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: query.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: query.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
  /v1/images/cache/invalidate:
    get:
      summary: InvalidateScanAndRegistryCaches removes the image metadata cache.
      operationId: ImageService_InvalidateScanAndRegistryCaches
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ImageService
  /v1/images/scan:
    post:
      summary: ScanImage scans a single image and returns the result
      operationId: ImageService_ScanImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ScanImageRequest'
        required: true
      tags:
        - ImageService
  /v1/images/{id}:
    get:
      summary: GetImage returns the image given its ID.
      operationId: ImageService_GetImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: includeSnoozed
          in: query
          required: false
          schema:
            type: boolean
        - name: stripDescription
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
  /v1/imagescount:
    get:
      summary: CountImages returns a count of images that match the input query.
      operationId: ImageService_CountImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ImageService
  /v1/watchedimages:
    get:
      summary: |-
        GetWatchedImages returns the list of image names that are currently
        being watched.
      operationId: ImageService_GetWatchedImages
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetWatchedImagesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ImageService
    delete:
      summary: >-
        UnwatchImage marks an image name to no longer be watched.

        It returns successfully if the image is no longer being watched

        after the call, irrespective of whether the image was already being
        watched.
      operationId: ImageService_UnwatchImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The name of the image to unwatch.
            Should match the name of a previously watched image.
          in: query
          required: false
          schema:
            type: string
      tags:
        - ImageService
    post:
      summary: WatchImage marks an image name as to be watched.
      operationId: ImageService_WatchImage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1WatchImageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1WatchImageRequest'
        required: true
      tags:
        - ImageService
  /v1/integrationhealth/declarativeconfigs:
    get:
      operationId: IntegrationHealthService_GetDeclarativeConfigs
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/externalbackups:
    get:
      operationId: IntegrationHealthService_GetBackupPlugins
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/imageintegrations:
    get:
      operationId: IntegrationHealthService_GetImageIntegrations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/notifiers:
    get:
      operationId: IntegrationHealthService_GetNotifiers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - IntegrationHealthService
  /v1/integrationhealth/vulndefinitions:
    get:
      operationId: IntegrationHealthService_GetVulnDefinitionsInfo
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1VulnDefinitionsInfo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: component
          in: query
          required: false
          schema:
            type: string
            enum:
              - SCANNER
              - SCANNER_V4
            default: SCANNER
      tags:
        - IntegrationHealthService
  /v1/backup/status:
    get:
      operationId: MetadataService_GetDatabaseBackupStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DatabaseBackupStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - MetadataService
  /v1/central-capabilities:
    get:
      operationId: MetadataService_GetCentralCapabilities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CentralServicesCapabilities'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - MetadataService
  /v1/database/status:
    get:
      operationId: MetadataService_GetDatabaseStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DatabaseStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - MetadataService
  /v1/metadata:
    get:
      operationId: MetadataService_GetMetadata
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Metadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - MetadataService
  /v1/tls-challenge:
    get:
      summary: TLSChallenge
      description: |-
        Returns all trusted CAs, i.e., secret/additional-ca and Central's cert
        chain. This is necessary if Central is running behind a load balancer
        with self-signed certificates. Does not require authentication.
      operationId: MetadataService_TLSChallenge
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TLSChallengeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: challengeToken
          description: generated challenge token by the service asking for TLS certs
          in: query
          required: false
          schema:
            type: string
      tags:
        - MetadataService
  /v1/mitreattackvectors:
    get:
      summary: ListMitreAttackVectors returns all MITRE ATT&CK vectors.
      operationId: MitreAttackService_ListMitreAttackVectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMitreAttackVectorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - MitreAttackService
  /v1/mitreattackvectors/{id}:
    get:
      summary: >-
        GetMitreAttackVector returns the full MITRE ATT&CK vector for a tactic
        with all its techniques.
      operationId: MitreAttackService_GetMitreAttackVector
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMitreVectorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - MitreAttackService
  /v1/namespaces:
    get:
      operationId: NamespaceService_GetNamespaces
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetNamespacesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: query.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: query.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NamespaceService
  /v1/namespaces/{id}:
    get:
      operationId: NamespaceService_GetNamespace
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Namespace'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NamespaceService
  /v1/networkbaseline/{deploymentId}/peers:
    patch:
      operationId: NetworkBaselineService_ModifyBaselineStatusForPeers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkBaselineServiceModifyBaselineStatusForPeersBody
        required: true
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{deploymentId}/status:
    post:
      operationId: NetworkBaselineService_GetNetworkBaselineStatusForFlows
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkBaselineStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkBaselineServiceGetNetworkBaselineStatusForFlowsBody
        required: true
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{deploymentId}/status/external:
    get:
      operationId: NetworkBaselineService_GetNetworkBaselineStatusForExternalFlows
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkBaselineExternalStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{id}:
    get:
      operationId: NetworkBaselineService_GetNetworkBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkBaseline'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{id}/lock:
    patch:
      operationId: NetworkBaselineService_LockNetworkBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkBaselineServiceLockNetworkBaselineBody
        required: true
      tags:
        - NetworkBaselineService
  /v1/networkbaseline/{id}/unlock:
    patch:
      operationId: NetworkBaselineService_UnlockNetworkBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkBaselineServiceUnlockNetworkBaselineBody
        required: true
      tags:
        - NetworkBaselineService
  /v1/networkgraph/cluster/{clusterId}:
    get:
      operationId: NetworkGraphService_GetNetworkGraph
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkGraph'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: includePorts
          in: query
          required: false
          schema:
            type: boolean
        - name: scope.query
          in: query
          required: false
          schema:
            type: string
        - name: includePolicies
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NetworkGraphService
  /v1/networkgraph/cluster/{clusterId}/externalentities:
    get:
      operationId: NetworkGraphService_GetExternalNetworkEntities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExternalNetworkEntitiesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkGraphService
    post:
      operationId: NetworkGraphService_CreateExternalNetworkEntity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkGraphServiceCreateExternalNetworkEntityBody
        required: true
      tags:
        - NetworkGraphService
  /v1/networkgraph/cluster/{clusterId}/externalentities/metadata:
    get:
      operationId: NetworkGraphService_GetExternalNetworkFlowsMetadata
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExternalNetworkFlowsMetadataResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NetworkGraphService
  /v1/networkgraph/cluster/{clusterId}/externalentities/{entityId}/flows:
    get:
      operationId: NetworkGraphService_GetExternalNetworkFlows
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExternalNetworkFlowsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NetworkGraphService
  /v1/networkgraph/config:
    get:
      operationId: NetworkGraphService_GetNetworkGraphConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkGraphConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - NetworkGraphService
    put:
      operationId: NetworkGraphService_PutNetworkGraphConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkGraphConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PutNetworkGraphConfigRequest'
        required: true
      tags:
        - NetworkGraphService
  /v1/networkgraph/externalentities/{id}:
    delete:
      operationId: NetworkGraphService_DeleteExternalNetworkEntity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkGraphService
    patch:
      operationId: NetworkGraphService_PatchExternalNetworkEntity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkGraphServicePatchExternalNetworkEntityBody
        required: true
      tags:
        - NetworkGraphService
  /v1/networkpolicies:
    get:
      operationId: NetworkPolicyService_GetNetworkPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
        - name: deploymentQuery
          in: query
          required: false
          schema:
            type: string
        - name: namespace
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/allowedpeers/{id}:
    get:
      operationId: NetworkPolicyService_GetAllowedPeersFromCurrentPolicyForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/apply/deployment/{deploymentId}:
    post:
      operationId: NetworkPolicyService_ApplyNetworkPolicyYamlForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkPolicyServiceApplyNetworkPolicyYamlForDeploymentBody
        required: true
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/apply/{clusterId}:
    post:
      operationId: NetworkPolicyService_ApplyNetworkPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNetworkPolicyModification'
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/baselinecomparison/{id}:
    get:
      operationId: NetworkPolicyService_GetDiffFlowsBetweenPolicyAndBaselineForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDiffFlowsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/cluster/{clusterId}:
    get:
      operationId: NetworkPolicyService_GetNetworkGraph
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkGraph'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: includePorts
          description: >-
            If set to true, include port-level information in the network policy
            graph.
          in: query
          required: false
          schema:
            type: boolean
        - name: scope.query
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/generate/baseline/{deploymentId}:
    post:
      operationId: NetworkPolicyService_GetBaselineGeneratedNetworkPolicyForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/NetworkPolicyServiceGetBaselineGeneratedNetworkPolicyForDeploymentBody
        required: true
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/generate/{clusterId}:
    get:
      operationId: NetworkPolicyService_GenerateNetworkPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GenerateNetworkPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: deleteExisting
          description: |2-
             - NONE: Do not delete any existing network policies.
             - GENERATED_ONLY: Delete any existing *auto-generated* network policies.
             - ALL: Delete all existing network policies in the respective namespace.
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - NONE
              - GENERATED_ONLY
              - ALL
            default: UNKNOWN
        - name: networkDataSince
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: includePorts
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/graph/epoch:
    get:
      operationId: NetworkPolicyService_GetNetworkGraphEpoch
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1NetworkGraphEpoch'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/simulate/{clusterId}:
    post:
      operationId: NetworkPolicyService_SimulateNetworkGraph
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SimulateNetworkGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: includePorts
          description: >-
            If set to true, include port-level information in the network policy
            graph.
          in: query
          required: false
          schema:
            type: boolean
        - name: includeNodeDiff
          in: query
          required: false
          schema:
            type: boolean
        - name: scope.query
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNetworkPolicyModification'
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/simulate/{clusterId}/notify:
    post:
      operationId: NetworkPolicyService_SendNetworkPolicyYAML
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: notifierIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      requestBody:
        $ref: '#/components/requestBodies/storageNetworkPolicyModification'
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/undo/deployment/{id}:
    get:
      operationId: NetworkPolicyService_GetUndoModificationForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1GetUndoModificationForDeploymentResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/undo/{clusterId}:
    get:
      operationId: NetworkPolicyService_GetUndoModification
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUndoModificationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/undobaselinecomparison/{id}:
    get:
      operationId: NetworkPolicyService_GetDiffFlowsFromUndoModificationForDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDiffFlowsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/networkpolicies/{id}:
    get:
      operationId: NetworkPolicyService_GetNetworkPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNetworkPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NetworkPolicyService
  /v1/export/nodes:
    get:
      operationId: NodeService_ExportNodes
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/v1ExportNodeResponse'
                  error:
                    $ref: '#/components/schemas/googlerpcStatus'
                title: Stream result of v1ExportNodeResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: timeout
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - NodeService
  /v1/nodes/{clusterId}:
    get:
      operationId: NodeService_ListNodes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListNodesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      tags:
        - NodeService
  /v1/nodes/{clusterId}/{nodeId}:
    get:
      operationId: NodeService_GetNode
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNode'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
      tags:
        - NodeService
  /v1/notifiers:
    get:
      summary: GetNotifiers returns all notifier configurations.
      operationId: NotifierService_GetNotifiers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetNotifiersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - NotifierService
    post:
      summary: PostNotifier creates a notifier configuration.
      operationId: NotifierService_PostNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNotifier'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storageNotifier'
      tags:
        - NotifierService
  /v1/notifiers/test:
    post:
      summary: TestNotifier checks if a notifier is correctly configured.
      operationId: NotifierService_TestNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storageNotifier'
      tags:
        - NotifierService
  /v1/notifiers/test/updated:
    post:
      summary: >-
        TestUpdatedNotifier checks if the given notifier is correctly
        configured, with optional stored credential reconciliation.
      operationId: NotifierService_TestUpdatedNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateNotifierRequest'
        required: true
      tags:
        - NotifierService
  /v1/notifiers/{id}:
    get:
      summary: GetNotifier returns the notifier configuration given its ID.
      operationId: NotifierService_GetNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageNotifier'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - NotifierService
    delete:
      summary: DeleteNotifier removes a notifier configuration given its ID.
      operationId: NotifierService_DeleteNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - NotifierService
    put:
      summary: >-
        PutNotifier modifies a given notifier, without using stored credential
        reconciliation.
      operationId: NotifierService_PutNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifierServicePutNotifierBody'
        required: true
      tags:
        - NotifierService
  /v1/notifiers/{notifier.id}:
    patch:
      summary: >-
        UpdateNotifier modifies a given notifier, with optional stored
        credential reconciliation.
      operationId: NotifierService_UpdateNotifier
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: notifier.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifierServiceUpdateNotifierBody'
        required: true
      tags:
        - NotifierService
  /v1/ping:
    get:
      operationId: PingService_Ping
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PongMessage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - PingService
  /v1/export/pods:
    get:
      operationId: PodService_ExportPods
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/v1ExportPodResponse'
                  error:
                    $ref: '#/components/schemas/googlerpcStatus'
                title: Stream result of v1ExportPodResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: timeout
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query
          in: query
          required: false
          schema:
            type: string
      tags:
        - PodService
  /v1/pods:
    get:
      summary: GetPods returns the pods.
      operationId: PodService_GetPods
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PodsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PodService
  /v1/policycategories:
    get:
      summary: GetPolicyCategories returns the list of policy categories
      operationId: PolicyCategoryService_GetPolicyCategories
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPolicyCategoriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PolicyCategoryService
    post:
      summary: PostPolicyCategory creates a new policy category
      operationId: PolicyCategoryService_PostPolicyCategory
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyCategory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PolicyCategory'
        required: true
      tags:
        - PolicyCategoryService
    put:
      summary: RenamePolicyCategory renames the given policy category.
      operationId: PolicyCategoryService_RenamePolicyCategory
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyCategory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RenamePolicyCategoryRequest'
        required: true
      tags:
        - PolicyCategoryService
  /v1/policycategories/{id}:
    get:
      summary: GetPolicyCategory returns the requested policy category by ID.
      operationId: PolicyCategoryService_GetPolicyCategory
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyCategory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyCategoryService
    delete:
      summary: DeletePolicyCategory removes the given policy category.
      operationId: PolicyCategoryService_DeletePolicyCategory
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyCategoryService
  /v1/policies:
    get:
      summary: ListPolicies returns the list of policies.
      operationId: PolicyService_ListPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PolicyService
    post:
      summary: PostPolicy creates a new policy.
      operationId: PolicyService_PostPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: enableStrictValidation
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
  /v1/policies/dryrun:
    post:
      summary: >-
        DryRunPolicy evaluates the given policy and returns any alerts without
        creating the policy.
      operationId: PolicyService_DryRunPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DryRunResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
  /v1/policies/dryrunjob:
    post:
      operationId: PolicyService_SubmitDryRunPolicyJob
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1JobId'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/storagePolicy'
      tags:
        - PolicyService
  /v1/policies/dryrunjob/{jobId}:
    get:
      operationId: PolicyService_QueryDryRunJobStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DryRunJobStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
    delete:
      operationId: PolicyService_CancelDryRunJob
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
  /v1/policies/export:
    post:
      summary: >-
        ExportPolicies takes a list of policy IDs and returns either the entire
        list of policies or an error message
      operationId: PolicyService_ExportPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageExportPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ExportPoliciesRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/from-search:
    post:
      operationId: PolicyService_PolicyFromSearch
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyFromSearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PolicyFromSearchRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/import:
    post:
      summary: >-
        ImportPolicies accepts a list of Policies and returns a list of the
        policies which could not be imported
      operationId: PolicyService_ImportPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ImportPoliciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ImportPoliciesRequest'
        required: true
      tags:
        - PolicyService
  /v1/policies/reassess:
    post:
      summary: ReassessPolicies reevaluates all the policies.
      operationId: PolicyService_ReassessPolicies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - PolicyService
  /v1/policies/{id}:
    get:
      summary: GetPolicy returns the requested policy by ID.
      operationId: PolicyService_GetPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
    delete:
      summary: DeletePolicy removes a policy by ID.
      operationId: PolicyService_DeletePolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - PolicyService
    put:
      summary: PutPolicy modifies an existing policy.
      operationId: PolicyService_PutPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyServicePutPolicyBody'
        required: true
      tags:
        - PolicyService
    patch:
      summary: PatchPolicy edits an existing policy.
      operationId: PolicyService_PatchPolicy
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyServicePatchPolicyBody'
        required: true
      tags:
        - PolicyService
  /v1/policies/{id}/mitrevectors:
    get:
      summary: GetMitreVectorsForPolicy returns the requested policy by ID.
      operationId: PolicyService_GetPolicyMitreVectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPolicyMitreVectorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: options.excludePolicy
          description: If set to true, policy is excluded from the response.
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - PolicyService
  /v1/policies/{policyId}/notifiers:
    patch:
      summary: >-
        EnableDisablePolicyNotification enables or disables notifications for a
        policy by ID.
      operationId: PolicyService_EnableDisablePolicyNotification
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PolicyServiceEnableDisablePolicyNotificationBody
        required: true
      tags:
        - PolicyService
  /v1/policyCategories:
    get:
      summary: GetPolicyCategories returns the policy categories.
      operationId: PolicyService_GetPolicyCategories
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PolicyCategoriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - PolicyService
  /v1/probeupload/getexisting:
    post:
      operationId: ProbeUploadService_GetExistingProbes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetExistingProbesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: filesToCheck
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - ProbeUploadService
  /v1/processbaselines:
    delete:
      summary: '`DeleteProcessBaselines` deletes baselines.'
      operationId: ProcessBaselineService_DeleteProcessBaselines
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteProcessBaselinesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: confirm
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ProcessBaselineService
    put:
      summary: |-
        `AddToProcessBaselines` adds a list of process
        names to each of a list of process baselines.
      operationId: ProcessBaselineService_UpdateProcessBaselines
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateProcessBaselinesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateProcessBaselinesRequest'
        required: true
      tags:
        - ProcessBaselineService
  /v1/processbaselines/key:
    get:
      summary: |-
        `GetProcessBaselineById` returns the single
        process baseline referenced by the given ID.
      operationId: ProcessBaselineService_GetProcessBaseline
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageProcessBaseline'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: key.deploymentId
          description: |-
            The idea is for the keys to be flexible.
            Only certain combinations of these will be supported.
          in: query
          required: false
          schema:
            type: string
        - name: key.containerName
          in: query
          required: false
          schema:
            type: string
        - name: key.clusterId
          in: query
          required: false
          schema:
            type: string
        - name: key.namespace
          in: query
          required: false
          schema:
            type: string
      tags:
        - ProcessBaselineService
  /v1/processbaselines/lock:
    put:
      summary: |-
        `LockProcessBaselines` accepts a list of baseline IDs, locks
        those baselines, and returns the updated baseline objects.
      operationId: ProcessBaselineService_LockProcessBaselines
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateProcessBaselinesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1LockProcessBaselinesRequest'
        required: true
      tags:
        - ProcessBaselineService
  /v1/listening_endpoints/deployment/{deploymentId}:
    get:
      summary: >-
        GetListeningEndpoints returns the listening endpoints and the processes
        that opened them for a given deployment
      operationId: ListeningEndpointsService_GetListeningEndpoints
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetProcessesListeningOnPortsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ListeningEndpointsService
  /v1/processcount:
    get:
      summary: CountProcesses returns the count of processes.
      operationId: ProcessService_CountProcesses
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountProcessesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ProcessService
  /v1/processes/deployment/{deploymentId}:
    get:
      summary: >-
        GetProcessesByDeployment returns the processes executed in the given
        deployment.
      operationId: ProcessService_GetProcessesByDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetProcessesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ProcessService
  /v1/processes/deployment/{deploymentId}/grouped:
    get:
      summary: >-
        GetGroupedProcessByDeployment returns all the processes executed grouped
        by deployment.
      operationId: ProcessService_GetGroupedProcessByDeployment
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetGroupedProcessesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ProcessService
  /v1/processes/deployment/{deploymentId}/grouped/container:
    get:
      summary: >-
        GetGroupedProcessByDeploymentAndContainer returns all the processes
        executed grouped by deployment and container.
      operationId: ProcessService_GetGroupedProcessByDeploymentAndContainer
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1GetGroupedProcessesWithContainerResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ProcessService
  /v1/rbac/bindings:
    get:
      operationId: RbacService_ListRoleBindings
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRoleBindingsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - RbacService
  /v1/rbac/bindings/{id}:
    get:
      operationId: RbacService_GetRoleBinding
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRoleBindingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RbacService
  /v1/rbac/roles:
    get:
      operationId: RbacService_ListRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRolesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - RbacService
  /v1/rbac/roles/{id}:
    get:
      operationId: RbacService_GetRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRoleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RbacService
  /v1/rbac/subject/{id}:
    get:
      summary: >-
        Subjects served from this API are Groups and Users only.

        Id in this case is the Name field, since for users and groups, that is
        unique, and subjects do not have IDs.
      operationId: RbacService_GetSubject
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetSubjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RbacService
  /v1/rbac/subjects:
    get:
      operationId: RbacService_ListSubjects
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSubjectsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - RbacService
  /v1/report-configurations-count:
    get:
      summary: CountReportConfigurations returns the number of report configurations.
      operationId: ReportConfigurationService_CountReportConfigurations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountReportConfigurationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ReportConfigurationService
  /v1/report/configurations:
    get:
      operationId: ReportConfigurationService_GetReportConfigurations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetReportConfigurationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ReportConfigurationService
    post:
      summary: PostReportConfiguration creates a report configuration
      operationId: ReportConfigurationService_PostReportConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PostReportConfigurationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PostReportConfigurationRequest'
        required: true
      tags:
        - ReportConfigurationService
  /v1/report/configurations/{id}:
    get:
      operationId: ReportConfigurationService_GetReportConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetReportConfigurationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ReportConfigurationService
    delete:
      summary: DeleteReportConfiguration removes a report configuration given its id
      operationId: ReportConfigurationService_DeleteReportConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ReportConfigurationService
    put:
      summary: UpdateReportConfiguration updates a report configuration
      operationId: ReportConfigurationService_UpdateReportConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ReportConfigurationServiceUpdateReportConfigurationBody
        required: true
      tags:
        - ReportConfigurationService
  /v1/report/run/{id}:
    post:
      operationId: ReportService_RunReport
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ReportService
  /v1/collections:
    get:
      operationId: CollectionService_ListCollections
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListCollectionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: query.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: query.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - CollectionService
    post:
      operationId: CollectionService_CreateCollection
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateCollectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateCollectionRequest'
        required: true
      tags:
        - CollectionService
  /v1/collections/dryrun:
    post:
      operationId: CollectionService_DryRunCollection
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DryRunCollectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DryRunCollectionRequest'
        required: true
      tags:
        - CollectionService
  /v1/collections/selectors:
    get:
      operationId: CollectionService_ListCollectionSelectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListCollectionSelectorsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - CollectionService
  /v1/collections/{id}:
    get:
      operationId: CollectionService_GetCollection
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCollectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: options.withMatches
          in: query
          required: false
          schema:
            type: boolean
        - name: options.filterQuery.query
          in: query
          required: false
          schema:
            type: string
        - name: options.filterQuery.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: options.filterQuery.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: options.filterQuery.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: options.filterQuery.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: options.filterQuery.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: options.filterQuery.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - CollectionService
    delete:
      operationId: CollectionService_DeleteCollection
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - CollectionService
    patch:
      operationId: CollectionService_UpdateCollection
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateCollectionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionServiceUpdateCollectionBody'
        required: true
      tags:
        - CollectionService
  /v1/collectionscount:
    get:
      operationId: CollectionService_GetCollectionCount
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCollectionCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query.query
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query.pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: query.pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: query.pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: query.pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - CollectionService
  /v1/computeeffectiveaccessscope:
    post:
      summary: ComputeEffectiveAccessScope
      description: |-
        Returns effective access scope based on the rules in the request. Does
        not persist anything; not idempotent due to possible changes to clusters
        and namespaces. POST is chosen due to potentially large payload.

        There are advantages in both keeping the response slim and detailed. If
        only IDs of selected clusters and namespaces are included, response
        latency and processing time are lower but the caller shall overlay the
        response with its view of the world which is susceptible to consistency
        issues. Listing all clusters and namespaces with related metadata is
        convenient for the caller but bloat the message with secondary data.

        We let the caller decide what level of detail they would like to have:

          - Minimal, when only roots of included subtrees are listed by their
            IDs. Clusters can be either INCLUDED (its namespaces are included but
            are not listed) or PARTIAL (at least one namespace is explicitly
            included). Namespaces can only be INCLUDED.

          - Standard [default], when all known clusters and namespaces are listed
            with their IDs and names. Clusters can be INCLUDED (all its
            namespaces are explicitly listed as INCLUDED), PARTIAL (all its
            namespaces are explicitly listed, some as INCLUDED and some as
            EXCLUDED), and EXCLUDED (all its namespaces are explicitly listed as
            EXCLUDED). Namespaces can be either INCLUDED or EXCLUDED.

          - High, when every cluster and namespace is augmented with metadata.
      operationId: RoleService_ComputeEffectiveAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageEffectiveAccessScope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: detail
          in: query
          required: false
          schema:
            type: string
            enum:
              - STANDARD
              - MINIMAL
              - HIGH
            default: STANDARD
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeEffectiveAccessScopeRequestPayload'
        required: true
      tags:
        - RoleService
  /v1/mypermissions:
    get:
      operationId: RoleService_GetMyPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - RoleService
  /v1/permissionsets:
    get:
      operationId: RoleService_ListPermissionSets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPermissionSetsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - RoleService
    post:
      summary: PostPermissionSet
      description: PermissionSet.id is disallowed in request and set in response.
      operationId: RoleService_PostPermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePermissionSet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storagePermissionSet'
        description: This encodes a set of permissions for StackRox resources.
        required: true
      tags:
        - RoleService
  /v1/permissionsets/{id}:
    get:
      operationId: RoleService_GetPermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storagePermissionSet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    delete:
      operationId: RoleService_DeletePermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    put:
      operationId: RoleService_PutPermissionSet
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          description: id is generated and cannot be changed.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleServicePutPermissionSetBody'
        required: true
      tags:
        - RoleService
  /v1/resources:
    get:
      operationId: RoleService_GetResources
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetResourcesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - RoleService
  /v1/roles:
    get:
      operationId: RoleService_GetRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRolesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - RoleService
  /v1/roles/{id}:
    get:
      operationId: RoleService_GetRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageRole'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    delete:
      operationId: RoleService_DeleteRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
  /v1/roles/{name}:
    post:
      operationId: RoleService_CreateRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageRole'
        required: true
      tags:
        - RoleService
    put:
      operationId: RoleService_UpdateRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: name
          description: >-
            `name` and `description` are provided by the user and can be
            changed.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleServiceUpdateRoleBody'
        required: true
      tags:
        - RoleService
  /v1/sac/clusters:
    get:
      summary: GetClustersForPermissions
      description: >-
        Returns the list of cluster ID and cluster name pairs that have at least
        read allowed

        by the scope of the requesting user for the list of requested
        permissions.

        Effective access scopes are only considered for input permissions that
        have

        cluster scope or narrower (i.e. global permissions from the input are
        ignored).


        If the input only contains permissions at global level, the output will
        be an empty list.


        If no permission is given in input, all clusters allowed by the
        requester scope for

        any permission with cluster scope or narrower will be part of the
        response.
      operationId: RoleService_GetClustersForPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetClustersForPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: permissions
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - RoleService
  /v1/sac/clusters/{clusterId}/namespaces:
    get:
      summary: GetNamespacesForClusterAndPermissions
      description: >-
        Returns the list of namespace ID and namespace name pairs that belong to
        the requested

        cluster and for which the user has at least read access granted for the
        list of

        requested permissions that have namespace scope or narrower (i.e. global
        and cluster

        permissions from the input are ignored).


        If the input only contains permissions at global or cluster level, the
        output will be

        an empty list.


        If no permission is given in input, all namespaces allowed by the
        requester scope for

        any permission with namespace scope or narrower will be part of the
        response.
      operationId: RoleService_GetNamespacesForClusterAndPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1GetNamespacesForClusterAndPermissionsResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
        - name: permissions
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - RoleService
  /v1/simpleaccessscopes:
    get:
      operationId: RoleService_ListSimpleAccessScopes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSimpleAccessScopesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - RoleService
    post:
      summary: PostSimpleAccessScope
      description: SimpleAccessScope.id is disallowed in request and set in response.
      operationId: RoleService_PostSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSimpleAccessScope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageSimpleAccessScope'
        description: >-
          Simple access scope is a (simple) selection criteria for scoped
          resources.

          It does *not* allow multi-component AND-rules nor set operations on
          names.
        required: true
      tags:
        - RoleService
  /v1/simpleaccessscopes/{id}:
    get:
      operationId: RoleService_GetSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSimpleAccessScope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    delete:
      operationId: RoleService_DeleteSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - RoleService
    put:
      operationId: RoleService_PutSimpleAccessScope
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          description: '`id` is generated and cannot be changed.'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleServicePutSimpleAccessScopeBody'
        required: true
      tags:
        - RoleService
  /v1/search:
    get:
      operationId: SearchService_Search
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: categories
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SEARCH_UNSET
                - ALERTS
                - IMAGES
                - IMAGE_COMPONENTS
                - IMAGE_VULN_EDGE
                - IMAGE_COMPONENT_EDGE
                - POLICIES
                - DEPLOYMENTS
                - ACTIVE_COMPONENT
                - PODS
                - SECRETS
                - PROCESS_INDICATORS
                - COMPLIANCE
                - CLUSTERS
                - NAMESPACES
                - NODES
                - NODE_COMPONENTS
                - NODE_VULN_EDGE
                - NODE_COMPONENT_EDGE
                - NODE_COMPONENT_CVE_EDGE
                - COMPLIANCE_STANDARD
                - COMPLIANCE_CONTROL_GROUP
                - COMPLIANCE_CONTROL
                - SERVICE_ACCOUNTS
                - ROLES
                - ROLEBINDINGS
                - REPORT_CONFIGURATIONS
                - PROCESS_BASELINES
                - SUBJECTS
                - RISKS
                - VULNERABILITIES
                - CLUSTER_VULNERABILITIES
                - IMAGE_VULNERABILITIES
                - NODE_VULNERABILITIES
                - COMPONENT_VULN_EDGE
                - CLUSTER_VULN_EDGE
                - NETWORK_ENTITY
                - VULN_REQUEST
                - NETWORK_BASELINE
                - NETWORK_POLICIES
                - PROCESS_BASELINE_RESULTS
                - COMPLIANCE_METADATA
                - COMPLIANCE_RESULTS
                - COMPLIANCE_DOMAIN
                - CLUSTER_HEALTH
                - POLICY_CATEGORIES
                - IMAGE_INTEGRATIONS
                - COLLECTIONS
                - POLICY_CATEGORY_EDGE
                - PROCESS_LISTENING_ON_PORT
                - API_TOKEN
                - REPORT_METADATA
                - REPORT_SNAPSHOT
                - COMPLIANCE_INTEGRATIONS
                - COMPLIANCE_SCAN_CONFIG
                - COMPLIANCE_SCAN
                - COMPLIANCE_CHECK_RESULTS
                - BLOB
                - ADMINISTRATION_EVENTS
                - COMPLIANCE_SCAN_CONFIG_STATUS
                - ADMINISTRATION_USAGE
                - COMPLIANCE_PROFILES
                - COMPLIANCE_RULES
                - COMPLIANCE_SCAN_SETTING_BINDINGS
                - COMPLIANCE_SUITES
                - CLOUD_SOURCES
                - DISCOVERED_CLUSTERS
                - COMPLIANCE_REMEDIATIONS
                - COMPLIANCE_BENCHMARKS
                - AUTH_PROVIDERS
                - COMPLIANCE_REPORT_SNAPSHOT
                - IMAGE_COMPONENTS_V2
                - IMAGE_VULNERABILITIES_V2
      tags:
        - SearchService
  /v1/search/autocomplete:
    get:
      operationId: SearchService_Autocomplete
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AutocompleteResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: categories
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SEARCH_UNSET
                - ALERTS
                - IMAGES
                - IMAGE_COMPONENTS
                - IMAGE_VULN_EDGE
                - IMAGE_COMPONENT_EDGE
                - POLICIES
                - DEPLOYMENTS
                - ACTIVE_COMPONENT
                - PODS
                - SECRETS
                - PROCESS_INDICATORS
                - COMPLIANCE
                - CLUSTERS
                - NAMESPACES
                - NODES
                - NODE_COMPONENTS
                - NODE_VULN_EDGE
                - NODE_COMPONENT_EDGE
                - NODE_COMPONENT_CVE_EDGE
                - COMPLIANCE_STANDARD
                - COMPLIANCE_CONTROL_GROUP
                - COMPLIANCE_CONTROL
                - SERVICE_ACCOUNTS
                - ROLES
                - ROLEBINDINGS
                - REPORT_CONFIGURATIONS
                - PROCESS_BASELINES
                - SUBJECTS
                - RISKS
                - VULNERABILITIES
                - CLUSTER_VULNERABILITIES
                - IMAGE_VULNERABILITIES
                - NODE_VULNERABILITIES
                - COMPONENT_VULN_EDGE
                - CLUSTER_VULN_EDGE
                - NETWORK_ENTITY
                - VULN_REQUEST
                - NETWORK_BASELINE
                - NETWORK_POLICIES
                - PROCESS_BASELINE_RESULTS
                - COMPLIANCE_METADATA
                - COMPLIANCE_RESULTS
                - COMPLIANCE_DOMAIN
                - CLUSTER_HEALTH
                - POLICY_CATEGORIES
                - IMAGE_INTEGRATIONS
                - COLLECTIONS
                - POLICY_CATEGORY_EDGE
                - PROCESS_LISTENING_ON_PORT
                - API_TOKEN
                - REPORT_METADATA
                - REPORT_SNAPSHOT
                - COMPLIANCE_INTEGRATIONS
                - COMPLIANCE_SCAN_CONFIG
                - COMPLIANCE_SCAN
                - COMPLIANCE_CHECK_RESULTS
                - BLOB
                - ADMINISTRATION_EVENTS
                - COMPLIANCE_SCAN_CONFIG_STATUS
                - ADMINISTRATION_USAGE
                - COMPLIANCE_PROFILES
                - COMPLIANCE_RULES
                - COMPLIANCE_SCAN_SETTING_BINDINGS
                - COMPLIANCE_SUITES
                - CLOUD_SOURCES
                - DISCOVERED_CLUSTERS
                - COMPLIANCE_REMEDIATIONS
                - COMPLIANCE_BENCHMARKS
                - AUTH_PROVIDERS
                - COMPLIANCE_REPORT_SNAPSHOT
                - IMAGE_COMPONENTS_V2
                - IMAGE_VULNERABILITIES_V2
      tags:
        - SearchService
  /v1/search/metadata/options:
    get:
      operationId: SearchService_Options
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchOptionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: categories
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SEARCH_UNSET
                - ALERTS
                - IMAGES
                - IMAGE_COMPONENTS
                - IMAGE_VULN_EDGE
                - IMAGE_COMPONENT_EDGE
                - POLICIES
                - DEPLOYMENTS
                - ACTIVE_COMPONENT
                - PODS
                - SECRETS
                - PROCESS_INDICATORS
                - COMPLIANCE
                - CLUSTERS
                - NAMESPACES
                - NODES
                - NODE_COMPONENTS
                - NODE_VULN_EDGE
                - NODE_COMPONENT_EDGE
                - NODE_COMPONENT_CVE_EDGE
                - COMPLIANCE_STANDARD
                - COMPLIANCE_CONTROL_GROUP
                - COMPLIANCE_CONTROL
                - SERVICE_ACCOUNTS
                - ROLES
                - ROLEBINDINGS
                - REPORT_CONFIGURATIONS
                - PROCESS_BASELINES
                - SUBJECTS
                - RISKS
                - VULNERABILITIES
                - CLUSTER_VULNERABILITIES
                - IMAGE_VULNERABILITIES
                - NODE_VULNERABILITIES
                - COMPONENT_VULN_EDGE
                - CLUSTER_VULN_EDGE
                - NETWORK_ENTITY
                - VULN_REQUEST
                - NETWORK_BASELINE
                - NETWORK_POLICIES
                - PROCESS_BASELINE_RESULTS
                - COMPLIANCE_METADATA
                - COMPLIANCE_RESULTS
                - COMPLIANCE_DOMAIN
                - CLUSTER_HEALTH
                - POLICY_CATEGORIES
                - IMAGE_INTEGRATIONS
                - COLLECTIONS
                - POLICY_CATEGORY_EDGE
                - PROCESS_LISTENING_ON_PORT
                - API_TOKEN
                - REPORT_METADATA
                - REPORT_SNAPSHOT
                - COMPLIANCE_INTEGRATIONS
                - COMPLIANCE_SCAN_CONFIG
                - COMPLIANCE_SCAN
                - COMPLIANCE_CHECK_RESULTS
                - BLOB
                - ADMINISTRATION_EVENTS
                - COMPLIANCE_SCAN_CONFIG_STATUS
                - ADMINISTRATION_USAGE
                - COMPLIANCE_PROFILES
                - COMPLIANCE_RULES
                - COMPLIANCE_SCAN_SETTING_BINDINGS
                - COMPLIANCE_SUITES
                - CLOUD_SOURCES
                - DISCOVERED_CLUSTERS
                - COMPLIANCE_REMEDIATIONS
                - COMPLIANCE_BENCHMARKS
                - AUTH_PROVIDERS
                - COMPLIANCE_REPORT_SNAPSHOT
                - IMAGE_COMPONENTS_V2
                - IMAGE_VULNERABILITIES_V2
      tags:
        - SearchService
  /v1/secrets:
    get:
      summary: ListSecrets returns the list of secrets.
      operationId: SecretService_ListSecrets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSecretsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - SecretService
  /v1/secrets/{id}:
    get:
      summary: GetSecret returns a secret given its ID.
      operationId: SecretService_GetSecret
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSecret'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SecretService
  /v1/secretscount:
    get:
      summary: CountSecrets returns the number of secrets.
      operationId: SecretService_CountSecrets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CountSecretsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - SecretService
  /v1/sensorupgrades/cluster/{id}:
    post:
      operationId: SensorUpgradeService_TriggerSensorUpgrade
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SensorUpgradeService
  /v1/sensorupgrades/config:
    get:
      operationId: SensorUpgradeService_GetSensorUpgradeConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetSensorUpgradeConfigResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - SensorUpgradeService
    post:
      operationId: SensorUpgradeService_UpdateSensorUpgradeConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateSensorUpgradeConfigRequest'
        required: true
      tags:
        - SensorUpgradeService
  /v1/sensorupgrades/rotateclustercerts/{id}:
    post:
      operationId: SensorUpgradeService_TriggerSensorCertRotation
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SensorUpgradeService
  /v1/serviceaccounts:
    get:
      operationId: ServiceAccountService_ListServiceAccounts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListServiceAccountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - ServiceAccountService
  /v1/serviceaccounts/{id}:
    get:
      operationId: ServiceAccountService_GetServiceAccount
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetServiceAccountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ServiceAccountService
  /v1/authorities:
    get:
      summary: GetAuthorities returns the authorities currently in use.
      operationId: ServiceIdentityService_GetAuthorities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Authorities'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ServiceIdentityService
  /v1/serviceIdentities:
    get:
      operationId: ServiceIdentityService_GetServiceIdentities
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceIdentityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - ServiceIdentityService
    post:
      summary: >-
        CreateServiceIdentity creates a new key pair and certificate.

        The key and certificate are not retained and can never be retrieved
        again.
      operationId: ServiceIdentityService_CreateServiceIdentity
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateServiceIdentityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateServiceIdentityRequest'
        required: true
      tags:
        - ServiceIdentityService
  /v1/signatureintegrations:
    get:
      operationId: SignatureIntegrationService_ListSignatureIntegrations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSignatureIntegrationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - SignatureIntegrationService
    post:
      summary: |-
        Integration id should not be set.
        Returns signature integration with id filled.
      operationId: SignatureIntegrationService_PostSignatureIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSignatureIntegration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storageSignatureIntegration'
        required: true
      tags:
        - SignatureIntegrationService
  /v1/signatureintegrations/{id}:
    get:
      operationId: SignatureIntegrationService_GetSignatureIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageSignatureIntegration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SignatureIntegrationService
    delete:
      operationId: SignatureIntegrationService_DeleteSignatureIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SignatureIntegrationService
    put:
      operationId: SignatureIntegrationService_PutSignatureIntegration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SignatureIntegrationServicePutSignatureIntegrationBody
        required: true
      tags:
        - SignatureIntegrationService
  /v1/telemetry/config:
    get:
      operationId: TelemetryService_GetConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/centralTelemetryConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - TelemetryService
  /v1/telemetry/config/reload:
    post:
      operationId: TelemetryService_PostConfigReload
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - TelemetryService
  /v1/telemetry/configure:
    get:
      operationId: TelemetryService_GetTelemetryConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageTelemetryConfiguration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - TelemetryService
    put:
      operationId: TelemetryService_ConfigureTelemetry
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageTelemetryConfiguration'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConfigureTelemetryRequest'
        required: true
      tags:
        - TelemetryService
  /v1/users:
    get:
      operationId: UserService_GetUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - UserService
  /v1/users/{id}:
    get:
      operationId: UserService_GetUser
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storageUser'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - UserService
  /v1/usersattributes:
    get:
      operationId: UserService_GetUsersAttributes
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUsersAttributesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      tags:
        - UserService
  /v1/cve/requests:
    get:
      summary: ListVulnerabilityRequests returns the list of vulnerability requests.
      operationId: VulnerabilityRequestService_ListVulnerabilityRequests
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListVulnerabilityRequestsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.sortOption.field
          in: query
          required: false
          schema:
            type: string
        - name: pagination.sortOption.reversed
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.sortOption.aggregateBy.aggrFunc
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNSET
              - COUNT
              - MIN
              - MAX
            default: UNSET
        - name: pagination.sortOption.aggregateBy.distinct
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/defer:
    post:
      summary: >-
        DeferVulnerability starts the deferral process for the specified
        vulnerability.
      operationId: VulnerabilityRequestService_DeferVulnerability
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeferVulnResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DeferVulnRequest'
        required: true
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/false-positive:
    post:
      summary: >-
        FalsePositiveVulnerability starts the process to mark the specified
        vulnerability as false-positive.
      operationId: VulnerabilityRequestService_FalsePositiveVulnerability
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1FalsePositiveVulnResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1FalsePositiveVulnRequest'
        required: true
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/{id}:
    get:
      summary: >-
        GetVulnerabilityRequest returns the requested vulnerability request by
        ID.
      operationId: VulnerabilityRequestService_GetVulnerabilityRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetVulnerabilityRequestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - VulnerabilityRequestService
    delete:
      summary: DeleteVulnerabilityRequest deletes a vulnerability request.
      operationId: VulnerabilityRequestService_DeleteVulnerabilityRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Empty'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/{id}/approve:
    post:
      summary: >-
        ApproveVulnRequest approve a vulnerability request. If it is an unwatch
        vulnerability request then the

        associated vulnerabilities are not watched in workflows such as policy
        detection, risk, etc.
      operationId: VulnerabilityRequestService_ApproveVulnerabilityRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ApproveVulnRequestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/VulnerabilityRequestServiceApproveVulnerabilityRequestBody
        required: true
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/{id}/deny:
    post:
      summary: DenyVulnRequest denies a vulnerability request.
      operationId: VulnerabilityRequestService_DenyVulnerabilityRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DenyVulnRequestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/VulnerabilityRequestServiceDenyVulnerabilityRequestBody
        required: true
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/{id}/undo:
    post:
      summary: UndoVulnerabilityRequest undoes a vulnerability request.
      operationId: VulnerabilityRequestService_UndoVulnerabilityRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UndoVulnRequestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - VulnerabilityRequestService
  /v1/cve/requests/{id}/update:
    post:
      summary: >-
        UpdateVulnerabilityRequest updates an existing vulnerability request.
        Currently only deferral expiration time can be updated.
      operationId: VulnerabilityRequestService_UpdateVulnerabilityRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateVulnRequestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/VulnerabilityRequestServiceUpdateVulnerabilityRequestBody
        required: true
      tags:
        - VulnerabilityRequestService
  /v1/export/vuln-mgmt/workloads:
    get:
      summary: >-
        Streams vulnerability data upon request. Each entry consists of a
        deployment and the associated container images.
      description: |-
        The response is structured as:
        {"result": {"deployment": {...}, "images": [...]}}
        ...
        {"result": {"deployment": {...}, "images": [...]}}
      operationId: VulnMgmtService_VulnMgmtExportWorkloads
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/v1VulnMgmtExportWorkloadsResponse'
                  error:
                    $ref: '#/components/schemas/googlerpcStatus'
                title: Stream result of v1VulnMgmtExportWorkloadsResponse
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      parameters:
        - name: timeout
          description: Request timeout in seconds.
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: query
          description: >-
            Query to constrain the deployments for which vulnerability data is
            returned.

            The queries contain pairs of `Search Option:Value` separated by `+`
            signs.

            For HTTP requests the query should be quoted. For example

            > curl
            "$ROX_ENDPOINT/v1/export/vuln-mgmt/workloads?query=Deployment%3Ascanner%2BNamespace%3Astackrox"

            queries vulnerability data for all scanner deployments in the
            stackrox namespace.

            See https://docs.openshift.com/acs/operating/search-filter.html for
            more information.
          in: query
          required: false
          schema:
            type: string
      tags:
        - VulnMgmtService
tags:
  - name: VulnMgmtService
servers:
  - url: https://staging.demo.stackrox.com
components:
  requestBodies:
    storageNetworkPolicyModification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageNetworkPolicyModification'
      required: true
    v1SuppressCVERequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1SuppressCVERequest'
      required: true
    storageImageIntegration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageImageIntegration'
      required: true
    storageExternalBackup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageExternalBackup'
      required: true
    v1UnsuppressCVERequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1UnsuppressCVERequest'
      required: true
    storageNotifier:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storageNotifier'
      required: true
    storagePolicy:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/storagePolicy'
      required: true
  schemas:
    googlerpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
          description: >-
            A URL/resource name that uniquely identifies the type of the
            serialized

            protocol buffer message. This string must contain at least

            one "/" character. The last segment of the URL's path must represent

            the fully qualified name of the type (as in

            `path/google.protobuf.Duration`). The name should be in a canonical
            form

            (e.g., leading "." is not accepted).


            In practice, teams usually precompile into the binary all types that
            they

            expect it to use in the context of Any. However, for URLs which use
            the

            scheme `http`, `https`, or no scheme, one can optionally set up a
            type

            server that maps type URLs to message definitions as follows:


            * If no scheme is provided, `https` is assumed.

            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official

            protobuf release, and it is not used for type URLs beginning with

            type.googleapis.com. As of May 2023, there are no widely used type
            server

            implementations and no plans to implement one.


            Schemes other than `http`, `https` (or the empty scheme) might be

            used with implementation specific semantics.
      additionalProperties: {}
      description: >-
        `Any` contains an arbitrary serialized protocol buffer message along
        with a

        URL that describes the type of the serialized message.


        Protobuf library provides support to pack/unpack Any values in the form

        of utility functions or additional generated methods of the Any type.


        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use

        'type.googleapis.com/full.type.name' as the type URL and the unpack

        methods only use the fully qualified type name after the last '/'

        in the type URL, for example "foo.bar.com/x/y.z" will yield type

        name "y.z".


        JSON

        ====

        The JSON representation of an `Any` value uses the regular

        representation of the deserialized, embedded message, with an

        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON

        representation, that representation will be embedded adding a field

        `value` which holds the custom JSON in addition to the `@type`

        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    v1AdministrationEvent:
      type: object
      properties:
        id:
          type: string
          description: UUID of the event.
        type:
          $ref: '#/components/schemas/v1AdministrationEventType'
        level:
          $ref: '#/components/schemas/v1AdministrationEventLevel'
        message:
          type: string
          description: >-
            Message associated with the event. The message may include detailed
            information

            for this particular event.
        hint:
          type: string
          description: >-
            Hint associated with the event. The hint may include different
            information based

            on the type of event. It can include instructions to resolve an
            event, or

            informational hints.
        domain:
          type: string
          description: >-
            Domain associated with the event. An event's domain outlines the
            feature domain where

            the event was created from. As an example, this might be "Image
            Scanning".

            In case of events that cannot be tied to a specific domain, this
            will be "General".
        resource:
          $ref: '#/components/schemas/v1AdministrationEventResource'
        numOccurrences:
          type: string
          format: int64
          description: >-
            Occurrences associated with the event. When events may occur
            multiple times, the

            occurrences track the amount.
        lastOccurredAt:
          type: string
          format: date-time
          description: Specifies the time when the event has last occurred.
        createdAt:
          type: string
          format: date-time
          description: Specifies the time when the event has been created.
      description: >-
        AdministrationEvents are administrative events emitted by Central. They
        are used to create

        transparency for users for asynchronous, background tasks. Events are
        part of Central's

        system health view.
    v1AdministrationEventLevel:
      type: string
      enum:
        - ADMINISTRATION_EVENT_LEVEL_UNKNOWN
        - ADMINISTRATION_EVENT_LEVEL_INFO
        - ADMINISTRATION_EVENT_LEVEL_SUCCESS
        - ADMINISTRATION_EVENT_LEVEL_WARNING
        - ADMINISTRATION_EVENT_LEVEL_ERROR
      default: ADMINISTRATION_EVENT_LEVEL_UNKNOWN
      description: AdministrationEventLevel exposes the different levels of events.
    v1AdministrationEventResource:
      type: object
      properties:
        type:
          type: string
          description: >-
            Resource type associated with the event. An event may refer to an
            underlying resource

            such as a particular image. In that case, the resource type will be
            filled here.
        id:
          type: string
          description: >-
            Resource ID associated with the event. If an event refers to an
            underlying resource,

            the resource ID identifies the underlying resource. The resource ID
            is not guaranteed

            to be set, depending on the context of the administration event.
        name:
          type: string
          description: >-
            Resource name associated with the event. If an event refers to an
            underlying resource,

            the resource name identifies the underlying resource. The resource
            name is not guaranteed

            to be set, depending on the context of the administration event.
      description: >-
        Resource holds all information about the resource associated with the
        event.
    v1AdministrationEventType:
      type: string
      enum:
        - ADMINISTRATION_EVENT_TYPE_UNKNOWN
        - ADMINISTRATION_EVENT_TYPE_GENERIC
        - ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE
      default: ADMINISTRATION_EVENT_TYPE_UNKNOWN
      description: AdministrationEventType exposes the different types of events.
    v1AdministrationEventsFilter:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: >-
            Matches events with last_occurred_at after a specific timestamp,
            i.e. the lower boundary.
        until:
          type: string
          format: date-time
          description: >-
            Matches events with last_occurred_at before a specific timestamp,
            i.e. the upper boundary.
        domain:
          type: array
          items:
            type: string
          description: Matches events from a specific domain.
        resourceType:
          type: array
          items:
            type: string
          description: Matches events associated with a specific resource type.
        type:
          type: array
          items:
            $ref: '#/components/schemas/v1AdministrationEventType'
          description: Matches events based on their type.
        level:
          type: array
          items:
            $ref: '#/components/schemas/v1AdministrationEventLevel'
          description: Matches events based on their level.
    v1AggregateBy:
      type: object
      properties:
        aggrFunc:
          $ref: '#/components/schemas/v1Aggregation'
        distinct:
          type: boolean
    v1Aggregation:
      type: string
      enum:
        - UNSET
        - COUNT
        - MIN
        - MAX
      default: UNSET
    v1CountAdministrationEventsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: The total number of events after filtering and deduplication.
    v1GetAdministrationEventResponse:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/v1AdministrationEvent'
    v1ListAdministrationEventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/v1AdministrationEvent'
    v1Pagination:
      type: object
      properties:
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        sortOption:
          $ref: '#/components/schemas/v1SortOption'
        sortOptions:
          type: array
          items:
            $ref: '#/components/schemas/v1SortOption'
          description: >-
            This field is under development. It is not supported on any REST
            APIs.
    v1SortOption:
      type: object
      properties:
        field:
          type: string
        reversed:
          type: boolean
        aggregateBy:
          $ref: '#/components/schemas/v1AggregateBy'
    v1MaxSecuredUnitsUsageResponse:
      type: object
      properties:
        maxNodesAt:
          type: string
          format: date-time
        maxNodes:
          type: string
          format: int64
        maxCpuUnitsAt:
          type: string
          format: date-time
        maxCpuUnits:
          type: string
          format: int64
      description: >-
        MaxSecuredUnitsUsageResponse holds the maximum values of the secured
        nodes

        and CPU Units (as reported by Kubernetes) with the time at which these

        values were aggregated, with the aggregation period accuracy (1h).
    v1SecuredUnitsUsageResponse:
      type: object
      properties:
        numNodes:
          type: string
          format: int64
        numCpuUnits:
          type: string
          format: int64
      description: |-
        SecuredUnitsUsageResponse holds the values of the currently observable
        administration usage metrics.
    AlertDeploymentContainer:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageContainerImage'
        name:
          type: string
    AlertEnforcement:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/storageEnforcementAction'
        message:
          type: string
    AlertEntityType:
      type: string
      enum:
        - UNSET
        - DEPLOYMENT
        - CONTAINER_IMAGE
        - RESOURCE
      default: UNSET
    AlertGroupAlertCounts:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/storageSeverity'
        count:
          type: string
          format: int64
    AlertProcessViolation:
      type: object
      properties:
        message:
          type: string
        processes:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessIndicator'
    AlertResourceResourceType:
      type: string
      enum:
        - UNKNOWN
        - SECRETS
        - CONFIGMAPS
        - CLUSTER_ROLES
        - CLUSTER_ROLE_BINDINGS
        - NETWORK_POLICIES
        - SECURITY_CONTEXT_CONSTRAINTS
        - EGRESS_FIREWALLS
      default: UNKNOWN
    AlertServiceResolveAlertBody:
      type: object
      properties:
        whitelist:
          type: boolean
        addToBaseline:
          type: boolean
    AlertViolation:
      type: object
      properties:
        message:
          type: string
        keyValueAttrs:
          $ref: '#/components/schemas/ViolationKeyValueAttrs'
        networkFlowInfo:
          $ref: '#/components/schemas/ViolationNetworkFlowInfo'
        type:
          $ref: '#/components/schemas/AlertViolationType'
        time:
          type: string
          format: date-time
          description: >-
            Indicates violation time. This field differs from top-level field
            'time' which represents last time the alert

            occurred in case of multiple occurrences of the policy alert. As of
            55.0, this field is set only for kubernetes

            event violations, but may not be limited to it in future.
    AlertViolationType:
      type: string
      enum:
        - GENERIC
        - K8S_EVENT
        - NETWORK_FLOW
        - NETWORK_POLICY
      default: GENERIC
    ClusterAlertsAlertEvents:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/storageSeverity'
        events:
          type: array
          items:
            $ref: '#/components/schemas/v1AlertEvent'
    GetAlertTimeseriesResponseClusterAlerts:
      type: object
      properties:
        cluster:
          type: string
        severities:
          type: array
          items:
            $ref: '#/components/schemas/ClusterAlertsAlertEvents'
    GetAlertsCountsRequestRequestGroup:
      type: string
      enum:
        - UNSET
        - CATEGORY
        - CLUSTER
      default: UNSET
    GetAlertsCountsResponseAlertGroup:
      type: object
      properties:
        group:
          type: string
        counts:
          type: array
          items:
            $ref: '#/components/schemas/AlertGroupAlertCounts'
    KeyValueAttrsKeyValueAttr:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ListAlertCommonEntityInfo:
      type: object
      properties:
        clusterName:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        namespaceId:
          type: string
        resourceType:
          $ref: '#/components/schemas/storageListAlertResourceType'
      description: Fields common to all entities that an alert might belong to.
    ListAlertPolicyDevFields:
      type: object
      properties:
        SORTName:
          type: string
    ListAlertResourceEntity:
      type: object
      properties:
        name:
          type: string
    NetworkFlowInfoEntity:
      type: object
      properties:
        name:
          type: string
        entityType:
          $ref: '#/components/schemas/storageNetworkEntityInfoType'
        deploymentNamespace:
          type: string
        deploymentType:
          type: string
        port:
          type: integer
          format: int32
    PolicyMitreAttackVectors:
      type: object
      properties:
        tactic:
          type: string
        techniques:
          type: array
          items:
            type: string
    ProcessSignalLineageInfo:
      type: object
      properties:
        parentUid:
          type: integer
          format: int64
        parentExecFilePath:
          type: string
    ViolationKeyValueAttrs:
      type: object
      properties:
        attrs:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueAttrsKeyValueAttr'
    ViolationNetworkFlowInfo:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
        source:
          $ref: '#/components/schemas/NetworkFlowInfoEntity'
        destination:
          $ref: '#/components/schemas/NetworkFlowInfoEntity'
    storageAlert:
      type: object
      properties:
        id:
          type: string
        policy:
          $ref: '#/components/schemas/storagePolicy'
        lifecycleStage:
          $ref: '#/components/schemas/storageLifecycleStage'
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
        deployment:
          $ref: '#/components/schemas/storageAlertDeployment'
        image:
          $ref: '#/components/schemas/storageContainerImage'
        resource:
          $ref: '#/components/schemas/storageAlertResource'
        violations:
          type: array
          items:
            $ref: '#/components/schemas/AlertViolation'
          description: For run-time phase alert, a maximum of 40 violations are retained.
        processViolation:
          $ref: '#/components/schemas/AlertProcessViolation'
        enforcement:
          $ref: '#/components/schemas/AlertEnforcement'
        time:
          type: string
          format: date-time
        firstOccurred:
          type: string
          format: date-time
        resolvedAt:
          type: string
          format: date-time
          description: >-
            The time at which the alert was resolved. Only set if ViolationState
            is RESOLVED.
        state:
          $ref: '#/components/schemas/storageViolationState'
        platformComponent:
          type: boolean
        entityType:
          $ref: '#/components/schemas/AlertEntityType'
      title: 'Next available tag: 24'
    storageAlertDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        namespace:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        namespaceId:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        labels:
          type: object
          additionalProperties:
            type: string
        clusterId:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        clusterName:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        containers:
          type: array
          items:
            $ref: '#/components/schemas/AlertDeploymentContainer'
        annotations:
          type: object
          additionalProperties:
            type: string
        inactive:
          type: boolean
    storageAlertResource:
      type: object
      properties:
        resourceType:
          $ref: '#/components/schemas/AlertResourceResourceType'
        name:
          type: string
        clusterId:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        clusterName:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        namespace:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
        namespaceId:
          type: string
          description: >-
            This field has to be duplicated in Alert for scope management and
            search.
      title: >-
        Represents an alert on a kubernetes resource other than a deployment
        (configmaps, secrets, etc.)
    storageBooleanOperator:
      type: string
      enum:
        - OR
        - AND
      default: OR
    storageContainerImage:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/storageImageName'
        notPullable:
          type: boolean
        isClusterLocal:
          type: boolean
      title: 'Next tag: 12'
    storageEnforcementAction:
      type: string
      enum:
        - UNSET_ENFORCEMENT
        - SCALE_TO_ZERO_ENFORCEMENT
        - UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT
        - KILL_POD_ENFORCEMENT
        - FAIL_BUILD_ENFORCEMENT
        - FAIL_KUBE_REQUEST_ENFORCEMENT
        - FAIL_DEPLOYMENT_CREATE_ENFORCEMENT
        - FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT
      default: UNSET_ENFORCEMENT
      description: |2-
         - FAIL_KUBE_REQUEST_ENFORCEMENT: FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.
         - FAIL_DEPLOYMENT_CREATE_ENFORCEMENT: FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates.
         - FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT: FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.
    storageEventSource:
      type: string
      enum:
        - NOT_APPLICABLE
        - DEPLOYMENT_EVENT
        - AUDIT_LOG_EVENT
      default: NOT_APPLICABLE
    storageExclusion:
      type: object
      properties:
        name:
          type: string
        deployment:
          $ref: '#/components/schemas/storageExclusionDeployment'
        image:
          $ref: '#/components/schemas/storageExclusionImage'
        expiration:
          type: string
          format: date-time
    storageExclusionDeployment:
      type: object
      properties:
        name:
          type: string
        scope:
          $ref: '#/components/schemas/storageScope'
    storageExclusionImage:
      type: object
      properties:
        name:
          type: string
    storageImageName:
      type: object
      properties:
        registry:
          type: string
        remote:
          type: string
        tag:
          type: string
        fullName:
          type: string
    storageL4Protocol:
      type: string
      enum:
        - L4_PROTOCOL_UNKNOWN
        - L4_PROTOCOL_TCP
        - L4_PROTOCOL_UDP
        - L4_PROTOCOL_ICMP
        - L4_PROTOCOL_RAW
        - L4_PROTOCOL_SCTP
        - L4_PROTOCOL_ANY
      default: L4_PROTOCOL_UNKNOWN
    storageLifecycleStage:
      type: string
      enum:
        - DEPLOY
        - BUILD
        - RUNTIME
      default: DEPLOY
    storageListAlert:
      type: object
      properties:
        id:
          type: string
        lifecycleStage:
          $ref: '#/components/schemas/storageLifecycleStage'
        time:
          type: string
          format: date-time
        policy:
          $ref: '#/components/schemas/storageListAlertPolicy'
        state:
          $ref: '#/components/schemas/storageViolationState'
        enforcementCount:
          type: integer
          format: int32
        enforcementAction:
          $ref: '#/components/schemas/storageEnforcementAction'
        commonEntityInfo:
          $ref: '#/components/schemas/ListAlertCommonEntityInfo'
        deployment:
          $ref: '#/components/schemas/storageListAlertDeployment'
        resource:
          $ref: '#/components/schemas/ListAlertResourceEntity'
    storageListAlertDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterName:
          type: string
          description: >-
            This field is deprecated and can be found in CommonEntityInfo. It
            will be removed from here in a future release.


            This field has moved to CommonEntityInfo
        namespace:
          type: string
          description: >-
            This field is deprecated and can be found in CommonEntityInfo. It
            will be removed from here in a future release.


            This field has moved to CommonEntityInfo
        clusterId:
          type: string
          description: >-
            This field is deprecated and can be found in CommonEntityInfo. It
            will be removed from here in a future release.


            This field has moved to CommonEntityInfo
        inactive:
          type: boolean
        namespaceId:
          type: string
          description: >-
            This field is deprecated and can be found in CommonEntityInfo. It
            will be removed from here in a future release.


            This field has moved to CommonEntityInfo
        deploymentType:
          type: string
    storageListAlertPolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        severity:
          $ref: '#/components/schemas/storageSeverity'
        description:
          type: string
        categories:
          type: array
          items:
            type: string
        developerInternalFields:
          $ref: '#/components/schemas/ListAlertPolicyDevFields'
    storageListAlertResourceType:
      type: string
      enum:
        - DEPLOYMENT
        - SECRETS
        - CONFIGMAPS
        - CLUSTER_ROLES
        - CLUSTER_ROLE_BINDINGS
        - NETWORK_POLICIES
        - SECURITY_CONTEXT_CONSTRAINTS
        - EGRESS_FIREWALLS
      default: DEPLOYMENT
      title: >-
        A special ListAlert-only enumeration of all resource types. Unlike
        Alert.Resource.ResourceType this also includes deployment as a type

        This must be kept in sync with Alert.Resource.ResourceType (excluding
        the deployment value)
    storageNetworkEntityInfoType:
      type: string
      enum:
        - UNKNOWN_TYPE
        - DEPLOYMENT
        - INTERNET
        - LISTEN_ENDPOINT
        - EXTERNAL_SOURCE
        - INTERNAL_ENTITIES
      default: UNKNOWN_TYPE
      title: >-
        - INTERNAL_ENTITIES: INTERNAL_ENTITIES is for grouping all internal
        entities under a single network graph node
    storagePolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Name of the policy.  Must be unique.
        description:
          type: string
          description: Free-form text description of this policy.
        rationale:
          type: string
        remediation:
          type: string
          description: Describes how to remediate a violation of this policy.
        disabled:
          type: boolean
          description: >-
            Toggles whether or not this policy will be executing and actively
            firing alerts.
        categories:
          type: array
          items:
            type: string
          description: >-
            List of categories that this policy falls under.  Category names
            must already exist in Central.
        lifecycleStages:
          type: array
          items:
            $ref: '#/components/schemas/storageLifecycleStage'
          description: >-
            Describes which policy lifecylce stages this policy applies to. 
            Choices are DEPLOY, BUILD, and RUNTIME.
        eventSource:
          $ref: '#/components/schemas/storageEventSource'
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/storageExclusion'
          description: >-
            Define deployments or images that should be excluded from this
            policy.
        scope:
          type: array
          items:
            $ref: '#/components/schemas/storageScope'
          description: >-
            Defines clusters, namespaces, and deployments that should be
            included in this policy.  No scopes defined includes everything.
        severity:
          $ref: '#/components/schemas/storageSeverity'
        enforcementActions:
          type: array
          items:
            $ref: '#/components/schemas/storageEnforcementAction'
          description: >-
            FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission
            control webhook is configured to enforce on object creates/updates.

            FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control
            webhook is enabled to listen on exec and port-forward events.

            FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission
            control webhook is configured to enforce on object updates.

            Lists the enforcement actions to take when a violation from this
            policy is identified.  Possible value are UNSET_ENFORCEMENT,
            SCALE_TO_ZERO_ENFORCEMENT,
            UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT, KILL_POD_ENFORCEMENT,
            FAIL_BUILD_ENFORCEMENT, FAIL_KUBE_REQUEST_ENFORCEMENT,
            FAIL_DEPLOYMENT_CREATE_ENFORCEMENT, and.
            FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT.
        notifiers:
          type: array
          items:
            type: string
          description: >-
            List of IDs of the notifiers that should be triggered when a
            violation from this policy is identified.  IDs should be in the form
            of a UUID and are found through the Central API.
        lastUpdated:
          type: string
          format: date-time
        SORTName:
          type: string
          description: For internal use only.
        SORTLifecycleStage:
          type: string
          description: For internal use only.
        SORTEnforcement:
          type: boolean
          description: For internal use only.
        policyVersion:
          type: string
        policySections:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicySection'
          description: PolicySections define the violation criteria for this policy.
        mitreAttackVectors:
          type: array
          items:
            $ref: '#/components/schemas/PolicyMitreAttackVectors'
        criteriaLocked:
          type: boolean
          description: >-
            Read-only field. If true, the policy's criteria fields are rendered
            read-only.
        mitreVectorsLocked:
          type: boolean
          description: >-
            Read-only field. If true, the policy's MITRE ATT&CK fields are
            rendered read-only.
        isDefault:
          type: boolean
          description: >-
            Read-only field. Indicates the policy is a default policy if true
            and a custom policy if false.
        source:
          $ref: '#/components/schemas/storagePolicySource'
      title: 'Next tag: 28'
    storagePolicyGroup:
      type: object
      properties:
        fieldName:
          type: string
          description: >-
            Defines which field on a deployment or image this PolicyGroup
            evaluates.  See
            https://docs.openshift.com/acs/operating/manage-security-policies.html#policy-criteria_manage-security-policies
            for a complete list of possible values.
        booleanOperator:
          $ref: '#/components/schemas/storageBooleanOperator'
        negate:
          type: boolean
          description: >-
            Determines if the evaluation of this PolicyGroup is negated. 
            Default to false.
        values:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicyValue'
          title: List of values for the specified field
    storagePolicySection:
      type: object
      properties:
        sectionName:
          type: string
        policyGroups:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicyGroup'
          description: >-
            The set of policies groups that make up this section.  Each group
            can be considered an individual criterion.
    storagePolicySource:
      type: string
      enum:
        - IMPERATIVE
        - DECLARATIVE
      default: IMPERATIVE
    storagePolicyValue:
      type: object
      properties:
        value:
          type: string
    storageProcessIndicator:
      type: object
      properties:
        id:
          type: string
          title: A unique UUID for the Indicator message
        deploymentId:
          type: string
        containerName:
          type: string
        podId:
          type: string
          title: Pod name
        podUid:
          type: string
        signal:
          $ref: '#/components/schemas/storageProcessSignal'
        clusterId:
          type: string
        namespace:
          type: string
        containerStartTime:
          type: string
          format: date-time
        imageId:
          type: string
      title: 'Next available tag: 13'
    storageProcessSignal:
      type: object
      properties:
        id:
          type: string
          description: |-
            A unique UUID for identifying the message
            We have this here instead of at the top level
            because we want to have each message to be
            self contained.
        containerId:
          type: string
          title: ID of container associated with this process
        time:
          type: string
          format: date-time
          title: Process creation time
        name:
          type: string
          title: Process name
        args:
          type: string
          title: Process arguments
        execFilePath:
          type: string
          title: Process executable file path
        pid:
          type: integer
          format: int64
          title: Host process ID
        uid:
          type: integer
          format: int64
          title: Real user ID
        gid:
          type: integer
          format: int64
          title: Real group ID
        lineage:
          type: array
          items:
            type: string
          title: Process Lineage
        scraped:
          type: boolean
          title: Signal origin
        lineageInfo:
          type: array
          items:
            $ref: '#/components/schemas/ProcessSignalLineageInfo'
          title: Process LineageInfo
    storageScope:
      type: object
      properties:
        cluster:
          type: string
        namespace:
          type: string
        label:
          $ref: '#/components/schemas/storageScopeLabel'
    storageScopeLabel:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    storageSeverity:
      type: string
      enum:
        - UNSET_SEVERITY
        - LOW_SEVERITY
        - MEDIUM_SEVERITY
        - HIGH_SEVERITY
        - CRITICAL_SEVERITY
      default: UNSET_SEVERITY
    storageViolationState:
      type: string
      enum:
        - ACTIVE
        - RESOLVED
        - ATTEMPTED
      default: ACTIVE
    v1AlertEvent:
      type: object
      properties:
        time:
          type: string
          format: int64
        type:
          $ref: '#/components/schemas/v1Type'
        id:
          type: string
    v1CountAlertsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DeleteAlertsResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int64
        dryRun:
          type: boolean
    v1Empty:
      type: object
    v1GetAlertTimeseriesResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/GetAlertTimeseriesResponseClusterAlerts'
    v1GetAlertsCountsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GetAlertsCountsResponseAlertGroup'
    v1GetAlertsGroupResponse:
      type: object
      properties:
        alertsByPolicies:
          type: array
          items:
            $ref: '#/components/schemas/v1GetAlertsGroupResponsePolicyGroup'
    v1GetAlertsGroupResponsePolicyGroup:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storageListAlertPolicy'
        numAlerts:
          type: string
          format: int64
    v1ListAlertsRequest:
      type: object
      properties:
        query:
          type: string
        pagination:
          $ref: '#/components/schemas/v1Pagination'
    v1ListAlertsResponse:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/storageListAlert'
    v1RawQuery:
      type: object
      properties:
        query:
          type: string
        pagination:
          $ref: '#/components/schemas/v1Pagination'
      description: >-
        RawQuery represents the search query string.

        The format of the query string is "<field name>:<value,value,...>+<field
        name>:<value, value,...>+..."

        For example:

        To search for deployments named "central" and "sensor" in the namespace
        "stackrox", the query string would be

        "Deployment:central,sensor+Namespace:stackrox"

        RawQuery is used in ListAPIs to search for a particular object.
    v1ResolveAlertsRequest:
      type: object
      properties:
        query:
          type: string
    v1Type:
      type: string
      enum:
        - CREATED
        - REMOVED
      default: CREATED
    storageTokenMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            type: string
        issuedAt:
          type: string
          format: date-time
        expiration:
          type: string
          format: date-time
        revoked:
          type: boolean
        role:
          type: string
      title: 'Next available tag: 8'
    v1GenerateTokenRequest:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
        roles:
          type: array
          items:
            type: string
        expiration:
          type: string
          format: date-time
    v1GenerateTokenResponse:
      type: object
      properties:
        token:
          type: string
        metadata:
          $ref: '#/components/schemas/storageTokenMetadata'
    v1GetAPITokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/storageTokenMetadata'
    v1ListAllowedTokenRolesResponse:
      type: object
      properties:
        roleNames:
          type: array
          items:
            type: string
    AuthMachineToMachineConfigMapping:
      type: object
      properties:
        key:
          type: string
          description: A key within the identity token's claim value to use.
        valueExpression:
          type: string
          description: >-
            A regular expression that will be evaluated against values of the
            identity token claim

            identified by the specified key.

            This regular expressions is in RE2 format, see more here:

            https://github.com/google/re2/wiki/Syntax.
        role:
          type: string
          description: >-
            The role which should be issued when the key and value match for a
            particular identity token.
      description: >-
        Mappings map an identity token's claim values to a specific role within
        Central.
    AuthProviderRequiredAttribute:
      type: object
      properties:
        attributeKey:
          type: string
        attributeValue:
          type: string
      description: >-
        RequiredAttribute allows to specify a set of attributes which ALL are
        required to be returned

        by the auth provider.

        If any attribute is missing within the external claims of the token
        issued by Central, the

        authentication request to this IdP is considered failed.
    AuthServiceUpdateAuthMachineToMachineConfigBody:
      type: object
      properties:
        config:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/v1AuthMachineToMachineConfigType'
            tokenExpirationDuration:
              type: string
              description: >-
                Sets the expiration of the token returned from the
                ExchangeAuthMachineToMachineToken API call.

                Possible valid time units are: s, m, h.

                The maximum allowed expiration duration is 24h.

                As an example: 2h45m.

                For additional information on the validation of the duration,
                see:

                https://pkg.go.dev/time#ParseDuration.
            mappings:
              type: array
              items:
                $ref: '#/components/schemas/AuthMachineToMachineConfigMapping'
              description: >-
                At least one mapping is required to resolve to a valid role for
                the access token to be successfully generated.
            issuer:
              type: string
              description: >-
                The issuer of the related OIDC provider issuing the ID tokens to
                exchange.


                Must be non-empty string containing URL when type is GENERIC.

                In case of GitHub actions, this must be empty or set to
                https://token.actions.githubusercontent.com.


                Issuer is a unique key, therefore there may be at most one
                GITHUB_ACTIONS config, and each

                GENERIC config must have a distinct issuer.
          description: >-
            AuthMachineToMachineConfig determines rules for exchanging an
            identity token from a third party with

            a Central access token. The M2M stands for machine to machine, as
            this is the intended use-case

            for the config.
    TraitsMutabilityMode:
      type: string
      enum:
        - ALLOW_MUTATE
        - ALLOW_MUTATE_FORCED
      default: ALLOW_MUTATE
      description: >-
        EXPERIMENTAL.

        NOTE: Please refer from using MutabilityMode for the time being. It will
        be replaced in the future (ROX-14276).

        MutabilityMode specifies whether and how an object can be modified.
        Default

        is ALLOW_MUTATE and means there are no modification restrictions; this
        is equivalent

        to the absence of MutabilityMode specification. ALLOW_MUTATE_FORCED
        forbids all

        modifying operations except object removal with force bit on.


        Be careful when changing the state of this field. For example, modifying
        an

        object from ALLOW_MUTATE to ALLOW_MUTATE_FORCED is allowed but will
        prohibit any further

        changes to it, including modifying it back to ALLOW_MUTATE.
    TraitsOrigin:
      type: string
      enum:
        - IMPERATIVE
        - DEFAULT
        - DECLARATIVE
        - DECLARATIVE_ORPHANED
      default: IMPERATIVE
      description: >-
        Origin specifies the origin of an object.

        Objects can have four different origins:

        - IMPERATIVE: the object was created via the API. This is assumed by
        default.

        - DEFAULT: the object is a default object, such as default roles, access
        scopes etc.

        - DECLARATIVE: the object is created via declarative configuration.

        - DECLARATIVE_ORPHANED: the object is created via declarative
        configuration and then unsuccessfully deleted(for example, because it is
        referenced by another object)

        Based on the origin, different rules apply to the objects.

        Objects with the DECLARATIVE origin are not allowed to be modified via
        API, only via declarative configuration.

        Additionally, they may not reference objects with the IMPERATIVE origin.

        Objects with the DEFAULT origin are not allowed to be modified via
        either API or declarative configuration.

        They may be referenced by all other objects.

        Objects with the IMPERATIVE origin are allowed to be modified via API,
        not via declarative configuration.

        They may reference all other objects.

        Objects with the DECLARATIVE_ORPHANED origin are not allowed to be
        modified via either API or declarative configuration.

        DECLARATIVE_ORPHANED resource can become DECLARATIVE again if it is
        redefined in declarative configuration.

        Objects with this origin will be cleaned up from the system immediately
        after they are not referenced by other resources anymore.

        They may be referenced by all other objects.
    TraitsVisibility:
      type: string
      enum:
        - VISIBLE
        - HIDDEN
      default: VISIBLE
      description: >-
        EXPERIMENTAL.

        visibility allows to specify whether the object should be visible for
        certain APIs.
    UserInfoResourceToAccess:
      type: object
      properties:
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: |-
        ResourceToAccess represents a collection of permissions. It is wire
        compatible with the old format of storage.Role and replaces it in
        places where only aggregated permissions are required.
    storageAccess:
      type: string
      enum:
        - NO_ACCESS
        - READ_ACCESS
        - READ_WRITE_ACCESS
      default: NO_ACCESS
    storageAuthProvider:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        uiEndpoint:
          type: string
        enabled:
          type: boolean
        config:
          type: object
          additionalProperties:
            type: string
          description: >-
            Config holds auth provider specific configuration. Each
            configuration options

            are different based on the given auth provider type.

            OIDC:

            - "issuer": the OIDC issuer according to
            https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier.

            - "client_id": the client ID according to
            https://www.rfc-editor.org/rfc/rfc6749.html#section-2.2.

            - "client_secret": the client secret according to
            https://www.rfc-editor.org/rfc/rfc6749.html#section-2.3.1.

            - "do_not_use_client_secret": set to "true" if you want to create a
            configuration with only
              a client ID and no client secret.
            - "mode": the OIDC callback mode, choosing from "fragment", "post",
            or "query".

            - "disable_offline_access_scope": set to "true" if no offline tokens
            shall be issued.

            - "extra_scopes": a space-delimited string of additional scopes to
            request in addition to "openid profile email"
              according to https://www.rfc-editor.org/rfc/rfc6749.html#section-3.3.

            OpenShift Auth: supports no extra configuration options.


            User PKI:

            - "keys": the trusted certificates PEM encoded.


            SAML:

            - "sp_issuer": the service provider issuer according to
            https://datatracker.ietf.org/doc/html/rfc7522#section-3.

            - "idp_metadata_url": the metadata URL according to
            https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf.

            - "idp_issuer": the IdP issuer.

            - "idp_cert_pem": the cert PEM encoded for the IdP endpoint.

            - "idp_sso_url": the IdP SSO URL.

            - "idp_nameid_format": the IdP name ID format.


            IAP:

            - "audience": the audience to use.
        loginUrl:
          type: string
          description: >-
            The login URL will be provided by the backend, and may not be
            specified in a request.
        validated:
          type: boolean
        extraUiEndpoints:
          type: array
          items:
            type: string
          description: >-
            UI endpoints which to allow in addition to `ui_endpoint`. I.e., if a
            login request

            is coming from any of these, the auth request will use these for the
            callback URL,

            not ui_endpoint.
        active:
          type: boolean
        requiredAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AuthProviderRequiredAttribute'
        traits:
          $ref: '#/components/schemas/storageTraits'
        claimMappings:
          type: object
          additionalProperties:
            type: string
          description: >-
            Specifies claims from IdP token that will be copied to Rox token
            attributes.


            Each key in this map contains a path in IdP token we want to map.
            Path is separated by "." symbol.

            For example, if IdP token payload looks like:



            {

                 "a": {

                     "b" : "c",

                     "d": true,

                     "e": [ "val1", "val2", "val3" ],

                     "f": [ true, false, false ],

                     "g": 123.0,

                     "h": [ 1, 2, 3]

                 }

            }



            then "a.b" would be a valid key and "a.z" is not.


            We support the following types of claims:

            * string(path "a.b")

            * bool(path "a.d")

            * string array(path "a.e")

            * bool array (path "a.f.")


            We do NOT support the following types of claims:

            * complex claims(path "a")

            * float/integer claims(path "a.g")

            * float/integer array claims(path "a.h")


            Each value in this map contains a Rox token attribute name we want
            to add claim to.

            If, for example, value is "groups", claim would be found in
            "external_user.Attributes.groups" in token.


            Note: we only support this feature for OIDC auth provider.
        lastUpdated:
          type: string
          format: date-time
          description: >-
            Last updated indicates the last time the auth provider has been
            updated.


            In case there have been tokens issued by an auth provider _before_
            this timestamp, they will be considered

            invalid. Subsequently, all clients will have to re-issue their
            tokens (either by refreshing or by an additional

            login attempt).
      description: 'Next Tag: 15.'
    storageServiceIdentity:
      type: object
      properties:
        serialStr:
          type: string
          title: The serial number in decimal representation.
        serial:
          type: string
          format: int64
        id:
          type: string
        type:
          $ref: '#/components/schemas/storageServiceType'
        initBundleId:
          type: string
    storageServiceType:
      type: string
      enum:
        - UNKNOWN_SERVICE
        - SENSOR_SERVICE
        - CENTRAL_SERVICE
        - CENTRAL_DB_SERVICE
        - REMOTE_SERVICE
        - COLLECTOR_SERVICE
        - MONITORING_UI_SERVICE
        - MONITORING_DB_SERVICE
        - MONITORING_CLIENT_SERVICE
        - BENCHMARK_SERVICE
        - SCANNER_SERVICE
        - SCANNER_DB_SERVICE
        - ADMISSION_CONTROL_SERVICE
        - SCANNER_V4_INDEXER_SERVICE
        - SCANNER_V4_MATCHER_SERVICE
        - SCANNER_V4_DB_SERVICE
        - SCANNER_V4_SERVICE
        - REGISTRANT_SERVICE
      default: UNKNOWN_SERVICE
      description: '- SCANNER_V4_SERVICE: This is used when Scanner V4 is run in combo-mode.'
      title: 'Next available tag: 18'
    storageTraits:
      type: object
      properties:
        mutabilityMode:
          $ref: '#/components/schemas/TraitsMutabilityMode'
        visibility:
          $ref: '#/components/schemas/TraitsVisibility'
        origin:
          $ref: '#/components/schemas/TraitsOrigin'
    storageUserInfo:
      type: object
      properties:
        username:
          type: string
        friendlyName:
          type: string
        permissions:
          $ref: '#/components/schemas/UserInfoResourceToAccess'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageUserInfoRole'
    storageUserInfoRole:
      type: object
      properties:
        name:
          type: string
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: |-
        Role is wire compatible with the old format of storage.Role and
        hence only includes role name and associated permissions.
    v1AddAuthMachineToMachineConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/v1AuthMachineToMachineConfig'
    v1AddAuthMachineToMachineConfigResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/v1AuthMachineToMachineConfig'
    v1AuthMachineToMachineConfig:
      type: object
      properties:
        id:
          type: string
          description: >-
            UUID of the config.

            Note that when adding a machine to machine config, this field should
            not be set.
        type:
          $ref: '#/components/schemas/v1AuthMachineToMachineConfigType'
        tokenExpirationDuration:
          type: string
          description: >-
            Sets the expiration of the token returned from the
            ExchangeAuthMachineToMachineToken API call.

            Possible valid time units are: s, m, h.

            The maximum allowed expiration duration is 24h.

            As an example: 2h45m.

            For additional information on the validation of the duration, see:

            https://pkg.go.dev/time#ParseDuration.
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/AuthMachineToMachineConfigMapping'
          description: >-
            At least one mapping is required to resolve to a valid role for the
            access token to be successfully generated.
        issuer:
          type: string
          description: >-
            The issuer of the related OIDC provider issuing the ID tokens to
            exchange.


            Must be non-empty string containing URL when type is GENERIC.

            In case of GitHub actions, this must be empty or set to
            https://token.actions.githubusercontent.com.


            Issuer is a unique key, therefore there may be at most one
            GITHUB_ACTIONS config, and each

            GENERIC config must have a distinct issuer.
      description: >-
        AuthMachineToMachineConfig determines rules for exchanging an identity
        token from a third party with

        a Central access token. The M2M stands for machine to machine, as this
        is the intended use-case

        for the config.
    v1AuthMachineToMachineConfigType:
      type: string
      enum:
        - GENERIC
        - GITHUB_ACTIONS
        - KUBE_SERVICE_ACCOUNT
      default: GENERIC
      description: >-
        The type of the auth machine to machine config.

        Currently supports GitHub actions or any other generic OIDC provider to
        use for verifying and

        exchanging the token.
    v1AuthStatus:
      type: object
      properties:
        userId:
          type: string
        serviceId:
          $ref: '#/components/schemas/storageServiceIdentity'
        expires:
          type: string
          format: date-time
        refreshUrl:
          type: string
        authProvider:
          $ref: '#/components/schemas/storageAuthProvider'
        userInfo:
          $ref: '#/components/schemas/storageUserInfo'
        userAttributes:
          type: array
          items:
            $ref: '#/components/schemas/v1UserAttribute'
        idpToken:
          type: string
          description: >-
            Token returned to ACS by the underlying identity provider. This
            field is set only in a few,

            specific contexts. Do not rely on this field being present in the
            response.
    v1ExchangeAuthMachineToMachineTokenRequest:
      type: object
      properties:
        idToken:
          type: string
          description: Identity token that is supposed to be exchanged.
    v1ExchangeAuthMachineToMachineTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: The exchanged access token.
    v1GetAuthMachineToMachineConfigResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/v1AuthMachineToMachineConfig'
    v1ListAuthMachineToMachineConfigResponse:
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/v1AuthMachineToMachineConfig'
    v1UserAttribute:
      type: object
      properties:
        key:
          type: string
        values:
          type: array
          items:
            type: string
    AuthProviderServicePutAuthProviderBody:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        uiEndpoint:
          type: string
        enabled:
          type: boolean
        config:
          type: object
          additionalProperties:
            type: string
          description: >-
            Config holds auth provider specific configuration. Each
            configuration options

            are different based on the given auth provider type.

            OIDC:

            - "issuer": the OIDC issuer according to
            https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier.

            - "client_id": the client ID according to
            https://www.rfc-editor.org/rfc/rfc6749.html#section-2.2.

            - "client_secret": the client secret according to
            https://www.rfc-editor.org/rfc/rfc6749.html#section-2.3.1.

            - "do_not_use_client_secret": set to "true" if you want to create a
            configuration with only
              a client ID and no client secret.
            - "mode": the OIDC callback mode, choosing from "fragment", "post",
            or "query".

            - "disable_offline_access_scope": set to "true" if no offline tokens
            shall be issued.

            - "extra_scopes": a space-delimited string of additional scopes to
            request in addition to "openid profile email"
              according to https://www.rfc-editor.org/rfc/rfc6749.html#section-3.3.

            OpenShift Auth: supports no extra configuration options.


            User PKI:

            - "keys": the trusted certificates PEM encoded.


            SAML:

            - "sp_issuer": the service provider issuer according to
            https://datatracker.ietf.org/doc/html/rfc7522#section-3.

            - "idp_metadata_url": the metadata URL according to
            https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf.

            - "idp_issuer": the IdP issuer.

            - "idp_cert_pem": the cert PEM encoded for the IdP endpoint.

            - "idp_sso_url": the IdP SSO URL.

            - "idp_nameid_format": the IdP name ID format.


            IAP:

            - "audience": the audience to use.
        loginUrl:
          type: string
          description: >-
            The login URL will be provided by the backend, and may not be
            specified in a request.
        validated:
          type: boolean
        extraUiEndpoints:
          type: array
          items:
            type: string
          description: >-
            UI endpoints which to allow in addition to `ui_endpoint`. I.e., if a
            login request

            is coming from any of these, the auth request will use these for the
            callback URL,

            not ui_endpoint.
        active:
          type: boolean
        requiredAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AuthProviderRequiredAttribute'
        traits:
          $ref: '#/components/schemas/storageTraits'
        claimMappings:
          type: object
          additionalProperties:
            type: string
          description: >-
            Specifies claims from IdP token that will be copied to Rox token
            attributes.


            Each key in this map contains a path in IdP token we want to map.
            Path is separated by "." symbol.

            For example, if IdP token payload looks like:



            {

                 "a": {

                     "b" : "c",

                     "d": true,

                     "e": [ "val1", "val2", "val3" ],

                     "f": [ true, false, false ],

                     "g": 123.0,

                     "h": [ 1, 2, 3]

                 }

            }



            then "a.b" would be a valid key and "a.z" is not.


            We support the following types of claims:

            * string(path "a.b")

            * bool(path "a.d")

            * string array(path "a.e")

            * bool array (path "a.f.")


            We do NOT support the following types of claims:

            * complex claims(path "a")

            * float/integer claims(path "a.g")

            * float/integer array claims(path "a.h")


            Each value in this map contains a Rox token attribute name we want
            to add claim to.

            If, for example, value is "groups", claim would be found in
            "external_user.Attributes.groups" in token.


            Note: we only support this feature for OIDC auth provider.
        lastUpdated:
          type: string
          format: date-time
          description: >-
            Last updated indicates the last time the auth provider has been
            updated.


            In case there have been tokens issued by an auth provider _before_
            this timestamp, they will be considered

            invalid. Subsequently, all clients will have to re-issue their
            tokens (either by refreshing or by an additional

            login attempt).
      description: 'Next Tag: 15.'
    AuthProviderServiceUpdateAuthProviderBody:
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
    AvailableProviderTypesResponseAuthProviderType:
      type: object
      properties:
        type:
          type: string
        suggestedAttributes:
          type: array
          items:
            type: string
    GetLoginAuthProvidersResponseLoginAuthProvider:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        loginUrl:
          type: string
    v1AvailableProviderTypesResponse:
      type: object
      properties:
        authProviderTypes:
          type: array
          items:
            $ref: >-
              #/components/schemas/AvailableProviderTypesResponseAuthProviderType
    v1ExchangeTokenRequest:
      type: object
      properties:
        externalToken:
          type: string
          description: >-
            The external authentication token. The server will mask the value of
            this credential in responses and logs.
        type:
          type: string
        state:
          type: string
    v1ExchangeTokenResponse:
      type: object
      properties:
        token:
          type: string
        clientState:
          type: string
        test:
          type: boolean
        user:
          $ref: '#/components/schemas/v1AuthStatus'
    v1GetAuthProvidersResponse:
      type: object
      properties:
        authProviders:
          type: array
          items:
            $ref: '#/components/schemas/storageAuthProvider'
    v1GetLoginAuthProvidersResponse:
      type: object
      properties:
        authProviders:
          type: array
          items:
            $ref: >-
              #/components/schemas/GetLoginAuthProvidersResponseLoginAuthProvider
    ExternalBackupServicePutExternalBackupBody:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        schedule:
          $ref: '#/components/schemas/storageSchedule'
        backupsToKeep:
          type: integer
          format: int32
        s3:
          $ref: '#/components/schemas/storageS3Config'
        gcs:
          $ref: '#/components/schemas/storageGCSConfig'
        s3compatible:
          $ref: '#/components/schemas/storageS3Compatible'
        includeCertificates:
          type: boolean
      title: 'Next available tag: 10'
    ExternalBackupServiceUpdateExternalBackupBody:
      type: object
      properties:
        externalBackup:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            schedule:
              $ref: '#/components/schemas/storageSchedule'
            backupsToKeep:
              type: integer
              format: int32
            s3:
              $ref: '#/components/schemas/storageS3Config'
            gcs:
              $ref: '#/components/schemas/storageGCSConfig'
            s3compatible:
              $ref: '#/components/schemas/storageS3Compatible'
            includeCertificates:
              type: boolean
          title: 'Next available tag: 10'
        updatePassword:
          type: boolean
          description: >-
            When false, use the stored credentials of an existing external
            backup configuration given its ID.
    ScheduleDaysOfMonth:
      type: object
      properties:
        days:
          type: array
          items:
            type: integer
            format: int32
      title: 1 for 1st, 2 for 2nd .... 31 for 31st
    ScheduleDaysOfWeek:
      type: object
      properties:
        days:
          type: array
          items:
            type: integer
            format: int32
      title: Sunday = 0, Monday = 1, .... Saturday =  6
    ScheduleIntervalType:
      type: string
      enum:
        - UNSET
        - DAILY
        - WEEKLY
        - MONTHLY
      default: UNSET
    ScheduleWeeklyInterval:
      type: object
      properties:
        day:
          type: integer
          format: int32
    storageExternalBackup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        schedule:
          $ref: '#/components/schemas/storageSchedule'
        backupsToKeep:
          type: integer
          format: int32
        s3:
          $ref: '#/components/schemas/storageS3Config'
        gcs:
          $ref: '#/components/schemas/storageGCSConfig'
        s3compatible:
          $ref: '#/components/schemas/storageS3Compatible'
        includeCertificates:
          type: boolean
      title: 'Next available tag: 10'
    storageGCSConfig:
      type: object
      properties:
        bucket:
          type: string
        serviceAccount:
          type: string
          description: >-
            The service account for the storage integration. The server will
            mask the value of this credential in responses and logs.
        objectPrefix:
          type: string
        useWorkloadId:
          type: boolean
    storageS3Compatible:
      type: object
      properties:
        bucket:
          type: string
        accessKeyId:
          type: string
          description: >-
            The access key ID to use. The server will mask the value of this
            credential in responses and logs.
        secretAccessKey:
          type: string
          description: >-
            The secret access key to use. The server will mask the value of this
            credential in responses and logs.
        region:
          type: string
        objectPrefix:
          type: string
        endpoint:
          type: string
        urlStyle:
          $ref: '#/components/schemas/storageS3URLStyle'
      description: >-
        S3Compatible configures the backup integration with an S3 compatible
        storage provider.

        S3 compatible is intended for non-AWS providers. For AWS S3 use
        S3Config.
    storageS3Config:
      type: object
      properties:
        bucket:
          type: string
        useIam:
          type: boolean
        accessKeyId:
          type: string
          description: >-
            The access key ID for the storage integration. The server will mask
            the value of this credential in responses and logs.
        secretAccessKey:
          type: string
          description: >-
            The secret access key for the storage integration. The server will
            mask the value of this credential in responses and logs.
        region:
          type: string
        objectPrefix:
          type: string
        endpoint:
          type: string
      description: S3Config configures the backup integration with AWS S3.
    storageS3URLStyle:
      type: string
      enum:
        - S3_URL_STYLE_UNSPECIFIED
        - S3_URL_STYLE_VIRTUAL_HOSTED
        - S3_URL_STYLE_PATH
      default: S3_URL_STYLE_UNSPECIFIED
    storageSchedule:
      type: object
      properties:
        intervalType:
          $ref: '#/components/schemas/ScheduleIntervalType'
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        weekly:
          $ref: '#/components/schemas/ScheduleWeeklyInterval'
        daysOfWeek:
          $ref: '#/components/schemas/ScheduleDaysOfWeek'
        daysOfMonth:
          $ref: '#/components/schemas/ScheduleDaysOfMonth'
    v1GetExternalBackupsResponse:
      type: object
      properties:
        externalBackups:
          type: array
          items:
            $ref: '#/components/schemas/storageExternalBackup'
    v1UpdateExternalBackupRequest:
      type: object
      properties:
        externalBackup:
          $ref: '#/components/schemas/storageExternalBackup'
        updatePassword:
          type: boolean
          description: >-
            When false, use the stored credentials of an existing external
            backup configuration given its ID.
    v1CentralUpgradeStatus:
      type: object
      properties:
        version:
          type: string
          title: Current Central Version
        forceRollbackTo:
          type: string
          description: >-
            The version of previous clone in Central. This is the version we can
            force rollback to.
        canRollbackAfterUpgrade:
          type: boolean
          description: >-
            If true, we can rollback to the current version if an upgrade
            failed.
        spaceRequiredForRollbackAfterUpgrade:
          type: string
          format: int64
          title: Current disk space stats for upgrade
        spaceAvailableForRollbackAfterUpgrade:
          type: string
          format: int64
    v1GetUpgradeStatusResponse:
      type: object
      properties:
        upgradeStatus:
          $ref: '#/components/schemas/v1CentralUpgradeStatus'
    CloudSourcesServiceUpdateCloudSourceBody:
      type: object
      properties:
        cloudSource:
          type: object
          properties:
            name:
              type: string
            type:
              $ref: '#/components/schemas/v1CloudSourceType'
            credentials:
              $ref: '#/components/schemas/v1CloudSourceCredentials'
            skipTestIntegration:
              type: boolean
            paladinCloud:
              $ref: '#/components/schemas/v1PaladinCloudConfig'
            ocm:
              $ref: '#/components/schemas/v1OCMConfig'
          description: |-
            CloudSource is an integration which provides a source for discovered
            clusters.
        updateCredentials:
          type: boolean
          description: |-
            If true, cloud_source must include valid credentials.
            If false, the resource must already exist and
            credentials in cloud_source are ignored.
    v1CloudSource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/v1CloudSourceType'
        credentials:
          $ref: '#/components/schemas/v1CloudSourceCredentials'
        skipTestIntegration:
          type: boolean
        paladinCloud:
          $ref: '#/components/schemas/v1PaladinCloudConfig'
        ocm:
          $ref: '#/components/schemas/v1OCMConfig'
      description: |-
        CloudSource is an integration which provides a source for discovered
        clusters.
    v1CloudSourceCredentials:
      type: object
      properties:
        secret:
          type: string
          description: Used for single-valued authentication via long-lived tokens.
        clientId:
          type: string
          description: Used for client authentication in combination with client_secret.
        clientSecret:
          type: string
          description: Used for client authentication in combination with client_id.
    v1CloudSourceType:
      type: string
      enum:
        - TYPE_UNSPECIFIED
        - TYPE_PALADIN_CLOUD
        - TYPE_OCM
      default: TYPE_UNSPECIFIED
    v1CloudSourcesFilter:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: Matches cloud sources based on their name.
        types:
          type: array
          items:
            $ref: '#/components/schemas/v1CloudSourceType'
          description: Matches cloud sources based on their type.
    v1CountCloudSourcesResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1CreateCloudSourceRequest:
      type: object
      properties:
        cloudSource:
          $ref: '#/components/schemas/v1CloudSource'
    v1CreateCloudSourceResponse:
      type: object
      properties:
        cloudSource:
          $ref: '#/components/schemas/v1CloudSource'
    v1GetCloudSourceResponse:
      type: object
      properties:
        cloudSource:
          $ref: '#/components/schemas/v1CloudSource'
    v1ListCloudSourcesResponse:
      type: object
      properties:
        cloudSources:
          type: array
          items:
            $ref: '#/components/schemas/v1CloudSource'
    v1OCMConfig:
      type: object
      properties:
        endpoint:
          type: string
          title: |-
            Endpoint to the OpenShift API server. Https is assumed if no
            protocol is specified. Example: https://api.openshift.com
      description: >-
        OCMConfig provides information required to fetch discovered clusters
        from

        the OpenShift cluster manager.
    v1PaladinCloudConfig:
      type: object
      properties:
        endpoint:
          type: string
          title: |-
            Endpoint to the Paladin Cloud API server. Https is assumed if no
            protocol is specified. Example: https://apiqa.paladincloud.io
      description: |-
        PaladinCloudConfig provides information required to fetch discovered
        clusters from Paladin Cloud.
    v1TestCloudSourceRequest:
      type: object
      properties:
        cloudSource:
          $ref: '#/components/schemas/v1CloudSource'
        updateCredentials:
          type: boolean
          description: |-
            If true, cloud_source must include valid credentials.
            If false, the resource must already exist and
            credentials in cloud_source are ignored.
    CRSRevokeResponseCRSRevocationError:
      type: object
      properties:
        id:
          type: string
        error:
          type: string
    InitBundleMetaImpactedCluster:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    InitBundleRevokeResponseInitBundleRevocationError:
      type: object
      properties:
        id:
          type: string
        error:
          type: string
        impactedClusters:
          type: array
          items:
            $ref: '#/components/schemas/InitBundleMetaImpactedCluster'
    storageUser:
      type: object
      properties:
        id:
          type: string
        authProviderId:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/storageUserAttribute'
        idpToken:
          type: string
      description: >-
        User is an object that allows us to track the roles a user is tied to,
        and how they logged in.
    storageUserAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    v1CRSGenRequest:
      type: object
      properties:
        name:
          type: string
    v1CRSGenResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v1CRSMeta'
        crs:
          type: string
          format: byte
    v1CRSMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/storageUser'
        expiresAt:
          type: string
          format: date-time
    v1CRSMetasResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1CRSMeta'
    v1CRSRevokeRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    v1CRSRevokeResponse:
      type: object
      properties:
        crsRevocationErrors:
          type: array
          items:
            $ref: '#/components/schemas/CRSRevokeResponseCRSRevocationError'
        revokedIds:
          type: array
          items:
            type: string
    v1GetCAConfigResponse:
      type: object
      properties:
        helmValuesBundle:
          type: string
          format: byte
    v1InitBundleGenRequest:
      type: object
      properties:
        name:
          type: string
    v1InitBundleGenResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/v1InitBundleMeta'
        helmValuesBundle:
          type: string
          format: byte
        kubectlBundle:
          type: string
          format: byte
    v1InitBundleMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        impactedClusters:
          type: array
          items:
            $ref: '#/components/schemas/InitBundleMetaImpactedCluster'
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/storageUser'
        expiresAt:
          type: string
          format: date-time
    v1InitBundleMetasResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1InitBundleMeta'
    v1InitBundleRevokeRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        confirmImpactedClustersIds:
          type: array
          items:
            type: string
    v1InitBundleRevokeResponse:
      type: object
      properties:
        initBundleRevocationErrors:
          type: array
          items:
            $ref: >-
              #/components/schemas/InitBundleRevokeResponseInitBundleRevocationError
        initBundleRevokedIds:
          type: array
          items:
            type: string
    ClusterHealthStatusHealthStatusLabel:
      type: string
      enum:
        - UNINITIALIZED
        - UNAVAILABLE
        - UNHEALTHY
        - DEGRADED
        - HEALTHY
      default: UNINITIALIZED
      title: '- UNAVAILABLE: Only collector can have unavailable status'
    ClusterUpgradeStatusUpgradability:
      type: string
      enum:
        - UNSET
        - UP_TO_DATE
        - MANUAL_UPGRADE_REQUIRED
        - AUTO_UPGRADE_POSSIBLE
        - SENSOR_VERSION_HIGHER
      default: UNSET
      description: >2-
         - SENSOR_VERSION_HIGHER: SENSOR_VERSION_HIGHER occurs when we detect that the sensor
        is running a newer version than this Central. This is unexpected,

        but can occur depending on the patches a customer does.

        In this case, we will NOT automatically "upgrade" the sensor,

        since that would be a downgrade, even if the autoupgrade setting is

        on. The user will be allowed to manually trigger the upgrade, but they
        are

        strongly discouraged from doing so without upgrading Central first,
        since this

        is an unsupported configuration.
    ClusterUpgradeStatusUpgradeProcessStatus:
      type: object
      properties:
        active:
          type: boolean
        id:
          type: string
        targetVersion:
          type: string
          title: only relevant if type == Upgrade
        upgraderImage:
          type: string
        initiatedAt:
          type: string
          format: date-time
        progress:
          $ref: '#/components/schemas/storageUpgradeProgress'
        type:
          $ref: '#/components/schemas/UpgradeProcessStatusUpgradeProcessType'
    ClustersServicePutClusterBody:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageClusterType'
        labels:
          type: object
          additionalProperties:
            type: string
        mainImage:
          type: string
        collectorImage:
          type: string
        centralApiEndpoint:
          type: string
        runtimeSupport:
          type: boolean
        collectionMethod:
          $ref: '#/components/schemas/storageCollectionMethod'
        admissionController:
          type: boolean
        admissionControllerUpdates:
          type: boolean
        admissionControllerEvents:
          type: boolean
        status:
          $ref: '#/components/schemas/storageClusterStatus'
        dynamicConfig:
          $ref: '#/components/schemas/storageDynamicClusterConfig'
        tolerationsConfig:
          $ref: '#/components/schemas/storageTolerationsConfig'
        priority:
          type: string
          format: int64
        healthStatus:
          $ref: '#/components/schemas/storageClusterHealthStatus'
        slimCollector:
          type: boolean
        helmConfig:
          $ref: '#/components/schemas/storageCompleteClusterConfig'
        mostRecentSensorId:
          $ref: '#/components/schemas/storageSensorDeploymentIdentification'
        auditLogState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAuditLogFileState'
          description: For internal use only.
        initBundleId:
          type: string
        managedBy:
          $ref: '#/components/schemas/storageManagerType'
        sensorCapabilities:
          type: array
          items:
            type: string
    UpgradeProcessStatusUpgradeProcessType:
      type: string
      enum:
        - UPGRADE
        - CERT_ROTATION
      default: UPGRADE
      description: |2-
         - UPGRADE: UPGRADE represents a sensor version upgrade.
         - CERT_ROTATION: CERT_ROTATION represents an upgrade process that only rotates the TLS certs
        used by the cluster, without changing anything else.
    UpgradeProgressUpgradeState:
      type: string
      enum:
        - UPGRADE_INITIALIZING
        - UPGRADER_LAUNCHING
        - UPGRADER_LAUNCHED
        - PRE_FLIGHT_CHECKS_COMPLETE
        - UPGRADE_OPERATIONS_DONE
        - UPGRADE_COMPLETE
        - UPGRADE_INITIALIZATION_ERROR
        - PRE_FLIGHT_CHECKS_FAILED
        - UPGRADE_ERROR_ROLLING_BACK
        - UPGRADE_ERROR_ROLLED_BACK
        - UPGRADE_ERROR_ROLLBACK_FAILED
        - UPGRADE_ERROR_UNKNOWN
        - UPGRADE_TIMED_OUT
      default: UPGRADE_INITIALIZING
      description: |2-
         - UPGRADER_LAUNCHING: In-progress states.
         - UPGRADE_COMPLETE: The success state.
        PLEASE NUMBER ALL IN-PROGRESS STATES ABOVE THIS
        AND ALL ERROR STATES BELOW THIS.
         - UPGRADE_INITIALIZATION_ERROR: Error states.
    storageAWSProviderMetadata:
      type: object
      properties:
        accountId:
          type: string
    storageAdmissionControlHealthInfo:
      type: object
      properties:
        totalDesiredPods:
          type: integer
          format: int32
        totalReadyPods:
          type: integer
          format: int32
        statusErrors:
          type: array
          items:
            type: string
          description: >-
            Collection of errors that occurred while trying to obtain admission
            control health info.
      description: >-
        AdmissionControlHealthInfo carries data about admission control
        deployment but does not include admission control health status

        derived from this data.

        Aggregated admission control health status is not included because it is
        derived in central and not in the component that

        first reports AdmissionControlHealthInfo (sensor).


        The following fields are made optional/nullable because there can be
        errors when trying to obtain them and
         the default value of 0 might be confusing with the actual value 0. In case an error happens when trying to obtain
         a certain field, it will be absent (instead of having the default value).
    storageAdmissionControllerConfig:
      type: object
      properties:
        enabled:
          type: boolean
        timeoutSeconds:
          type: integer
          format: int32
        scanInline:
          type: boolean
        disableBypass:
          type: boolean
        enforceOnUpdates:
          type: boolean
    storageAuditLogFileState:
      type: object
      properties:
        collectLogsSince:
          type: string
          format: date-time
        lastAuditId:
          type: string
          title: Previously received audit id. May be empty
      title: >-
        AuditLogFileState tracks the last audit log event timestamp and ID that
        was collected by Compliance

        For internal use only
    storageAzureProviderMetadata:
      type: object
      properties:
        subscriptionId:
          type: string
    storageCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageClusterType'
        labels:
          type: object
          additionalProperties:
            type: string
        mainImage:
          type: string
        collectorImage:
          type: string
        centralApiEndpoint:
          type: string
        runtimeSupport:
          type: boolean
        collectionMethod:
          $ref: '#/components/schemas/storageCollectionMethod'
        admissionController:
          type: boolean
        admissionControllerUpdates:
          type: boolean
        admissionControllerEvents:
          type: boolean
        status:
          $ref: '#/components/schemas/storageClusterStatus'
        dynamicConfig:
          $ref: '#/components/schemas/storageDynamicClusterConfig'
        tolerationsConfig:
          $ref: '#/components/schemas/storageTolerationsConfig'
        priority:
          type: string
          format: int64
        healthStatus:
          $ref: '#/components/schemas/storageClusterHealthStatus'
        slimCollector:
          type: boolean
        helmConfig:
          $ref: '#/components/schemas/storageCompleteClusterConfig'
        mostRecentSensorId:
          $ref: '#/components/schemas/storageSensorDeploymentIdentification'
        auditLogState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAuditLogFileState'
          description: For internal use only.
        initBundleId:
          type: string
        managedBy:
          $ref: '#/components/schemas/storageManagerType'
        sensorCapabilities:
          type: array
          items:
            type: string
    storageClusterCertExpiryStatus:
      type: object
      properties:
        sensorCertExpiry:
          type: string
          format: date-time
        sensorCertNotBefore:
          type: string
          format: date-time
    storageClusterHealthStatus:
      type: object
      properties:
        id:
          type: string
        collectorHealthInfo:
          $ref: '#/components/schemas/storageCollectorHealthInfo'
        admissionControlHealthInfo:
          $ref: '#/components/schemas/storageAdmissionControlHealthInfo'
        scannerHealthInfo:
          $ref: '#/components/schemas/storageScannerHealthInfo'
        sensorHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        collectorHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        overallHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        admissionControlHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        scannerHealthStatus:
          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'
        lastContact:
          type: string
          format: date-time
          description: >-
            For sensors not having health capability, this will be filled with
            gRPC connection poll. Otherwise,

            this timestamp will be updated by central pipeline when message is
            processed.


            Note: we use this setting to guard against a specific attack vector
            during CRS-based cluster registration.

            Assuming that a CRS was used to register a cluster A and the CRS is
            leaked, an attacker shall not be able

            to re-run the CRS-flow which would then equip the attacker with a
            certificate & key issued to the cluster A.

            As countermeasure we only allow re-running the CRS-flow only as long
            as the last_contact field is empty,

            indicating that the legit cluster A's sensor has not yet connected
            with the CRS-issued service certificates.
        healthInfoComplete:
          type: boolean
          title: >-
            To track cases such as when sensor is healthy, but collector status
            data is unavailable because the sensor is on an old version
    storageClusterMetadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageClusterMetadataType'
        name:
          type: string
          description: >-
            Name represents the name under which the cluster is registered with
            the

            cloud provider. In case of self managed OpenShift it is the name
            chosen

            by the OpenShift installer.
        id:
          type: string
          description: >-
            Id represents a unique ID under which the cluster is registered with
            the

            cloud provider. Not all cluster types have an id. For all OpenShift

            clusters, this is the Red Hat `cluster_id` registered with OCM.
      description: >-
        ClusterMetadata contains metadata information about the cluster
        infrastructure.
    storageClusterMetadataType:
      type: string
      enum:
        - UNSPECIFIED
        - AKS
        - ARO
        - EKS
        - GKE
        - OCP
        - OSD
        - ROSA
      default: UNSPECIFIED
    storageClusterStatus:
      type: object
      properties:
        sensorVersion:
          type: string
        DEPRECATEDLastContact:
          type: string
          format: date-time
          description: >-
            This field has been deprecated starting release 49.0. Use
            healthStatus.lastContact instead.
        providerMetadata:
          $ref: '#/components/schemas/storageProviderMetadata'
        orchestratorMetadata:
          $ref: '#/components/schemas/storageOrchestratorMetadata'
        upgradeStatus:
          $ref: '#/components/schemas/storageClusterUpgradeStatus'
        certExpiryStatus:
          $ref: '#/components/schemas/storageClusterCertExpiryStatus'
    storageClusterType:
      type: string
      enum:
        - GENERIC_CLUSTER
        - KUBERNETES_CLUSTER
        - OPENSHIFT_CLUSTER
        - OPENSHIFT4_CLUSTER
      default: GENERIC_CLUSTER
    storageClusterUpgradeStatus:
      type: object
      properties:
        upgradability:
          $ref: '#/components/schemas/ClusterUpgradeStatusUpgradability'
        upgradabilityStatusReason:
          type: string
        mostRecentProcess:
          $ref: '#/components/schemas/ClusterUpgradeStatusUpgradeProcessStatus'
    storageCollectionMethod:
      type: string
      enum:
        - UNSET_COLLECTION
        - NO_COLLECTION
        - KERNEL_MODULE
        - EBPF
        - CORE_BPF
      default: UNSET_COLLECTION
    storageCollectorHealthInfo:
      type: object
      properties:
        version:
          type: string
          title: >-
            This is the version of the collector deamonset as returned by k8s
            API
        totalDesiredPods:
          type: integer
          format: int32
        totalReadyPods:
          type: integer
          format: int32
        totalRegisteredNodes:
          type: integer
          format: int32
        statusErrors:
          type: array
          items:
            type: string
          description: >-
            Collection of errors that occurred while trying to obtain collector
            health info.
      description: >-
        CollectorHealthInfo carries data about collector deployment but does not
        include collector health status derived from this data.

        Aggregated collector health status is not included because it is derived
        in central and not in the component that

        first reports CollectorHealthInfo (sensor).
    storageCompleteClusterConfig:
      type: object
      properties:
        dynamicConfig:
          $ref: '#/components/schemas/storageDynamicClusterConfig'
        staticConfig:
          $ref: '#/components/schemas/storageStaticClusterConfig'
        configFingerprint:
          type: string
        clusterLabels:
          type: object
          additionalProperties:
            type: string
      description: |-
        Encodes a complete cluster configuration minus ID/Name identifiers
        including static and dynamic settings.
    storageDynamicClusterConfig:
      type: object
      properties:
        admissionControllerConfig:
          $ref: '#/components/schemas/storageAdmissionControllerConfig'
        registryOverride:
          type: string
        disableAuditLogs:
          type: boolean
      description: >-
        The difference between Static and Dynamic cluster config is that Dynamic
        values are sent over the Central to Sensor gRPC connection. This has the
        benefit of allowing for "hot reloading" of values without restarting
        Secured cluster components.
    storageGoogleProviderMetadata:
      type: object
      properties:
        project:
          type: string
        clusterName:
          type: string
          description: Deprecated in favor of providerMetadata.cluster.name.
    storageManagerType:
      type: string
      enum:
        - MANAGER_TYPE_UNKNOWN
        - MANAGER_TYPE_MANUAL
        - MANAGER_TYPE_HELM_CHART
        - MANAGER_TYPE_KUBERNETES_OPERATOR
      default: MANAGER_TYPE_UNKNOWN
    storageOrchestratorMetadata:
      type: object
      properties:
        version:
          type: string
        openshiftVersion:
          type: string
        buildDate:
          type: string
          format: date-time
        apiVersions:
          type: array
          items:
            type: string
    storageProviderMetadata:
      type: object
      properties:
        region:
          type: string
        zone:
          type: string
        google:
          $ref: '#/components/schemas/storageGoogleProviderMetadata'
        aws:
          $ref: '#/components/schemas/storageAWSProviderMetadata'
        azure:
          $ref: '#/components/schemas/storageAzureProviderMetadata'
        verified:
          type: boolean
        cluster:
          $ref: '#/components/schemas/storageClusterMetadata'
    storageScannerHealthInfo:
      type: object
      properties:
        totalDesiredAnalyzerPods:
          type: integer
          format: int32
        totalReadyAnalyzerPods:
          type: integer
          format: int32
        totalDesiredDbPods:
          type: integer
          format: int32
        totalReadyDbPods:
          type: integer
          format: int32
        statusErrors:
          type: array
          items:
            type: string
          description: >-
            Collection of errors that occurred while trying to obtain scanner
            health info.
      description: >-
        ScannerHealthInfo represents health info of a scanner instance that is
        deployed on a secured cluster (so called "local scanner").

        When the scanner is deployed on a central cluster, the following message
        is NOT used.

        ScannerHealthInfo carries data about scanner deployment but does not
        include scanner health status

        derived from this data.

        Aggregated scanner health status is not included because it is derived
        in central and not in the component that

        first reports ScannerHealthInfo (sensor).


        The following fields are made optional/nullable because there can be
        errors when trying to obtain them and
         the default value of 0 might be confusing with the actual value 0. In case an error happens when trying to obtain
         a certain field, it will be absent (instead of having the default value).
    storageSensorDeploymentIdentification:
      type: object
      properties:
        systemNamespaceId:
          type: string
        defaultNamespaceId:
          type: string
        appNamespace:
          type: string
        appNamespaceId:
          type: string
        appServiceaccountId:
          type: string
        k8sNodeName:
          type: string
      description: >-
        StackRoxDeploymentIdentification aims at uniquely identifying a StackRox
        Sensor deployment. It is used to determine

        whether a sensor connection comes from a sensor pod that has restarted
        or was recreated (possibly after a network

        partition), or from a deployment in a different namespace or cluster.
    storageStaticClusterConfig:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageClusterType'
        mainImage:
          type: string
        centralApiEndpoint:
          type: string
        collectionMethod:
          $ref: '#/components/schemas/storageCollectionMethod'
        collectorImage:
          type: string
        admissionController:
          type: boolean
        admissionControllerUpdates:
          type: boolean
        tolerationsConfig:
          $ref: '#/components/schemas/storageTolerationsConfig'
        slimCollector:
          type: boolean
        admissionControllerEvents:
          type: boolean
      description: >-
        The difference between Static and Dynamic cluster config is that Static
        values are not sent over the Central to Sensor gRPC connection. They are
        used, for example, to generate manifests that can be used to set up the
        Secured Cluster's k8s components. They are *not* dynamically reloaded.
    storageTolerationsConfig:
      type: object
      properties:
        disabled:
          type: boolean
    storageUpgradeProgress:
      type: object
      properties:
        upgradeState:
          $ref: '#/components/schemas/UpgradeProgressUpgradeState'
        upgradeStatusDetail:
          type: string
        since:
          type: string
          format: date-time
    v1ClusterDefaultsResponse:
      type: object
      properties:
        mainImageRepository:
          type: string
        collectorImageRepository:
          type: string
        kernelSupportAvailable:
          type: boolean
    v1ClusterResponse:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/storageCluster'
        clusterRetentionInfo:
          $ref: '#/components/schemas/v1DecommissionedClusterRetentionInfo'
    v1ClustersList:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/storageCluster'
        clusterIdToRetentionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1DecommissionedClusterRetentionInfo'
          title: Maps 'UNHEALTHY' clusters' IDs to their retention info
    v1DecommissionedClusterRetentionInfo:
      type: object
      properties:
        isExcluded:
          type: boolean
          title: indicates whether a cluster is protected from deletion
        daysUntilDeletion:
          type: integer
          format: int32
          title: >-
            days after which cluster will be deleted if sensor health remains
            UNHEALTHY
      title: 'next available tag: 3'
    v1KernelSupportAvailableResponse:
      type: object
      properties:
        kernelSupportAvailable:
          type: boolean
    v1ComplianceRun:
      type: object
      properties:
        id:
          type: string
        clusterId:
          type: string
        standardId:
          type: string
        startTime:
          type: string
          format: date-time
        finishTime:
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/v1ComplianceRunState'
        errorMessage:
          type: string
    v1ComplianceRunSelection:
      type: object
      properties:
        clusterId:
          type: string
          description: The ID of the cluster. "*" means "all clusters".
        standardId:
          type: string
          description: The ID of the compliance standard. "*" means "all standards".
    v1ComplianceRunState:
      type: string
      enum:
        - INVALID
        - READY
        - STARTED
        - WAIT_FOR_DATA
        - EVALUTING_CHECKS
        - FINISHED
      default: INVALID
    v1GetComplianceRunStatusesResponse:
      type: object
      properties:
        invalidRunIds:
          type: array
          items:
            type: string
        runs:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceRun'
    v1GetRecentComplianceRunsResponse:
      type: object
      properties:
        complianceRuns:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceRun'
    v1TriggerComplianceRunsRequest:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/v1ComplianceRunSelection'
    v1TriggerComplianceRunsResponse:
      type: object
      properties:
        startedRuns:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceRun'
    ComplianceAggregationAggregationKey:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/storageComplianceAggregationScope'
        id:
          type: string
      title: 'Next available tag: 3'
    ComplianceResultValueEvidence:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/storageComplianceState'
        message:
          type: string
        messageId:
          type: integer
          format: int32
    ComplianceRunResultsEntityResults:
      type: object
      properties:
        controlResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageComplianceResultValue'
    ComplianceServiceUpdateComplianceStandardConfigBody:
      type: object
      properties:
        hideScanResults:
          type: boolean
    storageComplianceAggregationResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceAggregationResult'
        sources:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceAggregationSource'
        errorMessage:
          type: string
      title: 'Next available tag: 3'
    storageComplianceAggregationResult:
      type: object
      properties:
        aggregationKeys:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceAggregationAggregationKey'
        unit:
          $ref: '#/components/schemas/storageComplianceAggregationScope'
        numPassing:
          type: integer
          format: int32
        numFailing:
          type: integer
          format: int32
        numSkipped:
          type: integer
          format: int32
      title: 'Next available tag: 5'
    storageComplianceAggregationScope:
      type: string
      enum:
        - UNKNOWN
        - STANDARD
        - CLUSTER
        - CATEGORY
        - CONTROL
        - NAMESPACE
        - NODE
        - DEPLOYMENT
        - CHECK
      default: UNKNOWN
    storageComplianceAggregationSource:
      type: object
      properties:
        clusterId:
          type: string
        standardId:
          type: string
        successfulRun:
          $ref: '#/components/schemas/storageComplianceRunMetadata'
        failedRuns:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceRunMetadata'
      title: 'Next available tag: 5'
    storageComplianceDomain:
      type: object
      properties:
        id:
          type: string
        cluster:
          $ref: '#/components/schemas/storageComplianceDomainCluster'
        nodes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageComplianceDomainNode'
        deployments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageComplianceDomainDeployment'
      title: 'Next available tag: 5'
    storageComplianceDomainCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      title: >-
        These must mirror the tags _exactly_ in cluster.proto for backwards
        compatibility
    storageComplianceDomainDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
      title: >-
        This must mirror the tags _exactly_ in deployment.proto for backwards
        compatibility
    storageComplianceDomainNode:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
      title: >-
        These must mirror the tags _exactly_ in node.proto for backwards
        compatibility
    storageComplianceResultValue:
      type: object
      properties:
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceResultValueEvidence'
        overallState:
          $ref: '#/components/schemas/storageComplianceState'
    storageComplianceRunMetadata:
      type: object
      properties:
        runId:
          type: string
        standardId:
          type: string
        clusterId:
          type: string
        startTimestamp:
          type: string
          format: date-time
        finishTimestamp:
          type: string
          format: date-time
        success:
          type: boolean
        errorMessage:
          type: string
        domainId:
          type: string
      title: 'Next available tag: 5'
    storageComplianceRunResults:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/storageComplianceDomain'
        runMetadata:
          $ref: '#/components/schemas/storageComplianceRunMetadata'
        clusterResults:
          $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
        nodeResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
        deploymentResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
        machineConfigResults:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'
      title: 'Next available tag: 6'
    storageComplianceState:
      type: string
      enum:
        - COMPLIANCE_STATE_UNKNOWN
        - COMPLIANCE_STATE_SKIP
        - COMPLIANCE_STATE_NOTE
        - COMPLIANCE_STATE_SUCCESS
        - COMPLIANCE_STATE_FAILURE
        - COMPLIANCE_STATE_ERROR
      default: COMPLIANCE_STATE_UNKNOWN
    v1ComplianceControl:
      type: object
      properties:
        id:
          type: string
        standardId:
          type: string
        groupId:
          type: string
        name:
          type: string
        description:
          type: string
        implemented:
          type: boolean
        interpretationText:
          type: string
    v1ComplianceControlGroup:
      type: object
      properties:
        id:
          type: string
        standardId:
          type: string
        name:
          type: string
        description:
          type: string
        numImplementedChecks:
          type: integer
          format: int32
    v1ComplianceStandard:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1ComplianceStandardMetadata'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceControlGroup'
        controls:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceControl'
    v1ComplianceStandardMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        numImplementedChecks:
          type: integer
          format: int32
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceStandardMetadataScope'
        dynamic:
          type: boolean
        hideScanResults:
          type: boolean
    v1ComplianceStandardMetadataScope:
      type: string
      enum:
        - UNSET
        - CLUSTER
        - NAMESPACE
        - DEPLOYMENT
        - NODE
      default: UNSET
    v1GetComplianceRunResultsResponse:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/storageComplianceRunResults'
        failedRuns:
          type: array
          items:
            $ref: '#/components/schemas/storageComplianceRunMetadata'
    v1GetComplianceStandardResponse:
      type: object
      properties:
        standard:
          $ref: '#/components/schemas/v1ComplianceStandard'
    v1GetComplianceStandardsResponse:
      type: object
      properties:
        standards:
          type: array
          items:
            $ref: '#/components/schemas/v1ComplianceStandardMetadata'
    BannerConfigSize:
      type: string
      enum:
        - UNSET
        - SMALL
        - MEDIUM
        - LARGE
      default: UNSET
    PlatformComponentConfigRule:
      type: object
      properties:
        name:
          type: string
        namespaceRule:
          $ref: '#/components/schemas/RuleNamespaceRule'
    RuleNamespaceRule:
      type: object
      properties:
        regex:
          type: string
    storageAdministrationEventsConfig:
      type: object
      properties:
        retentionDurationDays:
          type: integer
          format: int64
    storageAlertRetentionConfig:
      type: object
      properties:
        resolvedDeployRetentionDurationDays:
          type: integer
          format: int32
        deletedRuntimeRetentionDurationDays:
          type: integer
          format: int32
          description: >-
            This runtime alert retention configuration takes precedence after
            `allRuntimeRetentionDurationDays`.
        allRuntimeRetentionDurationDays:
          type: integer
          format: int32
          description: >-
            This runtime alert retention configuration has highest precedence.
            All runtime alerts, including attempted

            alerts and deleted deployment alerts, are deleted even if respective
            retention is longer.
        attemptedDeployRetentionDurationDays:
          type: integer
          format: int32
        attemptedRuntimeRetentionDurationDays:
          type: integer
          format: int32
          description: This runtime alert retention configuration has lowest precedence.
    storageBannerConfig:
      type: object
      properties:
        enabled:
          type: boolean
        text:
          type: string
        size:
          $ref: '#/components/schemas/BannerConfigSize'
        color:
          type: string
        backgroundColor:
          type: string
    storageConfig:
      type: object
      properties:
        publicConfig:
          $ref: '#/components/schemas/storagePublicConfig'
        privateConfig:
          $ref: '#/components/schemas/storagePrivateConfig'
        platformComponentConfig:
          $ref: '#/components/schemas/storagePlatformComponentConfig'
    storageDayOption:
      type: object
      properties:
        numDays:
          type: integer
          format: int64
        enabled:
          type: boolean
    storageDecommissionedClusterRetentionConfig:
      type: object
      properties:
        retentionDurationDays:
          type: integer
          format: int32
        ignoreClusterLabels:
          type: object
          additionalProperties:
            type: string
        lastUpdated:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
      title: 'next available tag: 5'
    storageLoginNotice:
      type: object
      properties:
        enabled:
          type: boolean
        text:
          type: string
    storagePlatformComponentConfig:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/PlatformComponentConfigRule'
        needsReevaluation:
          type: boolean
    storagePrivateConfig:
      type: object
      properties:
        DEPRECATEDAlertRetentionDurationDays:
          type: integer
          format: int32
          title: will be deprecated after migration is ready
        alertConfig:
          $ref: '#/components/schemas/storageAlertRetentionConfig'
        imageRetentionDurationDays:
          type: integer
          format: int32
        expiredVulnReqRetentionDurationDays:
          type: integer
          format: int32
        decommissionedClusterRetention:
          $ref: '#/components/schemas/storageDecommissionedClusterRetentionConfig'
        reportRetentionConfig:
          $ref: '#/components/schemas/storageReportRetentionConfig'
        vulnerabilityExceptionConfig:
          $ref: '#/components/schemas/storageVulnerabilityExceptionConfig'
        administrationEventsConfig:
          $ref: '#/components/schemas/storageAdministrationEventsConfig'
      title: next available tag:9
    storagePublicConfig:
      type: object
      properties:
        loginNotice:
          $ref: '#/components/schemas/storageLoginNotice'
        header:
          $ref: '#/components/schemas/storageBannerConfig'
        footer:
          $ref: '#/components/schemas/storageBannerConfig'
        telemetry:
          $ref: '#/components/schemas/storageTelemetryConfiguration'
    storageReportRetentionConfig:
      type: object
      properties:
        historyRetentionDurationDays:
          type: integer
          format: int64
        downloadableReportRetentionDays:
          type: integer
          format: int64
        downloadableReportGlobalRetentionBytes:
          type: integer
          format: int64
      title: 'next available tag: 4'
    storageTelemetryConfiguration:
      type: object
      properties:
        enabled:
          type: boolean
        lastSetTime:
          type: string
          format: date-time
    storageVulnerabilityExceptionConfig:
      type: object
      properties:
        expiryOptions:
          $ref: >-
            #/components/schemas/storageVulnerabilityExceptionConfigExpiryOptions
    storageVulnerabilityExceptionConfigExpiryOptions:
      type: object
      properties:
        dayOptions:
          type: array
          items:
            $ref: '#/components/schemas/storageDayOption'
        fixableCveOptions:
          $ref: >-
            #/components/schemas/storageVulnerabilityExceptionConfigFixableCVEOptions
        customDate:
          type: boolean
        indefinite:
          type: boolean
    storageVulnerabilityExceptionConfigFixableCVEOptions:
      type: object
      properties:
        allFixable:
          type: boolean
        anyFixable:
          type: boolean
    v1DayOption:
      type: object
      properties:
        numDays:
          type: integer
          format: int64
        enabled:
          type: boolean
    v1GetDefaultRedHatLayeredProductsRegexResponse:
      type: object
      properties:
        regex:
          type: string
    v1GetVulnerabilityExceptionConfigResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/v1VulnerabilityExceptionConfig'
    v1PutConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageConfig'
    v1PutPlatformComponentConfigRequest:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/PlatformComponentConfigRule'
    v1UpdateVulnerabilityExceptionConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/v1VulnerabilityExceptionConfig'
    v1UpdateVulnerabilityExceptionConfigResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/v1VulnerabilityExceptionConfig'
    v1VulnerabilityExceptionConfig:
      type: object
      properties:
        expiryOptions:
          $ref: '#/components/schemas/v1VulnerabilityExceptionConfigExpiryOptions'
    v1VulnerabilityExceptionConfigExpiryOptions:
      type: object
      properties:
        dayOptions:
          type: array
          items:
            $ref: '#/components/schemas/v1DayOption'
          description: This allows users to set expiry interval based on number of days.
        fixableCveOptions:
          $ref: '#/components/schemas/v1VulnerabilityExceptionConfigFixableCVEOptions'
        customDate:
          type: boolean
          description: >-
            This option, if true, allows UI to show a custom date picker for
            setting expiry date.
        indefinite:
          type: boolean
    v1VulnerabilityExceptionConfigFixableCVEOptions:
      type: object
      properties:
        allFixable:
          type: boolean
          description: >-
            This options allows users to expire the vulnerability deferral
            request if and only if **all** vulnerabilities

            in the requests become fixable.
        anyFixable:
          type: boolean
          description: >-
            This options allows users to expire the vulnerability deferral
            request if **any** vulnerability

            in the requests become fixable.
    v1GetCertExpiryComponent:
      type: string
      enum:
        - UNKNOWN
        - CENTRAL
        - SCANNER
        - SCANNER_V4
        - CENTRAL_DB
      default: UNKNOWN
    v1GetCertExpiryResponse:
      type: object
      properties:
        expiry:
          type: string
          format: date-time
    v1SuppressCVERequest:
      type: object
      properties:
        cves:
          type: array
          items:
            type: string
          description: >-
            These are (NVD) vulnerability identifiers, `cve` field of
            `storage.CVE`, and *not* the `id` field.

            For example, CVE-2021-44832.
        duration:
          type: string
          description: >-
            In JSON format, the Duration type is encoded as a string rather than
            an object,

            where the string ends in the suffix "s" (indicating seconds) and is
            preceded by the number of seconds,

            with nanoseconds expressed as fractional seconds.

            For example, 3 seconds with 0 nanoseconds should be encoded in JSON
            format as "3s",

            while 3 seconds and 1 nanosecond should be expressed in JSON format
            as "3.000000001s",

            and 3 seconds and 1 microsecond should be expressed in JSON format
            as "3.000001s".
    v1UnsuppressCVERequest:
      type: object
      properties:
        cves:
          type: array
          items:
            type: string
          description: >-
            These are (NVD) vulnerability identifiers, `cve` field of
            `storage.CVE`, and *not* the `id` field.

            For example, CVE-2021-44832.
    DBExportManifestEncodingType:
      type: string
      enum:
        - UNKNOWN
        - UNCOMPREESSED
        - DEFLATED
      default: UNKNOWN
      description: >-
        The encoding of the file data in the restore body, usually for
        compression purposes.
    DBRestoreProcessStatusResumeInfo:
      type: object
      properties:
        pos:
          type: string
          format: int64
    DBRestoreRequestHeaderLocalFileInfo:
      type: object
      properties:
        path:
          type: string
          description: The full path of the file.
        bytesSize:
          type: string
          format: int64
          description: The size of the file, in bytes. 0 if unknown.
      description: >-
        LocalFileInfo provides information about the file on the local machine
        of the user initiating the restore

        process, in order to provide information to other users about ongoing
        restore processes.
    v1DBExportFormat:
      type: object
      properties:
        formatName:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/v1DBExportFormatFile'
      description: >-
        DBExportFormat describes a format (= a collection of files) for the
        database export.
    v1DBExportFormatFile:
      type: object
      properties:
        name:
          type: string
        optional:
          type: boolean
    v1DBExportManifest:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/v1DBExportManifestFile'
      description: >-
        A DB export manifest describes the file contents of a restore request.
        To prevent data loss, a manifest is always

        interpreted as binding, i.e., the server must ensure that it will read
        and make use of every file listed in the

        manifest, otherwise it must reject the request.
    v1DBExportManifestFile:
      type: object
      properties:
        name:
          type: string
          description: >-
            The name of the file. This may or may not be a (relative) file path
            and up to the server to interpret.

            For databases exported as ZIP files, this is the path relative to
            the root of the archive.
        encoding:
          $ref: '#/components/schemas/DBExportManifestEncodingType'
        encodedSize:
          type: string
          format: int64
        decodedSize:
          type: string
          format: int64
        decodedCrc32:
          type: integer
          format: int64
          description: The CRC32 (IEEE) checksum of the decoded(!) data.
      description: A single file in the restore body.
    v1DBRestoreProcessMetadata:
      type: object
      properties:
        id:
          type: string
          description: An ID identifying the restore process. Auto-assigned.
        header:
          $ref: '#/components/schemas/v1DBRestoreRequestHeader'
        startTime:
          type: string
          format: date-time
          description: The time at which the restore process was started.
        initiatingUserName:
          type: string
          description: The user who initiated the database restore process.
      description: >-
        The metadata of an ongoing or completed restore process. This is the
        *static* metadata, which will not change

        (i.e., it is not a status).
    v1DBRestoreProcessStatus:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1DBRestoreProcessMetadata'
        attemptId:
          type: string
        state:
          $ref: '#/components/schemas/v1DBRestoreProcessStatusState'
        resumeInfo:
          $ref: '#/components/schemas/DBRestoreProcessStatusResumeInfo'
        error:
          type: string
          title: only populated when state is COMPLETED
        bytesRead:
          type: string
          format: int64
          title: Payload bytes read so far (approximate)
        filesProcessed:
          type: string
          format: int64
          title: Files processed so far (approximate)
    v1DBRestoreProcessStatusState:
      type: string
      enum:
        - UNKNOWN
        - NOT_STARTED
        - IN_PROGRESS
        - PAUSED
        - COMPLETED
      default: UNKNOWN
      title: '- COMPLETED: successful if error is empty, unsuccessful otherwise'
    v1DBRestoreRequestHeader:
      type: object
      properties:
        formatName:
          type: string
          description: The name of the database export format. Mandatory.
        manifest:
          $ref: '#/components/schemas/v1DBExportManifest'
        localFile:
          $ref: '#/components/schemas/DBRestoreRequestHeaderLocalFileInfo'
    v1GetActiveDBRestoreProcessResponse:
      type: object
      properties:
        activeStatus:
          $ref: '#/components/schemas/v1DBRestoreProcessStatus'
    v1GetDBExportCapabilitiesResponse:
      type: object
      properties:
        formats:
          type: array
          items:
            $ref: '#/components/schemas/v1DBExportFormat'
        supportedEncodings:
          type: array
          items:
            $ref: '#/components/schemas/DBExportManifestEncodingType'
    v1InterruptDBRestoreProcessResponse:
      type: object
      properties:
        resumeInfo:
          $ref: '#/components/schemas/DBRestoreProcessStatusResumeInfo'
    AuthorizationTraceResponseResponseStatus:
      type: string
      enum:
        - UNKNOWN_STATUS
        - SUCCESS
        - FAILURE
      default: UNKNOWN_STATUS
    AuthorizationTraceResponseTrace:
      type: object
      properties:
        scopeCheckerType:
          type: string
        builtIn:
          $ref: '#/components/schemas/TraceBuiltInAuthorizer'
    AuthorizationTraceResponseUserRole:
      type: object
      properties:
        name:
          type: string
        permissions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
        accessScopeName:
          type: string
        accessScope:
          $ref: '#/components/schemas/SimpleAccessScopeRules'
    SimpleAccessScopeRules:
      type: object
      properties:
        includedClusters:
          type: array
          items:
            type: string
        includedNamespaces:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAccessScopeRulesNamespace'
        clusterLabelSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageSetBasedLabelSelector'
        namespaceLabelSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageSetBasedLabelSelector'
      description: |-
        Each element of any repeated field is an individual rule. Rules are
        joined by logical OR: if there exists a rule allowing resource `x`,
        `x` is in the access scope.
    SimpleAccessScopeRulesNamespace:
      type: object
      properties:
        clusterName:
          type: string
          description: Both fields must be set.
        namespaceName:
          type: string
    TraceBuiltInAuthorizer:
      type: object
      properties:
        clustersTotalNum:
          type: integer
          format: int32
        namespacesTotalNum:
          type: integer
          format: int32
        deniedAuthzDecisions:
          type: object
          additionalProperties:
            type: integer
            format: int32
        allowedAuthzDecisions:
          type: object
          additionalProperties:
            type: integer
            format: int32
        effectiveAccessScopes:
          type: object
          additionalProperties:
            type: string
    storageSetBasedLabelSelector:
      type: object
      properties:
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/storageSetBasedLabelSelectorRequirement'
      description: |-
        SetBasedLabelSelector only allows set-based label requirements.

        Next available tag: 3
    storageSetBasedLabelSelectorOperator:
      type: string
      enum:
        - UNKNOWN
        - IN
        - NOT_IN
        - EXISTS
        - NOT_EXISTS
      default: UNKNOWN
    storageSetBasedLabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
        op:
          $ref: '#/components/schemas/storageSetBasedLabelSelectorOperator'
        values:
          type: array
          items:
            type: string
      title: 'Next available tag: 4'
    v1AuthorizationTraceResponse:
      type: object
      properties:
        arrivedAt:
          type: string
          format: date-time
        processedAt:
          type: string
          format: date-time
        request:
          $ref: '#/components/schemas/v1AuthorizationTraceResponseRequest'
        response:
          $ref: '#/components/schemas/v1AuthorizationTraceResponseResponse'
        user:
          $ref: '#/components/schemas/v1AuthorizationTraceResponseUser'
        trace:
          $ref: '#/components/schemas/AuthorizationTraceResponseTrace'
    v1AuthorizationTraceResponseRequest:
      type: object
      properties:
        endpoint:
          type: string
        method:
          type: string
    v1AuthorizationTraceResponseResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AuthorizationTraceResponseResponseStatus'
        error:
          type: string
    v1AuthorizationTraceResponseUser:
      type: object
      properties:
        username:
          type: string
        friendlyName:
          type: string
        aggregatedPermissions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationTraceResponseUserRole'
    v1LogLevelRequest:
      type: object
      properties:
        level:
          type: string
        modules:
          type: array
          items:
            type: string
    v1LogLevelResponse:
      type: object
      properties:
        level:
          type: string
        moduleLevels:
          type: array
          items:
            $ref: '#/components/schemas/v1ModuleLevel'
    v1ModuleLevel:
      type: object
      properties:
        module:
          type: string
        level:
          type: string
    storageDeclarativeConfigHealth:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/storageDeclarativeConfigHealthStatus'
        errorMessage:
          type: string
        resourceName:
          type: string
        resourceType:
          $ref: '#/components/schemas/storageDeclarativeConfigHealthResourceType'
        lastTimestamp:
          type: string
          format: date-time
          description: Timestamp when the current status was set.
    storageDeclarativeConfigHealthResourceType:
      type: string
      enum:
        - CONFIG_MAP
        - ACCESS_SCOPE
        - PERMISSION_SET
        - ROLE
        - AUTH_PROVIDER
        - GROUP
        - NOTIFIER
      default: CONFIG_MAP
    storageDeclarativeConfigHealthStatus:
      type: string
      enum:
        - UNHEALTHY
        - HEALTHY
      default: UNHEALTHY
    v1GetDeclarativeConfigHealthsResponse:
      type: object
      properties:
        healths:
          type: array
          items:
            $ref: '#/components/schemas/storageDeclarativeConfigHealth'
    DelegatedRegistryConfigDelegatedRegistry:
      type: object
      properties:
        path:
          type: string
          title: 'Registry + optional path, ie: quay.example.com/prod'
        clusterId:
          type: string
          title: ID of the cluster to delegate ad-hoc requests to
    DelegatedRegistryConfigEnabledFor:
      type: string
      enum:
        - NONE
        - ALL
        - SPECIFIC
      default: NONE
      title: >-
        - NONE: Scan all images via central services except for images from the
        OCP integrated registry
         - ALL: Scan all images via the secured clusters
         - SPECIFIC: Scan images that match `registries` or are from the OCP integrated registry via the secured clusters
        otherwise scan via central services
    v1DelegatedRegistryCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isValid:
          type: boolean
    v1DelegatedRegistryClustersResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/v1DelegatedRegistryCluster'
    v1DelegatedRegistryConfig:
      type: object
      properties:
        enabledFor:
          $ref: '#/components/schemas/DelegatedRegistryConfigEnabledFor'
        defaultClusterId:
          type: string
          title: >-
            The default cluster to delegate ad-hoc requests to if no match found
            in registries, not used

            if `enabled for` is NONE
        registries:
          type: array
          items:
            $ref: '#/components/schemas/DelegatedRegistryConfigDelegatedRegistry'
          description: >-
            If `enabled for` is NONE registries has no effect.


            If `ALL` registries directs ad-hoc requests to the specified secured
            clusters if the path matches.


            If `SPECIFIC` registries directs ad-hoc requests to the specified
            secured clusters just like with `ALL`,

            but in addition images that match the specified paths will be
            scanned locally by the secured clusters

            (images from the OCP integrated registry are always scanned
            locally). Images that do not match a path

            will be scanned via central services
      description: >-
        DelegatedRegistryConfig determines if and where scan requests are
        delegated to, such as kept in

        central services or sent to particular secured clusters.
    ContainerConfigEnvironmentConfig:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        envVarSource:
          $ref: '#/components/schemas/EnvironmentConfigEnvVarSource'
    ContainerNameAndBaselineStatusBaselineStatus:
      type: string
      enum:
        - INVALID
        - NOT_GENERATED
        - UNLOCKED
        - LOCKED
      default: INVALID
      description: ' - NOT_GENERATED: In current implementation, this is a temporary condition.'
    DeploymentLabelsResponseLabelValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    EnvironmentConfigEnvVarSource:
      type: string
      enum:
        - UNSET
        - RAW
        - SECRET_KEY
        - CONFIG_MAP_KEY
        - FIELD
        - RESOURCE_FIELD
        - UNKNOWN
      default: UNSET
      title: >-
        For any update to EnvVarSource, please also update
        'ui/src/messages/common.js'
    ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageListDeployment'
        baselineStatuses:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerNameAndBaselineStatus'
    PortConfigExposureInfo:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/PortConfigExposureLevel'
        serviceName:
          type: string
          title: only set if level is not HOST
        serviceId:
          type: string
        serviceClusterIp:
          type: string
        servicePort:
          type: integer
          format: int32
        nodePort:
          type: integer
          format: int32
          title: only set if level is HOST, NODE, EXTERNAL or ROUTE
        externalIps:
          type: array
          items:
            type: string
          title: only set if level is EXTERNAL
        externalHostnames:
          type: array
          items:
            type: string
          title: only set if level is EXTERNAL or ROUTE
    PortConfigExposureLevel:
      type: string
      enum:
        - UNSET
        - EXTERNAL
        - NODE
        - INTERNAL
        - HOST
        - ROUTE
      default: UNSET
    ResultFactor:
      type: object
      properties:
        message:
          type: string
        url:
          type: string
    SeccompProfileProfileType:
      type: string
      enum:
        - UNCONFINED
        - RUNTIME_DEFAULT
        - LOCALHOST
      default: UNCONFINED
    SecurityContextSELinux:
      type: object
      properties:
        user:
          type: string
        role:
          type: string
        type:
          type: string
        level:
          type: string
    SecurityContextSeccompProfile:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SeccompProfileProfileType'
        localhostProfile:
          type: string
    VolumeMountPropagation:
      type: string
      enum:
        - NONE
        - HOST_TO_CONTAINER
        - BIDIRECTIONAL
      default: NONE
    storageContainer:
      type: object
      properties:
        id:
          type: string
        config:
          $ref: '#/components/schemas/storageContainerConfig'
        image:
          $ref: '#/components/schemas/storageContainerImage'
        securityContext:
          $ref: '#/components/schemas/storageSecurityContext'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/storageVolume'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storagePortConfig'
          title: Policies use the port config on the top-level deployment.
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedSecret'
        resources:
          $ref: '#/components/schemas/storageResources'
        name:
          type: string
        livenessProbe:
          $ref: '#/components/schemas/storageLivenessProbe'
        readinessProbe:
          $ref: '#/components/schemas/storageReadinessProbe'
    storageContainerConfig:
      type: object
      properties:
        env:
          type: array
          items:
            $ref: '#/components/schemas/ContainerConfigEnvironmentConfig'
        command:
          type: array
          items:
            type: string
        args:
          type: array
          items:
            type: string
        directory:
          type: string
        user:
          type: string
        uid:
          type: string
          format: int64
        appArmorProfile:
          type: string
    storageContainerNameAndBaselineStatus:
      type: object
      properties:
        containerName:
          type: string
        baselineStatus:
          $ref: '#/components/schemas/ContainerNameAndBaselineStatusBaselineStatus'
        anomalousProcessesExecuted:
          type: boolean
      description: |-
        `ContainerNameAndBaselineStatus` represents a cached result
        of process evaluation on a specific container name.
    storageDeployment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        hash:
          type: string
          format: uint64
        type:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
        orchestratorComponent:
          type: boolean
        replicas:
          type: string
          format: int64
        labels:
          type: object
          additionalProperties:
            type: string
        podLabels:
          type: object
          additionalProperties:
            type: string
        labelSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        created:
          type: string
          format: date-time
        clusterId:
          type: string
        clusterName:
          type: string
        containers:
          type: array
          items:
            $ref: '#/components/schemas/storageContainer'
        annotations:
          type: object
          additionalProperties:
            type: string
        priority:
          type: string
          format: int64
        inactive:
          type: boolean
        imagePullSecrets:
          type: array
          items:
            type: string
        serviceAccount:
          type: string
        serviceAccountPermissionLevel:
          $ref: '#/components/schemas/storagePermissionLevel'
        automountServiceAccountToken:
          type: boolean
        hostNetwork:
          type: boolean
        hostPid:
          type: boolean
        hostIpc:
          type: boolean
        runtimeClass:
          type: string
        tolerations:
          type: array
          items:
            $ref: '#/components/schemas/storageToleration'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storagePortConfig'
        stateTimestamp:
          type: string
          format: int64
          title: Internal use only
        riskScore:
          type: number
          format: float
        platformComponent:
          type: boolean
      title: 'Next available tag: 36'
    storageEmbeddedSecret:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
    storageLabelSelector:
      type: object
      properties:
        matchLabels:
          type: object
          additionalProperties:
            type: string
          description: |-
            This is actually a oneof, but we can't make it one due to backwards
            compatibility constraints.
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/storageLabelSelectorRequirement'
      description: 'Next available tag: 3'
      title: |-
        Label selector components are joined with logical AND, see
            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    storageLabelSelectorOperator:
      type: string
      enum:
        - UNKNOWN
        - IN
        - NOT_IN
        - EXISTS
        - NOT_EXISTS
      default: UNKNOWN
    storageLabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
        op:
          $ref: '#/components/schemas/storageLabelSelectorOperator'
        values:
          type: array
          items:
            type: string
      title: 'Next available tag: 4'
    storageListDeployment:
      type: object
      properties:
        id:
          type: string
        hash:
          type: string
          format: uint64
        name:
          type: string
        cluster:
          type: string
        clusterId:
          type: string
        namespace:
          type: string
        created:
          type: string
          format: date-time
        priority:
          type: string
          format: int64
      title: 'Next available tag: 9'
    storageLivenessProbe:
      type: object
      properties:
        defined:
          type: boolean
    storagePermissionLevel:
      type: string
      enum:
        - UNSET
        - NONE
        - DEFAULT
        - ELEVATED_IN_NAMESPACE
        - ELEVATED_CLUSTER_WIDE
        - CLUSTER_ADMIN
      default: UNSET
      title: |-
        For any update to PermissionLevel, also update:
        - pkg/searchbasedpolicies/builders/k8s_rbac.go
        - ui/src/messages/common.js
    storagePortConfig:
      type: object
      properties:
        name:
          type: string
        containerPort:
          type: integer
          format: int32
        protocol:
          type: string
        exposure:
          $ref: '#/components/schemas/PortConfigExposureLevel'
        exposedPort:
          type: integer
          format: int32
        exposureInfos:
          type: array
          items:
            $ref: '#/components/schemas/PortConfigExposureInfo'
      title: 'Next Available Tag: 6'
    storageReadinessProbe:
      type: object
      properties:
        defined:
          type: boolean
    storageResources:
      type: object
      properties:
        cpuCoresRequest:
          type: number
          format: float
        cpuCoresLimit:
          type: number
          format: float
        memoryMbRequest:
          type: number
          format: float
        memoryMbLimit:
          type: number
          format: float
    storageRisk:
      type: object
      properties:
        id:
          type: string
        subject:
          $ref: '#/components/schemas/storageRiskSubject'
        score:
          type: number
          format: float
        results:
          type: array
          items:
            $ref: '#/components/schemas/storageRiskResult'
    storageRiskResult:
      type: object
      properties:
        name:
          type: string
        factors:
          type: array
          items:
            $ref: '#/components/schemas/ResultFactor'
        score:
          type: number
          format: float
    storageRiskSubject:
      type: object
      properties:
        id:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        type:
          $ref: '#/components/schemas/storageRiskSubjectType'
    storageRiskSubjectType:
      type: string
      enum:
        - UNKNOWN
        - DEPLOYMENT
        - NAMESPACE
        - CLUSTER
        - NODE
        - NODE_COMPONENT
        - IMAGE
        - IMAGE_COMPONENT
        - SERVICEACCOUNT
      default: UNKNOWN
      title: 'Next tag: 9'
    storageSecurityContext:
      type: object
      properties:
        privileged:
          type: boolean
        selinux:
          $ref: '#/components/schemas/SecurityContextSELinux'
        dropCapabilities:
          type: array
          items:
            type: string
        addCapabilities:
          type: array
          items:
            type: string
        readOnlyRootFilesystem:
          type: boolean
        seccompProfile:
          $ref: '#/components/schemas/SecurityContextSeccompProfile'
        allowPrivilegeEscalation:
          type: boolean
    storageTaintEffect:
      type: string
      enum:
        - UNKNOWN_TAINT_EFFECT
        - NO_SCHEDULE_TAINT_EFFECT
        - PREFER_NO_SCHEDULE_TAINT_EFFECT
        - NO_EXECUTE_TAINT_EFFECT
      default: UNKNOWN_TAINT_EFFECT
    storageToleration:
      type: object
      properties:
        key:
          type: string
        operator:
          $ref: '#/components/schemas/storageTolerationOperator'
        value:
          type: string
        taintEffect:
          $ref: '#/components/schemas/storageTaintEffect'
    storageTolerationOperator:
      type: string
      enum:
        - TOLERATION_OPERATION_UNKNOWN
        - TOLERATION_OPERATOR_EXISTS
        - TOLERATION_OPERATOR_EQUAL
      default: TOLERATION_OPERATION_UNKNOWN
    storageVolume:
      type: object
      properties:
        name:
          type: string
        source:
          type: string
        destination:
          type: string
        readOnly:
          type: boolean
        type:
          type: string
        mountPropagation:
          $ref: '#/components/schemas/VolumeMountPropagation'
    v1CountDeploymentsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DeploymentLabelsResponse:
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DeploymentLabelsResponseLabelValues'
        values:
          type: array
          items:
            type: string
    v1ExportDeploymentResponse:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageDeployment'
    v1GetDeploymentWithRiskResponse:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageDeployment'
        risk:
          $ref: '#/components/schemas/storageRisk'
    v1ListDeploymentsResponse:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/storageListDeployment'
    v1ListDeploymentsWithProcessInfoResponse:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: >-
              #/components/schemas/ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo
    DeployDetectionResponseRun:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/storageAlert'
    v1BuildDetectionRequest:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageContainerImage'
        imageName:
          type: string
        noExternalMetadata:
          type: boolean
        sendNotifications:
          type: boolean
        force:
          type: boolean
        policyCategories:
          type: array
          items:
            type: string
        cluster:
          type: string
          description: Cluster to delegate scan to, may be the cluster's name or ID.
    v1BuildDetectionResponse:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/storageAlert'
    v1DeployDetectionRemark:
      type: object
      properties:
        name:
          type: string
        permissionLevel:
          type: string
        appliedNetworkPolicies:
          type: array
          items:
            type: string
    v1DeployDetectionRequest:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageDeployment'
        noExternalMetadata:
          type: boolean
        enforcementOnly:
          type: boolean
        clusterId:
          type: string
    v1DeployDetectionResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: '#/components/schemas/DeployDetectionResponseRun'
        ignoredObjectRefs:
          type: array
          items:
            type: string
          description: >-
            The reference will be in the format:
            namespace/name[<group>/<version>, Kind=<kind>].
        remarks:
          type: array
          items:
            $ref: '#/components/schemas/v1DeployDetectionRemark'
    v1DeployYAMLDetectionRequest:
      type: object
      properties:
        yaml:
          type: string
        noExternalMetadata:
          type: boolean
        enforcementOnly:
          type: boolean
        force:
          type: boolean
        policyCategories:
          type: array
          items:
            type: string
        cluster:
          type: string
          description: Cluster to delegate scan to, may be the cluster's name or ID.
        namespace:
          type: string
    DiscoveredClusterMetadataType:
      type: string
      enum:
        - UNSPECIFIED
        - AKS
        - ARO
        - EKS
        - GKE
        - OCP
        - OSD
        - ROSA
      default: UNSPECIFIED
    MetadataProviderType:
      type: string
      enum:
        - PROVIDER_TYPE_UNSPECIFIED
        - PROVIDER_TYPE_AWS
        - PROVIDER_TYPE_GCP
        - PROVIDER_TYPE_AZURE
      default: PROVIDER_TYPE_UNSPECIFIED
    v1CountDiscoveredClustersResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DiscoveredCluster:
      type: object
      properties:
        id:
          type: string
          description: >-
            UUIDv5 generated deterministically from the tuple (metadata.id,
            metadata.type, source.id).
        metadata:
          $ref: '#/components/schemas/v1DiscoveredClusterMetadata'
        status:
          $ref: '#/components/schemas/v1DiscoveredClusterStatus'
        source:
          $ref: '#/components/schemas/v1DiscoveredClusterCloudSource'
      description: DiscoveredCluster represents a cluster discovered from a cloud source.
    v1DiscoveredClusterCloudSource:
      type: object
      properties:
        id:
          type: string
    v1DiscoveredClusterMetadata:
      type: object
      properties:
        id:
          type: string
          description: >-
            Represents a unique ID under which the cluster is registered with
            the

            cloud provider. Matches storage.ClusterMetadata.id for secured
            clusters.
        name:
          type: string
          description: >-
            Represents the name under which the cluster is registered with the

            cloud provider. Matches storage.ClusterMetadata.name for secured
            clusters.
        type:
          $ref: '#/components/schemas/DiscoveredClusterMetadataType'
        providerType:
          $ref: '#/components/schemas/MetadataProviderType'
        region:
          type: string
          description: The region as reported by the cloud provider.
        firstDiscoveredAt:
          type: string
          format: date-time
          description: >-
            Timestamp at which the cluster was first discovered by the cloud
            source.
    v1DiscoveredClusterStatus:
      type: string
      enum:
        - STATUS_UNSPECIFIED
        - STATUS_SECURED
        - STATUS_UNSECURED
      default: STATUS_UNSPECIFIED
      description: |2-
         - STATUS_UNSPECIFIED: The status of the cluster is unknown. May occur if a secured cluster
        is missing the metadata for a possible match.
         - STATUS_SECURED: The discovered cluster was matched with a secured cluster.
         - STATUS_UNSECURED: The discovered cluster was not matched with a secured cluster.
    v1DiscoveredClustersFilter:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: Matches discovered clusters of specific names.
        types:
          type: array
          items:
            $ref: '#/components/schemas/DiscoveredClusterMetadataType'
          description: Matches discovered clusters of specific types.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/v1DiscoveredClusterStatus'
          description: Matches discovered clusters of specific statuses.
        sourceIds:
          type: array
          items:
            type: string
          description: Matches discovered clusters of specific cloud source IDs.
    v1GetDiscoveredClusterResponse:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/v1DiscoveredCluster'
    v1ListDiscoveredClustersResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/v1DiscoveredCluster'
    v1FeatureFlag:
      type: object
      properties:
        name:
          type: string
        envVar:
          type: string
        enabled:
          type: boolean
    v1GetFeatureFlagsResponse:
      type: object
      properties:
        featureFlags:
          type: array
          items:
            $ref: '#/components/schemas/v1FeatureFlag'
    storageGroup:
      type: object
      properties:
        props:
          $ref: '#/components/schemas/storageGroupProperties'
        roleName:
          type: string
          description: This is the name of the role that will apply to users in this group.
      description: 'Group is a GroupProperties : Role mapping.'
    storageGroupProperties:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for group properties and respectively the group.
        traits:
          $ref: '#/components/schemas/storageTraits'
        authProviderId:
          type: string
        key:
          type: string
        value:
          type: string
      description: >-
        GroupProperties defines the properties of a group. Groups apply to users
        when

        their properties match. For instance:
          - If GroupProperties has only an auth_provider_id, then that group applies
            to all users logged in with that auth provider.
          - If GroupProperties in addition has a claim key, then it applies to all
            users with that auth provider and the claim key, etc.
        Note: Changes to GroupProperties may require changes to
        v1.DeleteGroupRequest.
    v1GetGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/storageGroup'
      title: |-
        API for updating Groups and getting users.
        Next Available Tag: 2
    v1GroupBatchUpdateRequest:
      type: object
      properties:
        previousGroups:
          type: array
          items:
            $ref: '#/components/schemas/storageGroup'
          description: >-
            Previous groups are the groups expected to be present in the store.

            Performs a diff on the GroupProperties present in previous_groups
            and required_groups:

            1) if in previous_groups but not required_groups, it gets deleted.

            2) if in previous_groups and required_groups, it gets updated.

            3) if not in previous_groups but in required_groups, it gets added.
        requiredGroups:
          type: array
          items:
            $ref: '#/components/schemas/storageGroup'
          description: >-
            Required groups are the groups we want to mutate the previous groups
            into.
        force:
          type: boolean
      title: >-
        GroupBatchUpdateRequest is an in transaction batch update to the groups
        present.

        Next Available Tag: 3
    v1Preferences:
      type: object
      properties:
        maxGrpcReceiveSizeBytes:
          type: string
          format: uint64
    imageSBOMRequest:
      type: object
      properties:
        imageName:
          type: string
          description: Image name and reference. (e.g. nginx:latest or nginx@sha256:...)
        force:
          type: boolean
          description: >-
            Bypass Central's cache for the image and force a new pull from the
            Scanner
          default: false
      required:
        - imageName
    SBOM-SPDX23-Document:
      description: >-
        SPDX 2.3 document, refer to https://spdx.github.io/spdx-spec/v2.3/ for
        more details.
      type: object
      properties:
        spdxVersion:
          type: string
          example: SPDX-2.3
        dataLicense:
          type: string
          example: CC0-1.0
        SPDXID:
          type: string
          example: SPDXRef-DOCUMENT
        name:
          type: string
          example: >-
            sha256:2107993405718600b5e53aae90c78647eff44086e6605862fc69389a4f9d1a09
        documentNamespace:
          type: string
          example: >-
            https://quay.io/rhacs-eng/scanner-v4-665956d1-21dc-4f7c-ae96-48f7cdd460ff
        creationInfo:
          type: object
          properties:
            created:
              type: string
              example: '2025-02-18T16:33:54Z'
            creators:
              type: array
              items:
                type: string
                example:
                  - 'Tool: Claircore-<version>'
                  - 'Tool: scanner-v4-matcher-<version>'
        packages:
          type: array
          items:
            type: object
            properties:
              SPDXID:
                example: SPDXRef-Package-<id>
              name:
                type: string
                example: example-package
              versionInfo:
                type: string
                example: example-version
              packageFileName:
                type: string
                example: path/to/example/file
              downloadLocation:
                type: string
                example: NOASSERTION
              filesAnalyzed:
                type: boolean
                example: true
              primaryPackagePurpose:
                type: string
                example: APPLICATION
        relationships:
          type: array
          items:
            type: object
            properties:
              spdxElementId:
                type: string
                example: SPDXRef-Package-<id>
              relatedSpdxElement:
                type: string
                example: SPDXRef-Repository-<id>
              relationshipType:
                type: string
                example: CONTAINED_BY
    ECRConfigAuthorizationData:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        expiresAt:
          type: string
          format: date-time
      description: |-
        An authorization data represents the IAM authentication credentials and
        can be used to access any Amazon ECR registry that the IAM principal has
        access to.
    ImageIntegrationServicePutImageIntegrationBody:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/storageImageIntegrationCategory'
        clairify:
          $ref: '#/components/schemas/storageClairifyConfig'
        scannerV4:
          $ref: '#/components/schemas/storageScannerV4Config'
        docker:
          $ref: '#/components/schemas/storageDockerConfig'
        quay:
          $ref: '#/components/schemas/storageQuayConfig'
        ecr:
          $ref: '#/components/schemas/storageECRConfig'
        google:
          $ref: '#/components/schemas/storageGoogleConfig'
        clair:
          $ref: '#/components/schemas/storageClairConfig'
        clairV4:
          $ref: '#/components/schemas/storageClairV4Config'
        ibm:
          $ref: '#/components/schemas/storageIBMRegistryConfig'
        azure:
          $ref: '#/components/schemas/storageAzureConfig'
        autogenerated:
          type: boolean
        clusterId:
          type: string
        skipTestIntegration:
          type: boolean
        source:
          $ref: '#/components/schemas/storageImageIntegrationSource'
      title: 'Next Tag: 25'
    ImageIntegrationServiceUpdateImageIntegrationBody:
      type: object
      properties:
        config:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            categories:
              type: array
              items:
                $ref: '#/components/schemas/storageImageIntegrationCategory'
            clairify:
              $ref: '#/components/schemas/storageClairifyConfig'
            scannerV4:
              $ref: '#/components/schemas/storageScannerV4Config'
            docker:
              $ref: '#/components/schemas/storageDockerConfig'
            quay:
              $ref: '#/components/schemas/storageQuayConfig'
            ecr:
              $ref: '#/components/schemas/storageECRConfig'
            google:
              $ref: '#/components/schemas/storageGoogleConfig'
            clair:
              $ref: '#/components/schemas/storageClairConfig'
            clairV4:
              $ref: '#/components/schemas/storageClairV4Config'
            ibm:
              $ref: '#/components/schemas/storageIBMRegistryConfig'
            azure:
              $ref: '#/components/schemas/storageAzureConfig'
            autogenerated:
              type: boolean
            clusterId:
              type: string
            skipTestIntegration:
              type: boolean
            source:
              $ref: '#/components/schemas/storageImageIntegrationSource'
          title: 'Next Tag: 25'
        updatePassword:
          type: boolean
          description: >-
            When false, use the stored credentials of an existing image
            integration given its ID.
    QuayConfigRobotAccount:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          description: >-
            The server will mask the value of this password in responses and
            logs.
      title: >-
        Robot account is Quay's named tokens that can be granted permissions on
        multiple repositories under an organization.

        It's Quay's recommended authentication model when possible (i.e.
        registry integration)
    storageAzureConfig:
      type: object
      properties:
        endpoint:
          type: string
        username:
          type: string
        password:
          type: string
          description: >-
            The password for the integration. The server will mask the value of
            this credential in responses and logs.
        wifEnabled:
          type: boolean
          description: >-
            Enables authentication with short-lived tokens using Azure managed
            identities or Azure workload identities.
      description: >-
        Azure container registry configuration. Used by integrations of type
        "azure".
    storageClairConfig:
      type: object
      properties:
        endpoint:
          type: string
        insecure:
          type: boolean
    storageClairV4Config:
      type: object
      properties:
        endpoint:
          type: string
        insecure:
          type: boolean
    storageClairifyConfig:
      type: object
      properties:
        endpoint:
          type: string
        grpcEndpoint:
          type: string
        numConcurrentScans:
          type: integer
          format: int32
    storageDockerConfig:
      type: object
      properties:
        endpoint:
          type: string
        username:
          type: string
        password:
          type: string
          description: >-
            The password for the integration. The server will mask the value of
            this credential in responses and logs.
        insecure:
          type: boolean
      description: >-
        Docker registry configuration. Used by integrations of type "docker" and
        other docker compliant registries without dedicated configuration type.


        Use of type "azure" with `DockerConfig` has been deprecated in 4.7. Use
        `AzureConfig` instead.
    storageECRConfig:
      type: object
      properties:
        registryId:
          type: string
        accessKeyId:
          type: string
          description: >-
            The access key ID for the integration. The server will mask the
            value of this credential in responses and logs.
        secretAccessKey:
          type: string
          description: >-
            The secret access key for the integration. The server will mask the
            value of this credential in responses and logs.
        region:
          type: string
        useIam:
          type: boolean
        endpoint:
          type: string
        useAssumeRole:
          type: boolean
        assumeRoleId:
          type: string
        assumeRoleExternalId:
          type: string
        authorizationData:
          $ref: '#/components/schemas/ECRConfigAuthorizationData'
    storageGoogleConfig:
      type: object
      properties:
        endpoint:
          type: string
        serviceAccount:
          type: string
          description: >-
            The service account for the integration. The server will mask the
            value of this credential in responses and logs.
        project:
          type: string
        wifEnabled:
          type: boolean
    storageIBMRegistryConfig:
      type: object
      properties:
        endpoint:
          type: string
        apiKey:
          type: string
          description: >-
            The API key for the integration. The server will mask the value of
            this credential in responses and logs.
    storageImageIntegration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/storageImageIntegrationCategory'
        clairify:
          $ref: '#/components/schemas/storageClairifyConfig'
        scannerV4:
          $ref: '#/components/schemas/storageScannerV4Config'
        docker:
          $ref: '#/components/schemas/storageDockerConfig'
        quay:
          $ref: '#/components/schemas/storageQuayConfig'
        ecr:
          $ref: '#/components/schemas/storageECRConfig'
        google:
          $ref: '#/components/schemas/storageGoogleConfig'
        clair:
          $ref: '#/components/schemas/storageClairConfig'
        clairV4:
          $ref: '#/components/schemas/storageClairV4Config'
        ibm:
          $ref: '#/components/schemas/storageIBMRegistryConfig'
        azure:
          $ref: '#/components/schemas/storageAzureConfig'
        autogenerated:
          type: boolean
        clusterId:
          type: string
        skipTestIntegration:
          type: boolean
        source:
          $ref: '#/components/schemas/storageImageIntegrationSource'
      title: 'Next Tag: 25'
    storageImageIntegrationCategory:
      type: string
      enum:
        - REGISTRY
        - SCANNER
        - NODE_SCANNER
      default: REGISTRY
      description: >2-
         - NODE_SCANNER: Image and Node integrations are currently done on the same form in the UI
        so the image integration is also currently used for node integrations.

        This decision was made because we currently only support one node
        scanner (our scanner).
    storageImageIntegrationSource:
      type: object
      properties:
        clusterId:
          type: string
        namespace:
          type: string
        imagePullSecretName:
          type: string
    storageQuayConfig:
      type: object
      properties:
        endpoint:
          type: string
        oauthToken:
          type: string
          description: >-
            The OAuth token for the integration. Required if this is a scanner
            integration. The server will mask the value of this credential in
            responses and logs.
        insecure:
          type: boolean
        registryRobotCredentials:
          $ref: '#/components/schemas/QuayConfigRobotAccount'
    storageScannerV4Config:
      type: object
      properties:
        numConcurrentScans:
          type: integer
          format: int32
        indexerEndpoint:
          type: string
        matcherEndpoint:
          type: string
    v1GetImageIntegrationsResponse:
      type: object
      properties:
        integrations:
          type: array
          items:
            $ref: '#/components/schemas/storageImageIntegration'
    v1UpdateImageIntegrationRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageImageIntegration'
        updatePassword:
          type: boolean
          description: >-
            When false, use the stored credentials of an existing image
            integration given its ID.
    CVSSV2AccessComplexity:
      type: string
      enum:
        - ACCESS_HIGH
        - ACCESS_MEDIUM
        - ACCESS_LOW
      default: ACCESS_HIGH
    CVSSV2Authentication:
      type: string
      enum:
        - AUTH_MULTIPLE
        - AUTH_SINGLE
        - AUTH_NONE
      default: AUTH_MULTIPLE
    CVSSV3Complexity:
      type: string
      enum:
        - COMPLEXITY_LOW
        - COMPLEXITY_HIGH
      default: COMPLEXITY_LOW
    CVSSV3Privileges:
      type: string
      enum:
        - PRIVILEGE_NONE
        - PRIVILEGE_LOW
        - PRIVILEGE_HIGH
      default: PRIVILEGE_NONE
    CVSSV3UserInteraction:
      type: string
      enum:
        - UI_NONE
        - UI_REQUIRED
      default: UI_NONE
    EmbeddedVulnerabilityVulnerabilityType:
      type: string
      enum:
        - UNKNOWN_VULNERABILITY
        - IMAGE_VULNERABILITY
        - K8S_VULNERABILITY
        - ISTIO_VULNERABILITY
        - NODE_VULNERABILITY
        - OPENSHIFT_VULNERABILITY
      default: UNKNOWN_VULNERABILITY
    EnvironmentList:
      type: object
      properties:
        environments:
          type: array
          items:
            $ref: '#/components/schemas/v4Environment'
    WatchImageResponseErrorType:
      type: string
      enum:
        - NO_ERROR
        - INVALID_IMAGE_NAME
        - NO_VALID_INTEGRATION
        - SCAN_FAILED
      default: NO_ERROR
    scannerV1Components:
      type: object
      properties:
        namespace:
          type: string
        osComponents:
          type: array
          items:
            $ref: '#/components/schemas/scannerV1OSComponent'
        rhelComponents:
          type: array
          items:
            $ref: '#/components/schemas/scannerV1RHELComponent'
        languageComponents:
          type: array
          items:
            $ref: '#/components/schemas/scannerV1LanguageComponent'
        rhelContentSets:
          type: array
          items:
            type: string
    scannerV1Executable:
      type: object
      properties:
        path:
          type: string
        requiredFeatures:
          type: array
          items:
            $ref: '#/components/schemas/scannerV1FeatureNameVersion'
    scannerV1FeatureNameVersion:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    scannerV1JavaComponent:
      type: object
      properties:
        implementationVersion:
          type: string
        mavenVersion:
          type: string
        origins:
          type: array
          items:
            type: string
        specificationVersion:
          type: string
        bundleName:
          type: string
    scannerV1LanguageComponent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/scannerV1SourceType'
        name:
          type: string
        version:
          type: string
        location:
          type: string
        java:
          $ref: '#/components/schemas/scannerV1JavaComponent'
        python:
          $ref: '#/components/schemas/scannerV1PythonComponent'
        addedBy:
          type: string
    scannerV1Note:
      type: string
      enum:
        - OS_CVES_UNAVAILABLE
        - OS_CVES_STALE
        - LANGUAGE_CVES_UNAVAILABLE
        - CERTIFIED_RHEL_SCAN_UNAVAILABLE
      default: OS_CVES_UNAVAILABLE
    scannerV1OSComponent:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        version:
          type: string
        addedBy:
          type: string
        executables:
          type: array
          items:
            $ref: '#/components/schemas/scannerV1Executable'
    scannerV1PythonComponent:
      type: object
      properties:
        homepage:
          type: string
        authorEmail:
          type: string
        downloadUrl:
          type: string
        summary:
          type: string
        description:
          type: string
    scannerV1RHELComponent:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        namespace:
          type: string
        version:
          type: string
        arch:
          type: string
        module:
          type: string
        cpes:
          type: array
          items:
            type: string
        addedBy:
          type: string
        executables:
          type: array
          items:
            $ref: '#/components/schemas/scannerV1Executable'
    scannerV1SourceType:
      type: string
      enum:
        - UNSET_SOURCE_TYPE
        - JAVA
        - PYTHON
        - NPM
        - GEM
        - DOTNETCORERUNTIME
      default: UNSET_SOURCE_TYPE
    storageAdvisory:
      type: object
      properties:
        name:
          type: string
        link:
          type: string
    storageCVSSScore:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/storageSource'
        url:
          type: string
        cvssv2:
          $ref: '#/components/schemas/storageCVSSV2'
        cvssv3:
          $ref: '#/components/schemas/storageCVSSV3'
    storageCVSSV2:
      type: object
      properties:
        vector:
          type: string
        attackVector:
          $ref: '#/components/schemas/storageCVSSV2AttackVector'
        accessComplexity:
          $ref: '#/components/schemas/CVSSV2AccessComplexity'
        authentication:
          $ref: '#/components/schemas/CVSSV2Authentication'
        confidentiality:
          $ref: '#/components/schemas/storageCVSSV2Impact'
        integrity:
          $ref: '#/components/schemas/storageCVSSV2Impact'
        availability:
          $ref: '#/components/schemas/storageCVSSV2Impact'
        exploitabilityScore:
          type: number
          format: float
        impactScore:
          type: number
          format: float
        score:
          type: number
          format: float
        severity:
          $ref: '#/components/schemas/storageCVSSV2Severity'
    storageCVSSV2AttackVector:
      type: string
      enum:
        - ATTACK_LOCAL
        - ATTACK_ADJACENT
        - ATTACK_NETWORK
      default: ATTACK_LOCAL
    storageCVSSV2Impact:
      type: string
      enum:
        - IMPACT_NONE
        - IMPACT_PARTIAL
        - IMPACT_COMPLETE
      default: IMPACT_NONE
    storageCVSSV2Severity:
      type: string
      enum:
        - UNKNOWN
        - LOW
        - MEDIUM
        - HIGH
      default: UNKNOWN
    storageCVSSV3:
      type: object
      properties:
        vector:
          type: string
        exploitabilityScore:
          type: number
          format: float
        impactScore:
          type: number
          format: float
        attackVector:
          $ref: '#/components/schemas/storageCVSSV3AttackVector'
        attackComplexity:
          $ref: '#/components/schemas/CVSSV3Complexity'
        privilegesRequired:
          $ref: '#/components/schemas/CVSSV3Privileges'
        userInteraction:
          $ref: '#/components/schemas/CVSSV3UserInteraction'
        scope:
          $ref: '#/components/schemas/storageCVSSV3Scope'
        confidentiality:
          $ref: '#/components/schemas/storageCVSSV3Impact'
        integrity:
          $ref: '#/components/schemas/storageCVSSV3Impact'
        availability:
          $ref: '#/components/schemas/storageCVSSV3Impact'
        score:
          type: number
          format: float
        severity:
          $ref: '#/components/schemas/storageCVSSV3Severity'
    storageCVSSV3AttackVector:
      type: string
      enum:
        - ATTACK_LOCAL
        - ATTACK_ADJACENT
        - ATTACK_NETWORK
        - ATTACK_PHYSICAL
      default: ATTACK_LOCAL
    storageCVSSV3Impact:
      type: string
      enum:
        - IMPACT_NONE
        - IMPACT_LOW
        - IMPACT_HIGH
      default: IMPACT_NONE
    storageCVSSV3Scope:
      type: string
      enum:
        - UNCHANGED
        - CHANGED
      default: UNCHANGED
    storageCVSSV3Severity:
      type: string
      enum:
        - UNKNOWN
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
      default: UNKNOWN
    storageCosignSignature:
      type: object
      properties:
        rawSignature:
          type: string
          format: byte
        signaturePayload:
          type: string
          format: byte
        certPem:
          type: string
          format: byte
        certChainPem:
          type: string
          format: byte
        rekorBundle:
          type: string
          format: byte
    storageDataSource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mirror:
          type: string
    storageEPSS:
      type: object
      properties:
        epssProbability:
          type: number
          format: float
        epssPercentile:
          type: number
          format: float
      title: >-
        EPSS Score stores two epss metrics returned by scanner - epss
        probability and epss percentile
    storageEmbeddedImageScanComponent:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        license:
          $ref: '#/components/schemas/storageLicense'
        vulns:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedVulnerability'
        layerIndex:
          type: integer
          format: int32
        priority:
          type: string
          format: int64
        source:
          $ref: '#/components/schemas/storageSourceType'
        location:
          type: string
        topCvss:
          type: number
          format: float
        riskScore:
          type: number
          format: float
        fixedBy:
          type: string
          description: >-
            Component version that fixes all the fixable vulnerabilities in this
            component.
        executables:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedImageScanComponentExecutable'
          title: >-
            Values are cleared after moving to cache, remove them from the grpc
            return as well
        architecture:
          type: string
      title: 'Next Tag: 14'
    storageEmbeddedImageScanComponentExecutable:
      type: object
      properties:
        path:
          type: string
        dependencies:
          type: array
          items:
            type: string
    storageEmbeddedVulnerability:
      type: object
      properties:
        cve:
          type: string
        advisory:
          $ref: '#/components/schemas/storageAdvisory'
        cvss:
          type: number
          format: float
        summary:
          type: string
        link:
          type: string
        fixedBy:
          type: string
        scoreVersion:
          $ref: '#/components/schemas/storageEmbeddedVulnerabilityScoreVersion'
        cvssV2:
          $ref: '#/components/schemas/storageCVSSV2'
        cvssV3:
          $ref: '#/components/schemas/storageCVSSV3'
        publishedOn:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        vulnerabilityType:
          $ref: '#/components/schemas/EmbeddedVulnerabilityVulnerabilityType'
        vulnerabilityTypes:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedVulnerabilityVulnerabilityType'
        suppressed:
          type: boolean
        suppressActivation:
          type: string
          format: date-time
        suppressExpiry:
          type: string
          format: date-time
        firstSystemOccurrence:
          type: string
          format: date-time
          description: >-
            Time when the CVE was first seen, for this specific distro, in the
            system.
        firstImageOccurrence:
          type: string
          format: date-time
          description: Time when the CVE was first seen in this image.
        severity:
          $ref: '#/components/schemas/storageVulnerabilitySeverity'
        state:
          $ref: '#/components/schemas/storageVulnerabilityState'
        cvssMetrics:
          type: array
          items:
            $ref: '#/components/schemas/storageCVSSScore'
          title: >-
            cvss_metrics stores list of cvss scores from different sources like
            nvd, Redhat etc
        nvdCvss:
          type: number
          format: float
        epss:
          $ref: '#/components/schemas/storageEPSS'
      title: 'Next Tag: 25'
    storageEmbeddedVulnerabilityScoreVersion:
      type: string
      enum:
        - V2
        - V3
      default: V2
      description: '- V2: No unset for automatic backwards compatibility'
      title: ScoreVersion can be deprecated ROX-26066
    storageImage:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/storageImageName'
        names:
          type: array
          items:
            $ref: '#/components/schemas/storageImageName'
          description: >-
            This should deprecate the ImageName field long-term, allowing images
            with the same digest to be associated with

            different locations.

            TODO(dhaus): For now, this message will be without search tags due
            to duplicated search tags otherwise.
        metadata:
          $ref: '#/components/schemas/storageImageMetadata'
        scan:
          $ref: '#/components/schemas/storageImageScan'
        signatureVerificationData:
          $ref: '#/components/schemas/storageImageSignatureVerificationData'
        signature:
          $ref: '#/components/schemas/storageImageSignature'
        components:
          type: integer
          format: int32
        cves:
          type: integer
          format: int32
        fixableCves:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        notPullable:
          type: boolean
        isClusterLocal:
          type: boolean
        priority:
          type: string
          format: int64
        riskScore:
          type: number
          format: float
        topCvss:
          type: number
          format: float
        notes:
          type: array
          items:
            $ref: '#/components/schemas/storageImageNote'
      title: 'Next Tag: 19'
    storageImageLayer:
      type: object
      properties:
        instruction:
          type: string
        value:
          type: string
        created:
          type: string
          format: date-time
        author:
          type: string
        empty:
          type: boolean
    storageImageMetadata:
      type: object
      properties:
        v1:
          $ref: '#/components/schemas/storageV1Metadata'
        v2:
          $ref: '#/components/schemas/storageV2Metadata'
        layerShas:
          type: array
          items:
            type: string
          title: >-
            We never need both sets of layers so consolidate them. They will be
            ordered by oldest->newest
        dataSource:
          $ref: '#/components/schemas/storageDataSource'
        version:
          type: string
          format: uint64
          title: Version is used to determine if the metadata needs to be re-pulled
      title: >-
        If any fields of ImageMetadata are modified including subfields, please
        check pkg/images/enricher/metadata.go

        to ensure that those changes will be automatically picked up

        Next Tag: 6
    storageImageNote:
      type: string
      enum:
        - MISSING_METADATA
        - MISSING_SCAN_DATA
        - MISSING_SIGNATURE
        - MISSING_SIGNATURE_VERIFICATION_DATA
      default: MISSING_METADATA
    storageImageScan:
      type: object
      properties:
        scannerVersion:
          type: string
        scanTime:
          type: string
          format: date-time
        components:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedImageScanComponent'
        operatingSystem:
          type: string
        dataSource:
          $ref: '#/components/schemas/storageDataSource'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/storageImageScanNote'
        hash:
          type: string
          format: uint64
      title: 'Next tag: 8'
    storageImageScanNote:
      type: string
      enum:
        - UNSET
        - OS_UNAVAILABLE
        - PARTIAL_SCAN_DATA
        - OS_CVES_UNAVAILABLE
        - OS_CVES_STALE
        - LANGUAGE_CVES_UNAVAILABLE
        - CERTIFIED_RHEL_SCAN_UNAVAILABLE
      default: UNSET
    storageImageSignature:
      type: object
      properties:
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/storageSignature'
        fetched:
          type: string
          format: date-time
    storageImageSignatureVerificationData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/storageImageSignatureVerificationResult'
    storageImageSignatureVerificationResult:
      type: object
      properties:
        verificationTime:
          type: string
          format: date-time
        verifierId:
          type: string
          description: >-
            verifier_id correlates to the ID of the signature integration used
            to verify the signature.
        status:
          $ref: '#/components/schemas/storageImageSignatureVerificationResultStatus'
        description:
          type: string
          description: >-
            description is set in the case of an error with the specific error's
            message. Otherwise, this will not be set.
        verifiedImageReferences:
          type: array
          items:
            type: string
          description: >-
            The full image names that are verified by this specific signature
            integration ID.
      title: 'Next Tag: 6'
    storageImageSignatureVerificationResultStatus:
      type: string
      enum:
        - UNSET
        - VERIFIED
        - FAILED_VERIFICATION
        - INVALID_SIGNATURE_ALGO
        - CORRUPTED_SIGNATURE
        - GENERIC_ERROR
      default: UNSET
      description: |-
        Status represents the status of the result.

         - VERIFIED: VERIFIED is set when the signature's verification was successful.
         - FAILED_VERIFICATION: FAILED_VERIFICATION is set when the signature's verification failed.
         - INVALID_SIGNATURE_ALGO: INVALID_SIGNATURE_ALGO is set when the signature's algorithm is invalid and unsupported.
         - CORRUPTED_SIGNATURE: CORRUPTED_SIGNATURE is set when the raw signature is corrupted, i.e. wrong base64 encoding.
         - GENERIC_ERROR: GENERIC_ERROR is set when an error occurred during verification that cannot be associated with a specific
        status.
    storageLicense:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        url:
          type: string
    storageListImage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        components:
          type: integer
          format: int32
        cves:
          type: integer
          format: int32
        fixableCves:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        priority:
          type: string
          format: int64
    storageSignature:
      type: object
      properties:
        cosign:
          $ref: '#/components/schemas/storageCosignSignature'
    storageSource:
      type: string
      enum:
        - SOURCE_UNKNOWN
        - SOURCE_RED_HAT
        - SOURCE_OSV
        - SOURCE_NVD
      default: SOURCE_UNKNOWN
    storageSourceType:
      type: string
      enum:
        - OS
        - PYTHON
        - JAVA
        - RUBY
        - NODEJS
        - GO
        - DOTNETCORERUNTIME
        - INFRASTRUCTURE
      default: OS
    storageV1Metadata:
      type: object
      properties:
        digest:
          type: string
        created:
          type: string
          format: date-time
        author:
          type: string
        layers:
          type: array
          items:
            $ref: '#/components/schemas/storageImageLayer'
        user:
          type: string
        command:
          type: array
          items:
            type: string
        entrypoint:
          type: array
          items:
            type: string
        volumes:
          type: array
          items:
            type: string
        labels:
          type: object
          additionalProperties:
            type: string
    storageV2Metadata:
      type: object
      properties:
        digest:
          type: string
    storageVulnerabilitySeverity:
      type: string
      enum:
        - UNKNOWN_VULNERABILITY_SEVERITY
        - LOW_VULNERABILITY_SEVERITY
        - MODERATE_VULNERABILITY_SEVERITY
        - IMPORTANT_VULNERABILITY_SEVERITY
        - CRITICAL_VULNERABILITY_SEVERITY
      default: UNKNOWN_VULNERABILITY_SEVERITY
    storageVulnerabilityState:
      type: string
      enum:
        - OBSERVED
        - DEFERRED
        - FALSE_POSITIVE
      default: OBSERVED
      description: >-
        VulnerabilityState indicates if vulnerability is being observed or
        deferred(/suppressed). By default, it vulnerabilities are observed.

         - OBSERVED: [Default state]
    storageWatchedImage:
      type: object
      properties:
        name:
          type: string
    v1CountImagesResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1DeleteImagesResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int64
        dryRun:
          type: boolean
    v1ExportImageResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageImage'
    v1GetWatchedImagesResponse:
      type: object
      properties:
        watchedImages:
          type: array
          items:
            $ref: '#/components/schemas/storageWatchedImage'
    v1ListImagesResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/storageListImage'
    v1ScanImageInternalRequestSource:
      type: object
      properties:
        clusterId:
          type: string
        namespace:
          type: string
        imagePullSecrets:
          type: array
          items:
            type: string
    v1ScanImageInternalResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/storageImage'
    v1ScanImageRequest:
      type: object
      properties:
        imageName:
          type: string
        force:
          type: boolean
        includeSnoozed:
          type: boolean
        cluster:
          type: string
          description: Cluster to delegate scan to, may be the cluster's name or ID.
    v1WatchImageRequest:
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the image.
            This must be fully qualified, including a tag,
            but must NOT include a SHA.
    v1WatchImageResponse:
      type: object
      properties:
        normalizedName:
          type: string
          title: >-
            If the image was scanned successfully, this returns the normalized
            name of the image.

            This depends on what we get from the registry.

            For example, "docker.io/wordpress:latest" ->
            "docker.io/library/wordpress:latest"
        errorType:
          $ref: '#/components/schemas/WatchImageResponseErrorType'
        errorMessage:
          type: string
          description: Only set if error_type is NOT equal to "NO_ERROR".
    v4Contents:
      type: object
      properties:
        packages:
          type: array
          items:
            $ref: '#/components/schemas/v4Package'
        distributions:
          type: array
          items:
            $ref: '#/components/schemas/v4Distribution'
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/v4Repository'
        environments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnvironmentList'
    v4Distribution:
      type: object
      properties:
        id:
          type: string
        did:
          type: string
        name:
          type: string
        version:
          type: string
        versionCodeName:
          type: string
        versionId:
          type: string
        arch:
          type: string
        cpe:
          type: string
        prettyName:
          type: string
    v4Environment:
      type: object
      properties:
        packageDb:
          type: string
        introducedIn:
          type: string
        distributionId:
          type: string
        repositoryIds:
          type: array
          items:
            type: string
      description: |-
        Environment describes the surrounding environment a package was
        discovered in.
    v4NormalizedVersion:
      type: object
      properties:
        kind:
          type: string
        v:
          type: array
          items:
            type: integer
            format: int32
    v4Package:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        normalizedVersion:
          $ref: '#/components/schemas/v4NormalizedVersion'
        fixedInVersion:
          type: string
        kind:
          type: string
        source:
          $ref: '#/components/schemas/v4Package'
        packageDb:
          type: string
        repositoryHint:
          type: string
        module:
          type: string
        arch:
          type: string
        cpe:
          type: string
    v4Repository:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        key:
          type: string
        uri:
          type: string
        cpe:
          type: string
    storageIntegrationHealth:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageIntegrationHealthType'
        status:
          $ref: '#/components/schemas/storageIntegrationHealthStatus'
        errorMessage:
          type: string
        lastTimestamp:
          type: string
          format: date-time
          title: Timestamp when the status was ascertained
    storageIntegrationHealthStatus:
      type: string
      enum:
        - UNINITIALIZED
        - UNHEALTHY
        - HEALTHY
      default: UNINITIALIZED
    storageIntegrationHealthType:
      type: string
      enum:
        - UNKNOWN
        - IMAGE_INTEGRATION
        - NOTIFIER
        - BACKUP
        - DECLARATIVE_CONFIG
      default: UNKNOWN
    v1GetIntegrationHealthResponse:
      type: object
      properties:
        integrationHealth:
          type: array
          items:
            $ref: '#/components/schemas/storageIntegrationHealth'
    v1VulnDefinitionsInfo:
      type: object
      properties:
        lastUpdatedTimestamp:
          type: string
          format: date-time
    v1VulnDefinitionsInfoRequestComponent:
      type: string
      enum:
        - SCANNER
        - SCANNER_V4
      default: SCANNER
    CentralServicesCapabilitiesCapabilityStatus:
      type: string
      enum:
        - CapabilityAvailable
        - CapabilityDisabled
      default: CapabilityAvailable
      description: >2-
         - CapabilityAvailable: CapabilityAvailable means that UI and APIs should be available for users to use.
        This does not automatically mean that the functionality is 100%
        available and any calls to APIs will result

        in successful execution. Rather it means that users should be allowed to
        leverage the functionality as

        opposed to CapabilityDisabled when functionality should be blocked.
         - CapabilityDisabled: CapabilityDisabled means the corresponding UI should be disabled and attempts to use related APIs
        should lead to errors.
    DatabaseStatusDatabaseType:
      type: string
      enum:
        - Hidden
        - RocksDB
        - PostgresDB
      default: Hidden
    MetadataLicenseStatus:
      type: string
      enum:
        - NONE
        - INVALID
        - EXPIRED
        - RESTARTING
        - VALID
      default: NONE
    storageBackupInfo:
      type: object
      properties:
        backupLastRunAt:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/storageOperationStatus'
        requestor:
          $ref: '#/components/schemas/storageSlimUser'
    storageOperationStatus:
      type: string
      enum:
        - FAIL
        - PASS
      default: FAIL
    storageSlimUser:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    v1CentralServicesCapabilities:
      type: object
      properties:
        centralScanningCanUseContainerIamRoleForEcr:
          $ref: '#/components/schemas/CentralServicesCapabilitiesCapabilityStatus'
        centralCanUseCloudBackupIntegrations:
          $ref: '#/components/schemas/CentralServicesCapabilitiesCapabilityStatus'
        centralCanDisplayDeclarativeConfigHealth:
          $ref: '#/components/schemas/CentralServicesCapabilitiesCapabilityStatus'
        centralCanUpdateCert:
          $ref: '#/components/schemas/CentralServicesCapabilitiesCapabilityStatus'
        centralCanUseAcscsEmailIntegration:
          $ref: '#/components/schemas/CentralServicesCapabilitiesCapabilityStatus'
      description: >-
        Provides availability of certain functionality of Central Services in
        the current configuration.

        The initial intended use is to disable certain functionality that does
        not make sense in the Cloud Service context.
    v1DatabaseBackupStatus:
      type: object
      properties:
        backupInfo:
          $ref: '#/components/schemas/storageBackupInfo'
    v1DatabaseStatus:
      type: object
      properties:
        databaseAvailable:
          type: boolean
          title: indicates whether or not central can communicate with the database
        databaseType:
          $ref: '#/components/schemas/DatabaseStatusDatabaseType'
        databaseVersion:
          type: string
          title: version of the database
        databaseIsExternal:
          type: boolean
    v1Metadata:
      type: object
      properties:
        version:
          type: string
        buildFlavor:
          type: string
        releaseBuild:
          type: boolean
        licenseStatus:
          $ref: '#/components/schemas/MetadataLicenseStatus'
    v1TLSChallengeResponse:
      type: object
      properties:
        trustInfoSerialized:
          type: string
          format: byte
          title: >-
            signed data which is returned to the caller, is validated against
            the signature
        signature:
          type: string
          format: byte
    storageMitreAttackVector:
      type: object
      properties:
        tactic:
          $ref: '#/components/schemas/storageMitreTactic'
        techniques:
          type: array
          items:
            $ref: '#/components/schemas/storageMitreTechnique'
    storageMitreTactic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    storageMitreTechnique:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    v1GetMitreVectorResponse:
      type: object
      properties:
        mitreAttackVector:
          $ref: '#/components/schemas/storageMitreAttackVector'
    v1ListMitreAttackVectorsResponse:
      type: object
      properties:
        mitreAttackVectors:
          type: array
          items:
            $ref: '#/components/schemas/storageMitreAttackVector'
    storageNamespaceMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        creationTime:
          type: string
          format: date-time
        priority:
          type: string
          format: int64
        annotations:
          type: object
          additionalProperties:
            type: string
    v1GetNamespacesResponse:
      type: object
      properties:
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/v1Namespace'
    v1Namespace:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/storageNamespaceMetadata'
        numDeployments:
          type: integer
          format: int32
        numSecrets:
          type: integer
          format: int32
        numNetworkPolicies:
          type: integer
          format: int32
    DeploymentListenPort:
      type: object
      properties:
        port:
          type: integer
          format: int64
        l4protocol:
          $ref: '#/components/schemas/storageL4Protocol'
    NetworkBaselineServiceGetNetworkBaselineStatusForFlowsBody:
      type: object
      properties:
        peers:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'
    NetworkBaselineServiceLockNetworkBaselineBody:
      type: object
    NetworkBaselineServiceModifyBaselineStatusForPeersBody:
      type: object
      properties:
        peers:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'
    NetworkBaselineServiceUnlockNetworkBaselineBody:
      type: object
    NetworkEntityInfoExternalSource:
      type: object
      properties:
        name:
          type: string
        cidr:
          type: string
        default:
          type: boolean
          description: >-
            `default` indicates whether the external source is user-generated or
            system-generated.
        discovered:
          type: boolean
          description: >-
            `discovered` indicates whether the external source is harvested from
            monitored traffic.
      description: >-
        Update normalizeDupNameExtSrcs(...) in
        `central/networkgraph/aggregator/aggregator.go` whenever this message is
        updated.
    storageNetworkBaseline:
      type: object
      properties:
        deploymentId:
          type: string
          description: This is the ID of the baseline.
        clusterId:
          type: string
        namespace:
          type: string
        peers:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselinePeer'
        forbiddenPeers:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselinePeer'
          description: |-
            A list of peers that will never be added to the baseline.
            For now, this contains peers that the user has manually removed.
            This is used to ensure we don't add it back in the event
            we see the flow again.
        observationPeriodEnd:
          type: string
          format: date-time
        locked:
          type: boolean
          title: |-
            Indicates if this baseline has been locked by user.
            Here locking means:
              1: Do not let system automatically add any allowed peer to baseline
              2: Start reporting violations on flows that are not in the baseline
        deploymentName:
          type: string
      title: >-
        NetworkBaseline represents a network baseline of a deployment. It
        contains all

        the baseline peers and their respective connections.

        next available tag: 8
    storageNetworkBaselineConnectionProperties:
      type: object
      properties:
        ingress:
          type: boolean
          title: |-
            Whether this connection is an ingress/egress, from the PoV
            of the deployment whose baseline this is in
        port:
          type: integer
          format: int64
          title: >-
            May be 0 if not applicable (e.g., icmp), and denotes the destination
            port
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
      title: >-
        NetworkBaselineConnectionProperties represents information about a
        baseline connection

        next available tag: 4
    storageNetworkBaselinePeer:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntity'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
          title: Will always have at least one element
      title: |-
        NetworkBaselinePeer represents a baseline peer.
        next available tag: 3
    storageNetworkEntity:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        scope:
          $ref: '#/components/schemas/storageNetworkEntityScope'
    storageNetworkEntityInfo:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageNetworkEntityInfoType'
        id:
          type: string
        deployment:
          $ref: '#/components/schemas/storageNetworkEntityInfoDeployment'
        externalSource:
          $ref: '#/components/schemas/NetworkEntityInfoExternalSource'
    storageNetworkEntityInfoDeployment:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        cluster:
          type: string
        listenPorts:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentListenPort'
    storageNetworkEntityScope:
      type: object
      properties:
        clusterId:
          type: string
    v1NetworkBaselineExternalStatusResponse:
      type: object
      properties:
        anomalous:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'
        totalAnomalous:
          type: integer
          format: int32
        baseline:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'
        totalBaseline:
          type: integer
          format: int32
    v1NetworkBaselinePeerEntity:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/storageNetworkEntityInfoType'
        name:
          type: string
        discovered:
          type: boolean
    v1NetworkBaselinePeerStatus:
      type: object
      properties:
        peer:
          $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'
        status:
          $ref: '#/components/schemas/v1NetworkBaselinePeerStatusStatus'
    v1NetworkBaselinePeerStatusStatus:
      type: string
      enum:
        - BASELINE
        - ANOMALOUS
      default: BASELINE
      title: |-
        Status of this peer connection. As of now we only have two statuses:
          - BASELINE: the connection is in the current deployment baseline
          - ANOMALOUS: the connection is not recognized by the current deployment baseline
    v1NetworkBaselineStatusPeer:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/v1NetworkBaselinePeerEntity'
        port:
          type: integer
          format: int64
          description: The port and protocol of the destination of the given connection.
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
        ingress:
          type: boolean
          description: |-
            A boolean representing whether the query is for an ingress or egress
            connection. This is defined with respect to the current deployment.
            Thus:
              - If the connection in question is in the outEdges of the current deployment,
                this should be false.
              - If it is in the outEdges of the peer deployment, this
                should be true.
    v1NetworkBaselineStatusResponse:
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'
    NetworkGraphServiceCreateExternalNetworkEntityBody:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/NetworkEntityInfoExternalSource'
    NetworkGraphServicePatchExternalNetworkEntityBody:
      type: object
      properties:
        name:
          type: string
    storageNetworkFlow:
      type: object
      properties:
        props:
          $ref: '#/components/schemas/storageNetworkFlowProperties'
        lastSeenTimestamp:
          type: string
          format: date-time
        clusterId:
          type: string
          title: Need the clusterID as that is part of the key in RocksDB
        updatedAt:
          type: string
          format: date-time
          title: |-
            This field is set by Central everytime a flow is upserted.
            This should not be set by Sensor.
            For more context: https://github.com/stackrox/stackrox/pull/14483
    storageNetworkFlowProperties:
      type: object
      properties:
        srcEntity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        dstEntity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        dstPort:
          type: integer
          format: int64
          description: may be 0 if not applicable (e.g., icmp).
        l4protocol:
          $ref: '#/components/schemas/storageL4Protocol'
    storageNetworkGraphConfig:
      type: object
      properties:
        id:
          type: string
        hideDefaultExternalSrcs:
          type: boolean
    v1ExternalNetworkFlowMetadata:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        flowsCount:
          type: integer
          format: int32
    v1GetExternalNetworkEntitiesResponse:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkEntity'
    v1GetExternalNetworkFlowsMetadataResponse:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/v1ExternalNetworkFlowMetadata'
        totalEntities:
          type: integer
          format: int32
    v1GetExternalNetworkFlowsResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        totalFlows:
          type: integer
          format: int32
        flows:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkFlow'
    v1NetworkEdgeProperties:
      type: object
      properties:
        port:
          type: integer
          format: int64
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
        lastActiveTimestamp:
          type: string
          format: date-time
    v1NetworkEdgePropertiesBundle:
      type: object
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkEdgeProperties'
    v1NetworkGraph:
      type: object
      properties:
        epoch:
          type: integer
          format: int64
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkNode'
    v1NetworkGraphScope:
      type: object
      properties:
        query:
          type: string
    v1NetworkNode:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        internetAccess:
          type: boolean
        policyIds:
          type: array
          items:
            type: string
        nonIsolatedIngress:
          type: boolean
        nonIsolatedEgress:
          type: boolean
        queryMatch:
          type: boolean
        outEdges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'
    v1PutNetworkGraphConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageNetworkGraphConfig'
    GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode:
      type: string
      enum:
        - UNKNOWN
        - NONE
        - GENERATED_ONLY
        - ALL
      default: UNKNOWN
      description: |2-
         - NONE: Do not delete any existing network policies.
         - GENERATED_ONLY: Delete any existing *auto-generated* network policies.
         - ALL: Delete all existing network policies in the respective namespace.
    NetworkPolicyServiceApplyNetworkPolicyYamlForDeploymentBody:
      type: object
      properties:
        modification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
    NetworkPolicyServiceGetBaselineGeneratedNetworkPolicyForDeploymentBody:
      type: object
      properties:
        deleteExisting:
          $ref: >-
            #/components/schemas/GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode
        includePorts:
          type: boolean
    storageIPBlock:
      type: object
      properties:
        cidr:
          type: string
        except:
          type: array
          items:
            type: string
    storageNetworkPolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        spec:
          $ref: '#/components/schemas/storageNetworkPolicySpec'
        yaml:
          type: string
        apiVersion:
          type: string
        created:
          type: string
          format: date-time
    storageNetworkPolicyApplicationUndoRecord:
      type: object
      properties:
        clusterId:
          type: string
        user:
          type: string
        applyTimestamp:
          type: string
          format: date-time
        originalModification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
        undoModification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
    storageNetworkPolicyEgressRule:
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPort'
        to:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPeer'
    storageNetworkPolicyIngressRule:
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPort'
        from:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyPeer'
    storageNetworkPolicyModification:
      type: object
      properties:
        applyYaml:
          type: string
        toDelete:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyReference'
      title: 'Next available tag: 3'
    storageNetworkPolicyPeer:
      type: object
      properties:
        podSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        namespaceSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        ipBlock:
          $ref: '#/components/schemas/storageIPBlock'
    storageNetworkPolicyPort:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/storageProtocol'
        port:
          type: integer
          format: int32
        portName:
          type: string
    storageNetworkPolicyReference:
      type: object
      properties:
        namespace:
          type: string
        name:
          type: string
      title: 'Next available tag: 3'
    storageNetworkPolicySpec:
      type: object
      properties:
        podSelector:
          $ref: '#/components/schemas/storageLabelSelector'
        ingress:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyIngressRule'
        egress:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyEgressRule'
        policyTypes:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicyType'
    storageNetworkPolicyType:
      type: string
      enum:
        - UNSET_NETWORK_POLICY_TYPE
        - INGRESS_NETWORK_POLICY_TYPE
        - EGRESS_NETWORK_POLICY_TYPE
      default: UNSET_NETWORK_POLICY_TYPE
    storageProtocol:
      type: string
      enum:
        - UNSET_PROTOCOL
        - TCP_PROTOCOL
        - UDP_PROTOCOL
        - SCTP_PROTOCOL
      default: UNSET_PROTOCOL
    v1GenerateNetworkPoliciesResponse:
      type: object
      properties:
        modification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
      title: 'Next available tag: 2'
    v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse:
      type: object
      properties:
        allowedPeers:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'
    v1GetBaselineGeneratedPolicyForDeploymentResponse:
      type: object
      properties:
        modification:
          $ref: '#/components/schemas/storageNetworkPolicyModification'
    v1GetDiffFlowsGroupedFlow:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
    v1GetDiffFlowsReconciledFlow:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/storageNetworkEntityInfo'
        added:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
        removed:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
        unchanged:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'
    v1GetDiffFlowsResponse:
      type: object
      properties:
        added:
          type: array
          items:
            $ref: '#/components/schemas/v1GetDiffFlowsGroupedFlow'
        removed:
          type: array
          items:
            $ref: '#/components/schemas/v1GetDiffFlowsGroupedFlow'
        reconciled:
          type: array
          items:
            $ref: '#/components/schemas/v1GetDiffFlowsReconciledFlow'
    v1GetUndoModificationForDeploymentResponse:
      type: object
      properties:
        undoRecord:
          $ref: '#/components/schemas/storageNetworkPolicyApplicationUndoRecord'
    v1GetUndoModificationResponse:
      type: object
      properties:
        undoRecord:
          $ref: '#/components/schemas/storageNetworkPolicyApplicationUndoRecord'
    v1NetworkGraphDiff:
      type: object
      properties:
        DEPRECATEDNodeDiffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkNodeDiff'
        nodeDiffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkNodeDiff'
    v1NetworkGraphEpoch:
      type: object
      properties:
        epoch:
          type: integer
          format: int64
    v1NetworkNodeDiff:
      type: object
      properties:
        policyIds:
          type: array
          items:
            type: string
        DEPRECATEDOutEdges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'
        outEdges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'
        nonIsolatedIngress:
          type: boolean
        nonIsolatedEgress:
          type: boolean
    v1NetworkPoliciesResponse:
      type: object
      properties:
        networkPolicies:
          type: array
          items:
            $ref: '#/components/schemas/storageNetworkPolicy'
    v1NetworkPolicyInSimulation:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storageNetworkPolicy'
        status:
          $ref: '#/components/schemas/v1NetworkPolicyInSimulationStatus'
        oldPolicy:
          $ref: '#/components/schemas/storageNetworkPolicy'
    v1NetworkPolicyInSimulationStatus:
      type: string
      enum:
        - INVALID
        - UNCHANGED
        - MODIFIED
        - ADDED
        - DELETED
      default: INVALID
    v1SimulateNetworkGraphResponse:
      type: object
      properties:
        simulatedGraph:
          $ref: '#/components/schemas/v1NetworkGraph'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/v1NetworkPolicyInSimulation'
        added:
          $ref: '#/components/schemas/v1NetworkGraphDiff'
        removed:
          $ref: '#/components/schemas/v1NetworkGraphDiff'
    NodeScanScanner:
      type: string
      enum:
        - SCANNER
        - SCANNER_V4
      default: SCANNER
    storageCVEInfo:
      type: object
      properties:
        cve:
          type: string
        summary:
          type: string
        link:
          type: string
        publishedOn:
          type: string
          format: date-time
          description: >-
            This indicates the timestamp when the cve was first published in the
            cve feeds.
        createdAt:
          type: string
          format: date-time
          description: Time when the CVE was first seen in the system.
        lastModified:
          type: string
          format: date-time
        scoreVersion:
          $ref: '#/components/schemas/storageCVEInfoScoreVersion'
        cvssV2:
          $ref: '#/components/schemas/storageCVSSV2'
        cvssV3:
          $ref: '#/components/schemas/storageCVSSV3'
        references:
          type: array
          items:
            $ref: '#/components/schemas/storageCVEInfoReference'
        cvssMetrics:
          type: array
          items:
            $ref: '#/components/schemas/storageCVSSScore'
          title: >-
            cvss_metrics stores list of cvss scores from different sources like
            nvd, Redhat etc
        epss:
          $ref: '#/components/schemas/storageEPSS'
    storageCVEInfoReference:
      type: object
      properties:
        URI:
          type: string
        tags:
          type: array
          items:
            type: string
    storageCVEInfoScoreVersion:
      type: string
      enum:
        - V2
        - V3
        - UNKNOWN
      default: V2
      description: '- V2: No unset for automatic backwards compatibility'
      title: ScoreVersion can be deprecated ROX-26066
    storageContainerRuntime:
      type: string
      enum:
        - UNKNOWN_CONTAINER_RUNTIME
        - DOCKER_CONTAINER_RUNTIME
        - CRIO_CONTAINER_RUNTIME
      default: UNKNOWN_CONTAINER_RUNTIME
    storageContainerRuntimeInfo:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/storageContainerRuntime'
        version:
          type: string
    storageEmbeddedNodeScanComponent:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        vulns:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedVulnerability'
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/storageNodeVulnerability'
        priority:
          type: string
          format: int64
        topCvss:
          type: number
          format: float
        riskScore:
          type: number
          format: float
    storageNode:
      type: object
      properties:
        id:
          type: string
          description: A unique ID identifying this node.
        name:
          type: string
          description: The (host)name of the node. Might or might not be the same as ID.
        taints:
          type: array
          items:
            $ref: '#/components/schemas/storageTaint'
          title: Taints on the host
        clusterId:
          type: string
        clusterName:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        joinedAt:
          type: string
          format: date-time
          title: When the cluster reported the node was added
        internalIpAddresses:
          type: array
          items:
            type: string
          title: node internal IP addresses
        externalIpAddresses:
          type: array
          items:
            type: string
          title: node external IP addresses
        containerRuntimeVersion:
          type: string
          description: Use container_runtime.version
          title: From NodeInfo
        containerRuntime:
          $ref: '#/components/schemas/storageContainerRuntimeInfo'
        kernelVersion:
          type: string
        operatingSystem:
          type: string
          description: 'From NodeInfo. Operating system reported by the node (ex: linux).'
        osImage:
          type: string
          description: From NodeInfo. OS image reported by the node from /etc/os-release.
        kubeletVersion:
          type: string
        kubeProxyVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        k8sUpdated:
          type: string
          format: date-time
          description: Time we received an update from Kubernetes.
        scan:
          $ref: '#/components/schemas/storageNodeScan'
        components:
          type: integer
          format: int32
        cves:
          type: integer
          format: int32
        fixableCves:
          type: integer
          format: int32
        priority:
          type: string
          format: int64
        riskScore:
          type: number
          format: float
        topCvss:
          type: number
          format: float
        notes:
          type: array
          items:
            $ref: '#/components/schemas/storageNodeNote'
      title: |-
        Node represents information about a node in the cluster.
        next available tag: 28
    storageNodeNote:
      type: string
      enum:
        - MISSING_SCAN_DATA
      default: MISSING_SCAN_DATA
    storageNodeScan:
      type: object
      properties:
        scanTime:
          type: string
          format: date-time
        operatingSystem:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/storageEmbeddedNodeScanComponent'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/storageNodeScanNote'
        scannerVersion:
          $ref: '#/components/schemas/NodeScanScanner'
      title: 'Next tag: 5'
    storageNodeScanNote:
      type: string
      enum:
        - UNSET
        - UNSUPPORTED
        - KERNEL_UNSUPPORTED
        - CERTIFIED_RHEL_CVES_UNAVAILABLE
      default: UNSET
    storageNodeVulnerability:
      type: object
      properties:
        cveBaseInfo:
          $ref: '#/components/schemas/storageCVEInfo'
        cvss:
          type: number
          format: float
        severity:
          $ref: '#/components/schemas/storageVulnerabilitySeverity'
        fixedBy:
          type: string
        snoozed:
          type: boolean
        snoozeStart:
          type: string
          format: date-time
        snoozeExpiry:
          type: string
          format: date-time
    storageTaint:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        taintEffect:
          $ref: '#/components/schemas/storageTaintEffect'
    v1ExportNodeResponse:
      type: object
      properties:
        node:
          $ref: '#/components/schemas/storageNode'
    v1ListNodesResponse:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/storageNode'
    EmailAuthMethod:
      type: string
      enum:
        - DISABLED
        - PLAIN
        - LOGIN
      default: DISABLED
    JiraPriorityMapping:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/storageSeverity'
        priorityName:
          type: string
    MicrosoftSentinelClientCertAuthConfig:
      type: object
      properties:
        clientCert:
          type: string
          description: PEM encoded ASN.1 DER format.
        privateKey:
          type: string
          description: 'PEM encoded PKCS #8, ASN.1 DER format.'
      title: client certificate which is used for authentication
    MicrosoftSentinelDataCollectionRuleConfig:
      type: object
      properties:
        streamName:
          type: string
        dataCollectionRuleId:
          type: string
        enabled:
          type: boolean
      description: >-
        DataCollectionRuleConfig contains information about the data collection
        rule which is a config per notifier type.
    NotifierServicePutNotifierBody:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        uiEndpoint:
          type: string
        labelKey:
          type: string
        labelDefault:
          type: string
        jira:
          $ref: '#/components/schemas/storageJira'
        email:
          $ref: '#/components/schemas/storageEmail'
        cscc:
          $ref: '#/components/schemas/storageCSCC'
        splunk:
          $ref: '#/components/schemas/storageSplunk'
        pagerduty:
          $ref: '#/components/schemas/storagePagerDuty'
        generic:
          $ref: '#/components/schemas/storageGeneric'
        sumologic:
          $ref: '#/components/schemas/storageSumoLogic'
        awsSecurityHub:
          $ref: '#/components/schemas/storageAWSSecurityHub'
        syslog:
          $ref: '#/components/schemas/storageSyslog'
        microsoftSentinel:
          $ref: '#/components/schemas/storageMicrosoftSentinel'
        notifierSecret:
          type: string
        traits:
          $ref: '#/components/schemas/storageTraits'
      title: 'Next Tag: 21'
    NotifierServiceUpdateNotifierBody:
      type: object
      properties:
        notifier:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            uiEndpoint:
              type: string
            labelKey:
              type: string
            labelDefault:
              type: string
            jira:
              $ref: '#/components/schemas/storageJira'
            email:
              $ref: '#/components/schemas/storageEmail'
            cscc:
              $ref: '#/components/schemas/storageCSCC'
            splunk:
              $ref: '#/components/schemas/storageSplunk'
            pagerduty:
              $ref: '#/components/schemas/storagePagerDuty'
            generic:
              $ref: '#/components/schemas/storageGeneric'
            sumologic:
              $ref: '#/components/schemas/storageSumoLogic'
            awsSecurityHub:
              $ref: '#/components/schemas/storageAWSSecurityHub'
            syslog:
              $ref: '#/components/schemas/storageSyslog'
            microsoftSentinel:
              $ref: '#/components/schemas/storageMicrosoftSentinel'
            notifierSecret:
              type: string
            traits:
              $ref: '#/components/schemas/storageTraits'
          title: 'Next Tag: 21'
        updatePassword:
          type: boolean
          description: >-
            When false, use the stored credentials of an existing notifier
            configuration given its ID.
    SyslogLocalFacility:
      type: string
      enum:
        - LOCAL0
        - LOCAL1
        - LOCAL2
        - LOCAL3
        - LOCAL4
        - LOCAL5
        - LOCAL6
        - LOCAL7
      default: LOCAL0
    SyslogMessageFormat:
      type: string
      enum:
        - LEGACY
        - CEF
      default: LEGACY
    SyslogTCPConfig:
      type: object
      properties:
        hostname:
          type: string
        port:
          type: integer
          format: int32
        skipTlsVerify:
          type: boolean
        useTls:
          type: boolean
    storageAWSSecurityHub:
      type: object
      properties:
        region:
          type: string
        credentials:
          $ref: '#/components/schemas/storageAWSSecurityHubCredentials'
        accountId:
          type: string
    storageAWSSecurityHubCredentials:
      type: object
      properties:
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        stsEnabled:
          type: boolean
    storageCSCC:
      type: object
      properties:
        serviceAccount:
          type: string
          description: >-
            The service account for the integration. The server will mask the
            value of this credential in responses and logs.
        sourceId:
          type: string
        wifEnabled:
          type: boolean
    storageEmail:
      type: object
      properties:
        server:
          type: string
        sender:
          type: string
        username:
          type: string
        password:
          type: string
          description: >-
            The password for the integration. The server will mask the value of
            this credential in responses and logs.
        disableTLS:
          type: boolean
        DEPRECATEDUseStartTLS:
          type: boolean
          title: useStartTLS has been deprecated for startTLSAuthMethod
        from:
          type: string
        startTLSAuthMethod:
          $ref: '#/components/schemas/EmailAuthMethod'
        allowUnauthenticatedSmtp:
          type: boolean
          title: Set to true to allow unauthenticated SMTP
        skipTLSVerify:
          type: boolean
    storageGeneric:
      type: object
      properties:
        endpoint:
          type: string
        skipTLSVerify:
          type: boolean
        caCert:
          type: string
        username:
          type: string
        password:
          type: string
          description: >-
            The password for the integration. The server will mask the value of
            this credential in responses and logs.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/storageKeyValuePair'
        extraFields:
          type: array
          items:
            $ref: '#/components/schemas/storageKeyValuePair'
        auditLoggingEnabled:
          type: boolean
    storageJira:
      type: object
      properties:
        url:
          type: string
        username:
          type: string
        password:
          type: string
          description: >-
            The password for the integration. The server will mask the value of
            this credential in responses and logs.
        issueType:
          type: string
        priorityMappings:
          type: array
          items:
            $ref: '#/components/schemas/JiraPriorityMapping'
        defaultFieldsJson:
          type: string
        disablePriority:
          type: boolean
    storageKeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    storageMicrosoftSentinel:
      type: object
      properties:
        logIngestionEndpoint:
          type: string
          description: log_ingestion_endpoint is the log ingestion endpoint.
        directoryTenantId:
          type: string
          description: >-
            directory_tenant_id contains the ID of the Microsoft Directory ID of
            the selected tenant.
        applicationClientId:
          type: string
          description: >-
            application_client_id contains the ID of the application ID of the
            service principal.
        secret:
          type: string
          description: secret contains the client secret.
        alertDcrConfig:
          $ref: '#/components/schemas/MicrosoftSentinelDataCollectionRuleConfig'
        auditLogDcrConfig:
          $ref: '#/components/schemas/MicrosoftSentinelDataCollectionRuleConfig'
        clientCertAuthConfig:
          $ref: '#/components/schemas/MicrosoftSentinelClientCertAuthConfig'
        wifEnabled:
          type: boolean
          description: >-
            Enables authentication with short-lived tokens using Azure managed
            identities

            or Azure workload identities.

            The toggle exists to make the use of Azure default credentials
            explicit rather

            than always using them as a fallback. The explicit behavior is more
            consistent

            with other integrations.
    storageNotifier:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        uiEndpoint:
          type: string
        labelKey:
          type: string
        labelDefault:
          type: string
        jira:
          $ref: '#/components/schemas/storageJira'
        email:
          $ref: '#/components/schemas/storageEmail'
        cscc:
          $ref: '#/components/schemas/storageCSCC'
        splunk:
          $ref: '#/components/schemas/storageSplunk'
        pagerduty:
          $ref: '#/components/schemas/storagePagerDuty'
        generic:
          $ref: '#/components/schemas/storageGeneric'
        sumologic:
          $ref: '#/components/schemas/storageSumoLogic'
        awsSecurityHub:
          $ref: '#/components/schemas/storageAWSSecurityHub'
        syslog:
          $ref: '#/components/schemas/storageSyslog'
        microsoftSentinel:
          $ref: '#/components/schemas/storageMicrosoftSentinel'
        notifierSecret:
          type: string
        traits:
          $ref: '#/components/schemas/storageTraits'
      title: 'Next Tag: 21'
    storagePagerDuty:
      type: object
      properties:
        apiKey:
          type: string
          description: >-
            The API key for the integration. The server will mask the value of
            this credential in responses and logs.
    storageSplunk:
      type: object
      properties:
        httpToken:
          type: string
          description: >-
            The HTTP token for the integration. The server will mask the value
            of this credential in responses and logs.
        httpEndpoint:
          type: string
        insecure:
          type: boolean
        truncate:
          type: string
          format: int64
        auditLoggingEnabled:
          type: boolean
        derivedSourceType:
          type: boolean
          title: derived_source_type is deprecated in lieu of source_types
        sourceTypes:
          type: object
          additionalProperties:
            type: string
    storageSumoLogic:
      type: object
      properties:
        httpSourceAddress:
          type: string
        skipTLSVerify:
          type: boolean
    storageSyslog:
      type: object
      properties:
        localFacility:
          $ref: '#/components/schemas/SyslogLocalFacility'
        tcpConfig:
          $ref: '#/components/schemas/SyslogTCPConfig'
        extraFields:
          type: array
          items:
            $ref: '#/components/schemas/storageKeyValuePair'
        messageFormat:
          $ref: '#/components/schemas/SyslogMessageFormat'
    v1GetNotifiersResponse:
      type: object
      properties:
        notifiers:
          type: array
          items:
            $ref: '#/components/schemas/storageNotifier'
    v1UpdateNotifierRequest:
      type: object
      properties:
        notifier:
          $ref: '#/components/schemas/storageNotifier'
        updatePassword:
          type: boolean
          description: >-
            When false, use the stored credentials of an existing notifier
            configuration given its ID.
    v1PongMessage:
      type: object
      properties:
        status:
          type: string
    PodContainerInstanceList:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerInstance'
    storageContainerInstance:
      type: object
      properties:
        instanceId:
          $ref: '#/components/schemas/storageContainerInstanceID'
        containingPodId:
          type: string
          description: The pod containing this container instance (kubernetes only).
        containerName:
          type: string
          description: Container name.
        containerIps:
          type: array
          items:
            type: string
          description: The IP addresses of this container.
        started:
          type: string
          format: date-time
          title: The start time of the container
        imageDigest:
          type: string
          title: Image ID
        finished:
          type: string
          format: date-time
          description: The finish time of the container, if it finished.
        exitCode:
          type: integer
          format: int32
          description: >-
            The exit code of the container. Only valid when finished is
            populated.
        terminationReason:
          type: string
          description: The reason for the container's termination, if it finished.
      description: >-
        ContainerInstanceID allows to uniquely identify a container within a
        cluster.
    storageContainerInstanceID:
      type: object
      properties:
        containerRuntime:
          $ref: '#/components/schemas/storageContainerRuntime'
        id:
          type: string
          description: The ID of the container, specific to the given runtime.
        node:
          type: string
          description: The node on which this container runs.
    storagePod:
      type: object
      properties:
        id:
          type: string
          title: Pod UID
        name:
          type: string
        deploymentId:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        liveInstances:
          type: array
          items:
            $ref: '#/components/schemas/storageContainerInstance'
        terminatedInstances:
          type: array
          items:
            $ref: '#/components/schemas/PodContainerInstanceList'
          description: >-
            Must be a list of lists, so we can perform search queries (does not
            work for maps that aren't <string, string>)

            There is one bucket (list) per container name.
        started:
          type: string
          format: date-time
          description: Time Kubernetes reports the pod was created.
      description: >-
        Pod represents information for a currently running pod or deleted pod in
        an active deployment.
    v1ExportPodResponse:
      type: object
      properties:
        pod:
          $ref: '#/components/schemas/storagePod'
    v1PodsResponse:
      type: object
      properties:
        pods:
          type: array
          items:
            $ref: '#/components/schemas/storagePod'
    v1GetPolicyCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/v1PolicyCategory'
    v1PolicyCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isDefault:
          type: boolean
    v1RenamePolicyCategoryRequest:
      type: object
      properties:
        id:
          type: string
        newCategoryName:
          type: string
    PolicyServiceEnableDisablePolicyNotificationBody:
      type: object
      properties:
        notifierIds:
          type: array
          items:
            type: string
        disable:
          type: boolean
    PolicyServicePatchPolicyBody:
      type: object
      properties:
        disabled:
          type: boolean
    PolicyServicePutPolicyBody:
      type: object
      properties:
        name:
          type: string
          description: Name of the policy.  Must be unique.
        description:
          type: string
          description: Free-form text description of this policy.
        rationale:
          type: string
        remediation:
          type: string
          description: Describes how to remediate a violation of this policy.
        disabled:
          type: boolean
          description: >-
            Toggles whether or not this policy will be executing and actively
            firing alerts.
        categories:
          type: array
          items:
            type: string
          description: >-
            List of categories that this policy falls under.  Category names
            must already exist in Central.
        lifecycleStages:
          type: array
          items:
            $ref: '#/components/schemas/storageLifecycleStage'
          description: >-
            Describes which policy lifecylce stages this policy applies to. 
            Choices are DEPLOY, BUILD, and RUNTIME.
        eventSource:
          $ref: '#/components/schemas/storageEventSource'
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/storageExclusion'
          description: >-
            Define deployments or images that should be excluded from this
            policy.
        scope:
          type: array
          items:
            $ref: '#/components/schemas/storageScope'
          description: >-
            Defines clusters, namespaces, and deployments that should be
            included in this policy.  No scopes defined includes everything.
        severity:
          $ref: '#/components/schemas/storageSeverity'
        enforcementActions:
          type: array
          items:
            $ref: '#/components/schemas/storageEnforcementAction'
          description: >-
            FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission
            control webhook is configured to enforce on object creates/updates.

            FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control
            webhook is enabled to listen on exec and port-forward events.

            FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission
            control webhook is configured to enforce on object updates.

            Lists the enforcement actions to take when a violation from this
            policy is identified.  Possible value are UNSET_ENFORCEMENT,
            SCALE_TO_ZERO_ENFORCEMENT,
            UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT, KILL_POD_ENFORCEMENT,
            FAIL_BUILD_ENFORCEMENT, FAIL_KUBE_REQUEST_ENFORCEMENT,
            FAIL_DEPLOYMENT_CREATE_ENFORCEMENT, and.
            FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT.
        notifiers:
          type: array
          items:
            type: string
          description: >-
            List of IDs of the notifiers that should be triggered when a
            violation from this policy is identified.  IDs should be in the form
            of a UUID and are found through the Central API.
        lastUpdated:
          type: string
          format: date-time
        SORTName:
          type: string
          description: For internal use only.
        SORTLifecycleStage:
          type: string
          description: For internal use only.
        SORTEnforcement:
          type: boolean
          description: For internal use only.
        policyVersion:
          type: string
        policySections:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicySection'
          description: PolicySections define the violation criteria for this policy.
        mitreAttackVectors:
          type: array
          items:
            $ref: '#/components/schemas/PolicyMitreAttackVectors'
        criteriaLocked:
          type: boolean
          description: >-
            Read-only field. If true, the policy's criteria fields are rendered
            read-only.
        mitreVectorsLocked:
          type: boolean
          description: >-
            Read-only field. If true, the policy's MITRE ATT&CK fields are
            rendered read-only.
        isDefault:
          type: boolean
          description: >-
            Read-only field. Indicates the policy is a default policy if true
            and a custom policy if false.
        source:
          $ref: '#/components/schemas/storagePolicySource'
      title: 'Next tag: 28'
    storageExportPoliciesResponse:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicy'
      title: >-
        ExportPoliciesResponse is used by the API but it is defined in storage
        because we expect customers to store them.

        We do backwards-compatibility checks on objects in the storge folder and
        those checks should be applied to this object
    storageListPolicy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        severity:
          $ref: '#/components/schemas/storageSeverity'
        disabled:
          type: boolean
        lifecycleStages:
          type: array
          items:
            $ref: '#/components/schemas/storageLifecycleStage'
        notifiers:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time
        eventSource:
          $ref: '#/components/schemas/storageEventSource'
        isDefault:
          type: boolean
        source:
          $ref: '#/components/schemas/storagePolicySource'
    v1DryRunJobStatusResponse:
      type: object
      properties:
        pending:
          type: boolean
        result:
          $ref: '#/components/schemas/v1DryRunResponse'
    v1DryRunResponse:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/v1DryRunResponseAlert'
    v1DryRunResponseAlert:
      type: object
      properties:
        deployment:
          type: string
        violations:
          type: array
          items:
            type: string
    v1ExportPoliciesRequest:
      type: object
      properties:
        policyIds:
          type: array
          items:
            type: string
    v1GetPolicyMitreVectorsRequestOptions:
      type: object
      properties:
        excludePolicy:
          type: boolean
          description: If set to true, policy is excluded from the response.
    v1GetPolicyMitreVectorsResponse:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storagePolicy'
        vectors:
          type: array
          items:
            $ref: '#/components/schemas/storageMitreAttackVector'
    v1ImportPoliciesMetadata:
      type: object
      properties:
        overwrite:
          type: boolean
    v1ImportPoliciesRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1ImportPoliciesMetadata'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicy'
    v1ImportPoliciesResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/v1ImportPolicyResponse'
        allSucceeded:
          type: boolean
    v1ImportPolicyError:
      type: object
      properties:
        message:
          type: string
        type:
          type: string
        duplicateName:
          type: string
        validationError:
          type: string
    v1ImportPolicyResponse:
      type: object
      properties:
        succeeded:
          type: boolean
        policy:
          $ref: '#/components/schemas/storagePolicy'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/v1ImportPolicyError'
    v1JobId:
      type: object
      properties:
        jobId:
          type: string
    v1ListPoliciesResponse:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/storageListPolicy'
    v1PolicyCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
    v1PolicyFromSearchRequest:
      type: object
      properties:
        searchParams:
          type: string
    v1PolicyFromSearchResponse:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/storagePolicy'
        alteredSearchTerms:
          type: array
          items:
            type: string
        hasNestedFields:
          type: boolean
    v1GetExistingProbesResponse:
      type: object
      properties:
        existingFiles:
          type: array
          items:
            $ref: '#/components/schemas/v1ProbeUploadManifestFile'
    v1ProbeUploadManifestFile:
      type: object
      properties:
        name:
          type: string
        size:
          type: string
          format: int64
        crc32:
          type: integer
          format: int64
    storageBaselineElement:
      type: object
      properties:
        element:
          $ref: '#/components/schemas/storageBaselineItem'
        auto:
          type: boolean
    storageBaselineItem:
      type: object
      properties:
        processName:
          type: string
    storageProcessBaseline:
      type: object
      properties:
        id:
          type: string
        key:
          $ref: '#/components/schemas/storageProcessBaselineKey'
        elements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineElement'
        elementGraveyard:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineElement'
        created:
          type: string
          format: date-time
        userLockedTimestamp:
          type: string
          format: date-time
        stackRoxLockedTimestamp:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
    storageProcessBaselineKey:
      type: object
      properties:
        deploymentId:
          type: string
          description: |-
            The idea is for the keys to be flexible.
            Only certain combinations of these will be supported.
        containerName:
          type: string
        clusterId:
          type: string
        namespace:
          type: string
    v1DeleteProcessBaselinesResponse:
      type: object
      properties:
        numDeleted:
          type: integer
          format: int32
        dryRun:
          type: boolean
    v1LockProcessBaselinesRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaselineKey'
        locked:
          type: boolean
    v1ProcessBaselineUpdateError:
      type: object
      properties:
        error:
          type: string
        key:
          $ref: '#/components/schemas/storageProcessBaselineKey'
    v1UpdateProcessBaselinesRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaselineKey'
        addElements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineItem'
        removeElements:
          type: array
          items:
            $ref: '#/components/schemas/storageBaselineItem'
    v1UpdateProcessBaselinesResponse:
      type: object
      properties:
        baselines:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessBaseline'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessBaselineUpdateError'
    ProcessListeningOnPortEndpoint:
      type: object
      properties:
        port:
          type: integer
          format: int64
        protocol:
          $ref: '#/components/schemas/storageL4Protocol'
    storageProcessListeningOnPort:
      type: object
      properties:
        endpoint:
          $ref: '#/components/schemas/ProcessListeningOnPortEndpoint'
        deploymentId:
          type: string
        containerName:
          type: string
        podId:
          type: string
        podUid:
          type: string
        signal:
          $ref: '#/components/schemas/storageProcessSignal'
        clusterId:
          type: string
        namespace:
          type: string
        containerStartTime:
          type: string
          format: date-time
        imageId:
          type: string
      title: The API returns an array of these
    v1GetProcessesListeningOnPortsResponse:
      type: object
      properties:
        listeningEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessListeningOnPort'
        totalListeningEndpoints:
          type: integer
          format: int32
    v1CountProcessesResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1GetGroupedProcessesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessNameGroup'
    v1GetGroupedProcessesWithContainerResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessNameAndContainerNameGroup'
    v1GetProcessesResponse:
      type: object
      properties:
        processes:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessIndicator'
    v1ProcessGroup:
      type: object
      properties:
        args:
          type: string
        signals:
          type: array
          items:
            $ref: '#/components/schemas/storageProcessIndicator'
    v1ProcessNameAndContainerNameGroup:
      type: object
      properties:
        name:
          type: string
        containerName:
          type: string
        timesExecuted:
          type: integer
          format: int64
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessGroup'
        suspicious:
          type: boolean
    v1ProcessNameGroup:
      type: object
      properties:
        name:
          type: string
        timesExecuted:
          type: integer
          format: int64
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1ProcessGroup'
    storageK8sRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        clusterRole:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        rules:
          type: array
          items:
            $ref: '#/components/schemas/storagePolicyRule'
      title: |-
        Properties of an individual k8s Role or ClusterRole.
        ////////////////////////////////////////
    storageK8sRoleBinding:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        clusterRole:
          type: boolean
          description: >-
            ClusterRole specifies whether the binding binds a cluster role.
            However, it cannot be used to determine whether

            the binding is a cluster role binding. This can be done in
            conjunction with the namespace. If the namespace is

            empty and cluster role is true, the binding is a cluster role
            binding.
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/storageSubject'
        roleId:
          type: string
      title: |-
        Properties of an individual k8s RoleBinding or ClusterRoleBinding.
        ////////////////////////////////////////
    storagePolicyRule:
      type: object
      properties:
        verbs:
          type: array
          items:
            type: string
        apiGroups:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            type: string
        nonResourceUrls:
          type: array
          items:
            type: string
        resourceNames:
          type: array
          items:
            type: string
      title: |-
        Properties of an individual rules that grant permissions to resources.
        ////////////////////////////////////////
    storageSubject:
      type: object
      properties:
        id:
          type: string
          title: ID is derived from base64 of cluster id and name
        kind:
          $ref: '#/components/schemas/storageSubjectKind'
        name:
          type: string
        namespace:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
      title: >-
        Properties of an individual subjects who are granted roles via role
        bindings.

        ////////////////////////////////////////
    storageSubjectKind:
      type: string
      enum:
        - UNSET_KIND
        - SERVICE_ACCOUNT
        - USER
        - GROUP
      default: UNSET_KIND
    v1GetRoleBindingResponse:
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/storageK8sRoleBinding'
    v1GetRoleResponse:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/storageK8sRole'
    v1GetSubjectResponse:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/storageSubject'
        clusterRoles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
        scopedRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopedRoles'
    v1ListRoleBindingsResponse:
      type: object
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRoleBinding'
      title: |-
        A list of k8s role bindings (free of scoped information)
        Next Tag: 2
    v1ListRolesResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
      title: |-
        A list of k8s roles (free of scoped information)
        Next Tag: 2
    v1ListSubjectsResponse:
      type: object
      properties:
        subjectAndRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1SubjectAndRoles'
      title: >-
        A list of k8s subjects (users and groups only, for service accounts, try
        the service account service)

        Next Tag: 2
    v1ScopedRoles:
      type: object
      properties:
        namespace:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
    v1SubjectAndRoles:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/storageSubject'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
    ReportConfigurationReportType:
      type: string
      enum:
        - VULNERABILITY
      default: VULNERABILITY
    ReportConfigurationServiceUpdateReportConfigurationBody:
      type: object
      properties:
        reportConfig:
          $ref: '#/components/schemas/storageReportConfiguration'
    ReportLastRunStatusRunStatus:
      type: string
      enum:
        - SUCCESS
        - FAILURE
      default: SUCCESS
    VulnerabilityReportFiltersFixability:
      type: string
      enum:
        - BOTH
        - FIXABLE
        - NOT_FIXABLE
      default: BOTH
    VulnerabilityReportFiltersImageType:
      type: string
      enum:
        - DEPLOYED
        - WATCHED
      default: DEPLOYED
    storageEmailNotifierConfiguration:
      type: object
      properties:
        notifierId:
          type: string
        mailingLists:
          type: array
          items:
            type: string
        customSubject:
          type: string
        customBody:
          type: string
    storageNotifierConfiguration:
      type: object
      properties:
        emailConfig:
          $ref: '#/components/schemas/storageEmailNotifierConfiguration'
        id:
          type: string
    storageReportConfiguration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/ReportConfigurationReportType'
        vulnReportFilters:
          $ref: '#/components/schemas/storageVulnerabilityReportFilters'
        scopeId:
          type: string
        emailConfig:
          $ref: '#/components/schemas/storageEmailNotifierConfiguration'
        schedule:
          $ref: '#/components/schemas/storageSchedule'
        lastRunStatus:
          $ref: '#/components/schemas/storageReportLastRunStatus'
        lastSuccessfulRunTime:
          type: string
          format: date-time
        resourceScope:
          $ref: '#/components/schemas/storageResourceScope'
        notifiers:
          type: array
          items:
            $ref: '#/components/schemas/storageNotifierConfiguration'
        creator:
          $ref: '#/components/schemas/storageSlimUser'
        version:
          type: integer
          format: int32
          title: >-
            version=0 is unmigrated v1 config, version=1 is migrated v1 config
            and version=2 is v2 config
    storageReportLastRunStatus:
      type: object
      properties:
        reportStatus:
          $ref: '#/components/schemas/ReportLastRunStatusRunStatus'
        lastRunTime:
          type: string
          format: date-time
        errorMsg:
          type: string
    storageResourceScope:
      type: object
      properties:
        collectionId:
          type: string
    storageVulnerabilityReportFilters:
      type: object
      properties:
        fixability:
          $ref: '#/components/schemas/VulnerabilityReportFiltersFixability'
        sinceLastReport:
          type: boolean
        severities:
          type: array
          items:
            $ref: '#/components/schemas/storageVulnerabilitySeverity'
        imageTypes:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityReportFiltersImageType'
        allVuln:
          type: boolean
        sinceLastSentScheduledReport:
          type: boolean
        sinceStartDate:
          type: string
          format: date-time
        accessScopeRules:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAccessScopeRules'
        includeNvdCvss:
          type: boolean
        includeEpssProbability:
          type: boolean
        includeAdvisory:
          type: boolean
    v1CountReportConfigurationsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1GetReportConfigurationResponse:
      type: object
      properties:
        reportConfig:
          $ref: '#/components/schemas/storageReportConfiguration'
    v1GetReportConfigurationsResponse:
      type: object
      properties:
        reportConfigs:
          type: array
          items:
            $ref: '#/components/schemas/storageReportConfiguration'
    v1PostReportConfigurationRequest:
      type: object
      properties:
        reportConfig:
          $ref: '#/components/schemas/storageReportConfiguration'
    v1PostReportConfigurationResponse:
      type: object
      properties:
        reportConfig:
          $ref: '#/components/schemas/storageReportConfiguration'
    CollectionServiceUpdateCollectionBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        resourceSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageResourceSelector'
        embeddedCollectionIds:
          type: array
          items:
            type: string
    ResourceCollectionEmbeddedResourceCollection:
      type: object
      properties:
        id:
          type: string
          title: '''id'' is searchable to force a separate table'
    storageMatchType:
      type: string
      enum:
        - EXACT
        - REGEX
      default: EXACT
    storageResourceCollection:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/storageSlimUser'
        updatedBy:
          $ref: '#/components/schemas/storageSlimUser'
        resourceSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageResourceSelector'
          description: >-
            `resource_selectors` resolve as disjunction (OR) with each-other and
            with selectors from `embedded_collections`. For MVP, the size of
            resource_selectors will at most be 1 from UX standpoint.
        embeddedCollections:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCollectionEmbeddedResourceCollection'
    storageResourceSelector:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/storageSelectorRule'
          description: '`rules` resolve as a conjunction (AND).'
    storageRuleValue:
      type: object
      properties:
        value:
          type: string
        matchType:
          $ref: '#/components/schemas/storageMatchType'
    storageSelectorRule:
      type: object
      properties:
        fieldName:
          type: string
          title: |-
            `field_name` can be one of the following:
            - Cluster
            - Cluster Label
            - Namespace
            - Namespace Label
            - Namespace Annotation
            - Deployment
            - Deployment Label
            - Deployment Annotation
        operator:
          $ref: '#/components/schemas/storageBooleanOperator'
        values:
          type: array
          items:
            $ref: '#/components/schemas/storageRuleValue'
          description: >-
            `values` resolve as a conjunction (AND) or disjunction (OR)
            depending on operator. For MVP, only OR is supported from UX
            standpoint.
    v1CollectionDeploymentMatchOptions:
      type: object
      properties:
        withMatches:
          type: boolean
        filterQuery:
          $ref: '#/components/schemas/v1RawQuery'
    v1CreateCollectionRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        resourceSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageResourceSelector'
        embeddedCollectionIds:
          type: array
          items:
            type: string
    v1CreateCollectionResponse:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/storageResourceCollection'
    v1DryRunCollectionRequest:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          title: set if dryrun on existing collections
        description:
          type: string
        resourceSelectors:
          type: array
          items:
            $ref: '#/components/schemas/storageResourceSelector'
        embeddedCollectionIds:
          type: array
          items:
            type: string
        options:
          $ref: '#/components/schemas/v1CollectionDeploymentMatchOptions'
    v1DryRunCollectionResponse:
      type: object
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/storageListDeployment'
    v1GetCollectionCountResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1GetCollectionResponse:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/storageResourceCollection'
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/storageListDeployment'
    v1ListCollectionSelectorsResponse:
      type: object
      properties:
        selectors:
          type: array
          items:
            type: string
    v1ListCollectionsResponse:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/storageResourceCollection'
    v1UpdateCollectionResponse:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/storageResourceCollection'
    ComputeEffectiveAccessScopeRequestDetail:
      type: string
      enum:
        - STANDARD
        - MINIMAL
        - HIGH
      default: STANDARD
    ComputeEffectiveAccessScopeRequestPayload:
      type: object
      properties:
        simpleRules:
          $ref: '#/components/schemas/SimpleAccessScopeRules'
    RoleServicePutPermissionSetBody:
      type: object
      properties:
        name:
          type: string
          description: >-
            `name` and `description` are provided by the user and can be
            changed.
        description:
          type: string
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
        traits:
          $ref: '#/components/schemas/storageTraits'
      description: This encodes a set of permissions for StackRox resources.
    RoleServicePutSimpleAccessScopeBody:
      type: object
      properties:
        name:
          type: string
          description: >-
            `name` and `description` are provided by the user and can be
            changed.
        description:
          type: string
        rules:
          $ref: '#/components/schemas/SimpleAccessScopeRules'
        traits:
          $ref: '#/components/schemas/storageTraits'
      description: >-
        Simple access scope is a (simple) selection criteria for scoped
        resources.

        It does *not* allow multi-component AND-rules nor set operations on
        names.
    RoleServiceUpdateRoleBody:
      type: object
      properties:
        description:
          type: string
        permissionSetId:
          type: string
          description: The associated PermissionSet and AccessScope for this Role.
        accessScopeId:
          type: string
        globalAccess:
          $ref: '#/components/schemas/storageAccess'
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
          description: Deprecated 2021-04-20 in favor of `permission_set_id`.
        traits:
          $ref: '#/components/schemas/storageTraits'
      description: |-
        A role specifies which actions are allowed for which subset of cluster
        objects. Permissions be can either specified directly via setting
        resource_to_access together with global_access or by referencing a
        permission set by its id in permission_set_name.
    storageEffectiveAccessScope:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/storageEffectiveAccessScopeCluster'
      description: >-
        EffectiveAccessScope describes which clusters and namespaces are "in
        scope"

        given current state. Basically, if AccessScope is applied to the
        currently

        known clusters and namespaces, the result is EffectiveAccessScope.


        EffectiveAccessScope represents a tree with nodes marked as included and

        excluded. If a node is included, all its child nodes are included.
    storageEffectiveAccessScopeCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state:
          $ref: '#/components/schemas/storageEffectiveAccessScopeState'
        labels:
          type: object
          additionalProperties:
            type: string
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/storageEffectiveAccessScopeNamespace'
    storageEffectiveAccessScopeNamespace:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state:
          $ref: '#/components/schemas/storageEffectiveAccessScopeState'
        labels:
          type: object
          additionalProperties:
            type: string
    storageEffectiveAccessScopeState:
      type: string
      enum:
        - UNKNOWN
        - INCLUDED
        - EXCLUDED
        - PARTIAL
      default: UNKNOWN
    storagePermissionSet:
      type: object
      properties:
        id:
          type: string
          description: id is generated and cannot be changed.
        name:
          type: string
          description: >-
            `name` and `description` are provided by the user and can be
            changed.
        description:
          type: string
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
        traits:
          $ref: '#/components/schemas/storageTraits'
      description: This encodes a set of permissions for StackRox resources.
    storageRole:
      type: object
      properties:
        name:
          type: string
          description: >-
            `name` and `description` are provided by the user and can be
            changed.
        description:
          type: string
        permissionSetId:
          type: string
          description: The associated PermissionSet and AccessScope for this Role.
        accessScopeId:
          type: string
        globalAccess:
          $ref: '#/components/schemas/storageAccess'
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
          description: Deprecated 2021-04-20 in favor of `permission_set_id`.
        traits:
          $ref: '#/components/schemas/storageTraits'
      description: |-
        A role specifies which actions are allowed for which subset of cluster
        objects. Permissions be can either specified directly via setting
        resource_to_access together with global_access or by referencing a
        permission set by its id in permission_set_name.
    storageSimpleAccessScope:
      type: object
      properties:
        id:
          type: string
          description: '`id` is generated and cannot be changed.'
        name:
          type: string
          description: >-
            `name` and `description` are provided by the user and can be
            changed.
        description:
          type: string
        rules:
          $ref: '#/components/schemas/SimpleAccessScopeRules'
        traits:
          $ref: '#/components/schemas/storageTraits'
      description: >-
        Simple access scope is a (simple) selection criteria for scoped
        resources.

        It does *not* allow multi-component AND-rules nor set operations on
        names.
    v1GetClustersForPermissionsResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopeObject'
    v1GetNamespacesForClusterAndPermissionsResponse:
      type: object
      properties:
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopeObject'
    v1GetPermissionsResponse:
      type: object
      properties:
        resourceToAccess:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/storageAccess'
      description: >-
        GetPermissionsResponse is wire-compatible with the old format of the
        Role

        message and represents a collection of aggregated permissions.
    v1GetResourcesResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            type: string
    v1GetRolesResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/storageRole'
    v1ListPermissionSetsResponse:
      type: object
      properties:
        permissionSets:
          type: array
          items:
            $ref: '#/components/schemas/storagePermissionSet'
    v1ListSimpleAccessScopesResponse:
      type: object
      properties:
        accessScopes:
          type: array
          items:
            $ref: '#/components/schemas/storageSimpleAccessScope'
    v1ScopeObject:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      description: >-
        ScopeObject represents an ID, name pair, which can apply to any

        entity that takes part in an access scope (so far Cluster and
        Namespace).
    SearchResponseCount:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/v1SearchCategory'
        count:
          type: string
          format: int64
    SearchResultMatches:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    v1AutocompleteResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    v1SearchCategory:
      type: string
      enum:
        - SEARCH_UNSET
        - ALERTS
        - IMAGES
        - IMAGE_COMPONENTS
        - IMAGE_VULN_EDGE
        - IMAGE_COMPONENT_EDGE
        - POLICIES
        - DEPLOYMENTS
        - ACTIVE_COMPONENT
        - PODS
        - SECRETS
        - PROCESS_INDICATORS
        - COMPLIANCE
        - CLUSTERS
        - NAMESPACES
        - NODES
        - NODE_COMPONENTS
        - NODE_VULN_EDGE
        - NODE_COMPONENT_EDGE
        - NODE_COMPONENT_CVE_EDGE
        - COMPLIANCE_STANDARD
        - COMPLIANCE_CONTROL_GROUP
        - COMPLIANCE_CONTROL
        - SERVICE_ACCOUNTS
        - ROLES
        - ROLEBINDINGS
        - REPORT_CONFIGURATIONS
        - PROCESS_BASELINES
        - SUBJECTS
        - RISKS
        - VULNERABILITIES
        - CLUSTER_VULNERABILITIES
        - IMAGE_VULNERABILITIES
        - NODE_VULNERABILITIES
        - COMPONENT_VULN_EDGE
        - CLUSTER_VULN_EDGE
        - NETWORK_ENTITY
        - VULN_REQUEST
        - NETWORK_BASELINE
        - NETWORK_POLICIES
        - PROCESS_BASELINE_RESULTS
        - COMPLIANCE_METADATA
        - COMPLIANCE_RESULTS
        - COMPLIANCE_DOMAIN
        - CLUSTER_HEALTH
        - POLICY_CATEGORIES
        - IMAGE_INTEGRATIONS
        - COLLECTIONS
        - POLICY_CATEGORY_EDGE
        - PROCESS_LISTENING_ON_PORT
        - API_TOKEN
        - REPORT_METADATA
        - REPORT_SNAPSHOT
        - COMPLIANCE_INTEGRATIONS
        - COMPLIANCE_SCAN_CONFIG
        - COMPLIANCE_SCAN
        - COMPLIANCE_CHECK_RESULTS
        - BLOB
        - ADMINISTRATION_EVENTS
        - COMPLIANCE_SCAN_CONFIG_STATUS
        - ADMINISTRATION_USAGE
        - COMPLIANCE_PROFILES
        - COMPLIANCE_RULES
        - COMPLIANCE_SCAN_SETTING_BINDINGS
        - COMPLIANCE_SUITES
        - CLOUD_SOURCES
        - DISCOVERED_CLUSTERS
        - COMPLIANCE_REMEDIATIONS
        - COMPLIANCE_BENCHMARKS
        - AUTH_PROVIDERS
        - COMPLIANCE_REPORT_SNAPSHOT
        - IMAGE_COMPONENTS_V2
        - IMAGE_VULNERABILITIES_V2
      default: SEARCH_UNSET
      title: 'Next available tag: 74'
    v1SearchOptionsResponse:
      type: object
      properties:
        options:
          type: array
          items:
            type: string
    v1SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/v1SearchResult'
        counts:
          type: array
          items:
            $ref: '#/components/schemas/SearchResponseCount'
    v1SearchResult:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          $ref: '#/components/schemas/v1SearchCategory'
        fieldToMatches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SearchResultMatches'
        score:
          type: number
          format: double
        location:
          type: string
          description: |-
            Location is intended to be a unique, yet human readable,
            identifier for the result. For example, for a deployment,
            the location will be "$cluster_name/$namespace/$deployment_name.
            It is displayed in the UI in the global search results, underneath
            the name for each result.
    ImagePullSecretRegistry:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
    storageCert:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/storageCertName'
        issuer:
          $ref: '#/components/schemas/storageCertName'
        sans:
          type: array
          items:
            type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        algorithm:
          type: string
    storageCertName:
      type: object
      properties:
        commonName:
          type: string
        country:
          type: string
        organization:
          type: string
        organizationUnit:
          type: string
        locality:
          type: string
        province:
          type: string
        streetAddress:
          type: string
        postalCode:
          type: string
        names:
          type: array
          items:
            type: string
    storageImagePullSecret:
      type: object
      properties:
        registries:
          type: array
          items:
            $ref: '#/components/schemas/ImagePullSecretRegistry'
    storageListSecret:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        types:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretType'
        createdAt:
          type: string
          format: date-time
    storageSecret:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        clusterId:
          type: string
        clusterName:
          type: string
        namespace:
          type: string
        type:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        files:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretDataFile'
          description: |-
            Metadata about the secrets.
            The secret need not be a file, but rather may be an arbitrary value.
        relationship:
          $ref: '#/components/schemas/storageSecretRelationship'
      title: |-
        Flat secret object.
        Any properties of an individual secret.
        (regardless of time, scope, or context)
        ////////////////////////////////////////
    storageSecretContainerRelationship:
      type: object
      properties:
        id:
          type: string
          description: Id of the container the secret is mounted in.
        path:
          type: string
          description: Path is a container specific mounting directory.
      title: |-
        Secrets can be mounted in a path in a container.
        Next Tag: 3
    storageSecretDataFile:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/storageSecretType'
        cert:
          $ref: '#/components/schemas/storageCert'
        imagePullSecret:
          $ref: '#/components/schemas/storageImagePullSecret'
      description: >-
        Metadata about secret. Additional information is presented for a
        certificate file and

        imagePullSecret, but the "file" may also represent some arbitrary value.
    storageSecretDeploymentRelationship:
      type: object
      properties:
        id:
          type: string
          description: Id of the deployment using the secret within a container.
        name:
          type: string
          description: Name of the deployment.
      title: |-
        Secrets can be used by a deployment.
        Next Tag: 3
    storageSecretRelationship:
      type: object
      properties:
        id:
          type: string
          title: Secret id
        containerRelationships:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretContainerRelationship'
          title: Container id to relationship.s
        deploymentRelationships:
          type: array
          items:
            $ref: '#/components/schemas/storageSecretDeploymentRelationship'
          description: Deployment id to relationship.
      title: |-
        The combined relationships that belong to the secret.
        Next Tag: 6
    storageSecretType:
      type: string
      enum:
        - UNDETERMINED
        - PUBLIC_CERTIFICATE
        - CERTIFICATE_REQUEST
        - PRIVACY_ENHANCED_MESSAGE
        - OPENSSH_PRIVATE_KEY
        - PGP_PRIVATE_KEY
        - EC_PRIVATE_KEY
        - RSA_PRIVATE_KEY
        - DSA_PRIVATE_KEY
        - CERT_PRIVATE_KEY
        - ENCRYPTED_PRIVATE_KEY
        - IMAGE_PULL_SECRET
      default: UNDETERMINED
    v1CountSecretsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    v1ListSecretsResponse:
      type: object
      properties:
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/storageListSecret'
      title: |-
        A list of secrets with their relationships.
        Next Tag: 2
    GetSensorUpgradeConfigResponseSensorAutoUpgradeFeatureStatus:
      type: string
      enum:
        - NOT_SUPPORTED
        - SUPPORTED
      default: NOT_SUPPORTED
    GetSensorUpgradeConfigResponseUpgradeConfig:
      type: object
      properties:
        enableAutoUpgrade:
          type: boolean
        autoUpgradeFeature:
          $ref: >-
            #/components/schemas/GetSensorUpgradeConfigResponseSensorAutoUpgradeFeatureStatus
    storageSensorUpgradeConfig:
      type: object
      properties:
        enableAutoUpgrade:
          type: boolean
          description: Whether to automatically trigger upgrades for out-of-date sensors.
      description: >-
        SensorUpgradeConfig encapsulates configuration relevant to sensor
        auto-upgrades.
    v1GetSensorUpgradeConfigResponse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/GetSensorUpgradeConfigResponseUpgradeConfig'
    v1UpdateSensorUpgradeConfigRequest:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/storageSensorUpgradeConfig'
    storageServiceAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        clusterName:
          type: string
        clusterId:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        automountToken:
          type: boolean
        secrets:
          type: array
          items:
            type: string
        imagePullSecrets:
          type: array
          items:
            type: string
      title: |-
        Any properties of an individual service account.
        (regardless of time, scope, or context)
        ////////////////////////////////////////
    v1GetServiceAccountResponse:
      type: object
      properties:
        saAndRole:
          $ref: '#/components/schemas/v1ServiceAccountAndRoles'
      title: |-
        One service account
        Next Tag: 2
    v1ListServiceAccountResponse:
      type: object
      properties:
        saAndRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1ServiceAccountAndRoles'
      title: |-
        A list of service accounts (free of scoped information)
        Next Tag: 2
    v1SADeploymentRelationship:
      type: object
      properties:
        id:
          type: string
          title: Id of the deployment using the service account
        name:
          type: string
          description: Name of the deployment.
      title: |-
        Service accounts can be used by a deployment.
        Next Tag: 3
    v1ServiceAccountAndRoles:
      type: object
      properties:
        serviceAccount:
          $ref: '#/components/schemas/storageServiceAccount'
        clusterRoles:
          type: array
          items:
            $ref: '#/components/schemas/storageK8sRole'
        scopedRoles:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopedRoles'
        deploymentRelationships:
          type: array
          items:
            $ref: '#/components/schemas/v1SADeploymentRelationship'
      title: |-
        A service account and the roles that reference it
        Next Tag: 5
    v1Authorities:
      type: object
      properties:
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/v1Authority'
    v1Authority:
      type: object
      properties:
        certificatePem:
          type: string
          format: byte
    v1CreateServiceIdentityRequest:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/storageServiceType'
    v1CreateServiceIdentityResponse:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/storageServiceIdentity'
        certificatePem:
          type: string
          format: byte
        privateKeyPem:
          type: string
          format: byte
    v1ServiceIdentityResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            $ref: '#/components/schemas/storageServiceIdentity'
    CosignPublicKeyVerificationPublicKey:
      type: object
      properties:
        name:
          type: string
        publicKeyPemEnc:
          type: string
    SignatureIntegrationServicePutSignatureIntegrationBody:
      type: object
      properties:
        name:
          type: string
        cosign:
          $ref: '#/components/schemas/storageCosignPublicKeyVerification'
        cosignCertificates:
          type: array
          items:
            $ref: '#/components/schemas/storageCosignCertificateVerification'
        transparencyLog:
          $ref: '#/components/schemas/storageTransparencyLogVerification'
    storageCertificateTransparencyLogVerification:
      type: object
      properties:
        enabled:
          type: boolean
          description: >-
            Validate the inclusion of certificates into a certificate
            transparency log.

            Disables validation if not enabled.
        publicKeyPemEnc:
          type: string
          description: >-
            PEM encoded public key used to validate the proof of inclusion into
            the

            certificate transparency log. Defaults to the key of the public
            Sigstore

            instance if left empty.
      description: |-
        Validate that the signature certificate contains a signed
        certificate timestamp as proof of inclusion into the certificate
        transparency log.
    storageCosignCertificateVerification:
      type: object
      properties:
        certificatePemEnc:
          type: string
          description: |-
            PEM encoded certificate to use for verification. Leave empty when
            using short-lived certificates as issued by Fulcio.
        certificateChainPemEnc:
          type: string
          description: >-
            PEM encoded certificate chain to use for verification. Defaults to
            the

            root certificate authority of the public Sigstore instance if left
            empty.
        certificateOidcIssuer:
          type: string
          description: >-
            Certificate OIDC issuer to verify against.

            This supports regular expressions following the RE2 syntax:
            https://github.com/google/re2/wiki/Syntax.

            In case the certificate does not specify an OIDC issuer, you may use
            '.*' as the OIDC issuer. However,

            it is recommended to use Fulcio compatible certificates according to
            the specification:

            https://github.com/sigstore/fulcio/blob/main/docs/certificate-specification.md.
        certificateIdentity:
          type: string
          description: >-
            Certificate identity to verify against.

            This supports regular expressions following the RE2 syntax:
            https://github.com/google/re2/wiki/Syntax.

            In case the certificate does not specify an identity, you may use
            '.*' as the identity. However, it is

            recommended to use Fulcio compatible certificates according to the
            specification:

            https://github.com/sigstore/fulcio/blob/main/docs/certificate-specification.md.
        certificateTransparencyLog:
          $ref: '#/components/schemas/storageCertificateTransparencyLogVerification'
      description: >-
        Holds all verification data for verifying certificates attached to
        cosign signatures.

        If only the certificate is given, the Fulcio trusted root chain will be
        assumed and verified against.

        If only the chain is given, this will be used over the Fulcio trusted
        root chain for verification.

        If no certificate or chain is given, the Fulcio trusted root chain will
        be assumed and verified against.
    storageCosignPublicKeyVerification:
      type: object
      properties:
        publicKeys:
          type: array
          items:
            $ref: '#/components/schemas/CosignPublicKeyVerificationPublicKey'
    storageSignatureIntegration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cosign:
          $ref: '#/components/schemas/storageCosignPublicKeyVerification'
        cosignCertificates:
          type: array
          items:
            $ref: '#/components/schemas/storageCosignCertificateVerification'
        transparencyLog:
          $ref: '#/components/schemas/storageTransparencyLogVerification'
    storageTransparencyLogVerification:
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            Validate the inclusion of signatures into a transparency log.
            Disables validation if not enabled.
        url:
          type: string
          description: >-
            The URL of the transparency log. Required for online confirmation of

            inclusion into the transparency log. Defaults to the Sigstore
            instance

            `rekor.sigstore.dev`.
        validateOffline:
          type: boolean
          description: >-
            Force offline validation of the signature proof of inclusion into
            the

            transparency log. Do not fall back to request confirmation from the

            transparency log over network.
        publicKeyPemEnc:
          type: string
          description: >-
            PEM encoded public key used to validate the proof of inclusion into
            the

            transparency log. Defaults to the key of the public Sigstore
            instance if

            left empty.
      description: >-
        Validate the inclusion of signature signing events into a transparency
        log.
    v1ListSignatureIntegrationsResponse:
      type: object
      properties:
        integrations:
          type: array
          items:
            $ref: '#/components/schemas/storageSignatureIntegration'
    centralTelemetryConfig:
      type: object
      properties:
        userId:
          type: string
          title: 'API user ID hash:'
        endpoint:
          type: string
          title: 'An empty endpoint means using default endpoint:'
        storageKeyV1:
          type: string
          title: 'Telemetry storage service key:'
    v1ConfigureTelemetryRequest:
      type: object
      properties:
        enabled:
          type: boolean
    v1GetUsersAttributesResponse:
      type: object
      properties:
        usersAttributes:
          type: array
          items:
            $ref: '#/components/schemas/v1UserAttributeTuple'
      title: 'Next Tag: 2'
    v1GetUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/storageUser'
      title: 'Next Tag: 2'
    v1UserAttributeTuple:
      type: object
      properties:
        authProviderId:
          type: string
        key:
          type: string
        value:
          type: string
      title: >-
        UserAttributeTuple descript the auth:key:value tuple that decides group
        membership.

        Next Tag: 4
    RequestExpiryExpiryType:
      type: string
      enum:
        - TIME
        - ALL_CVE_FIXABLE
        - ANY_CVE_FIXABLE
      default: TIME
    ScopeGlobal:
      type: object
    VulnerabilityRequestCVEs:
      type: object
      properties:
        cves:
          type: array
          items:
            type: string
          description: >-
            These are (NVD) vulnerability identifiers, `cve` field of
            `storage.CVE`, and *not* the `id` field.

            For example, CVE-2021-44832.
    VulnerabilityRequestScopeImage:
      type: object
      properties:
        registry:
          type: string
        remote:
          type: string
        tag:
          type: string
    VulnerabilityRequestServiceApproveVulnerabilityRequestBody:
      type: object
      properties:
        comment:
          type: string
    VulnerabilityRequestServiceDenyVulnerabilityRequestBody:
      type: object
      properties:
        comment:
          type: string
    VulnerabilityRequestServiceUpdateVulnerabilityRequestBody:
      type: object
      properties:
        comment:
          type: string
        expiry:
          $ref: '#/components/schemas/storageRequestExpiry'
    storageApprover:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    storageDeferralRequest:
      type: object
      properties:
        expiry:
          $ref: '#/components/schemas/storageRequestExpiry'
    storageDeferralUpdate:
      type: object
      properties:
        CVEs:
          type: array
          items:
            type: string
        expiry:
          $ref: '#/components/schemas/storageRequestExpiry'
    storageFalsePositiveRequest:
      type: object
    storageFalsePositiveUpdate:
      type: object
      properties:
        CVEs:
          type: array
          items:
            type: string
    storageRequestComment:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        user:
          $ref: '#/components/schemas/storageSlimUser'
        createdAt:
          type: string
          format: date-time
    storageRequestExpiry:
      type: object
      properties:
        expiresWhenFixed:
          type: boolean
          description: >-
            Indicates that this request expires when the associated
            vulnerability is fixed.
        expiresOn:
          type: string
          format: date-time
          description: Indicates the timestamp when this request expires.
        expiryType:
          $ref: '#/components/schemas/RequestExpiryExpiryType'
    storageRequestStatus:
      type: string
      enum:
        - PENDING
        - APPROVED
        - DENIED
        - APPROVED_PENDING_UPDATE
      default: PENDING
      description: >-
        Indicates the status of a request. Requests canceled by the user before
        they are acted upon by the approver

        are not tracked/persisted (with the exception of audit logs if it is
        turned on).

         - PENDING: Default request state. It indicates that the request has not been fulfilled and that an action (approve/deny) is required.
         - APPROVED: Indicates that the request has been approved by the approver.
         - DENIED: Indicates that the request has been denied by the approver.
         - APPROVED_PENDING_UPDATE: Indicates that the original request was approved, but an update is still pending an approval or denial.
    storageRequester:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    storageVulnerabilityRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        targetState:
          $ref: '#/components/schemas/storageVulnerabilityState'
        status:
          $ref: '#/components/schemas/storageRequestStatus'
        expired:
          type: boolean
          description: >-
            Indicates if this request is a historical request that is no longer
            in effect

            due to deferral expiry, cancellation, or restarting cve observation.
        requestor:
          $ref: '#/components/schemas/storageSlimUser'
        approvers:
          type: array
          items:
            $ref: '#/components/schemas/storageSlimUser'
        createdAt:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/storageRequestComment'
        scope:
          $ref: '#/components/schemas/storageVulnerabilityRequestScope'
        requesterV2:
          $ref: '#/components/schemas/storageRequester'
        approversV2:
          type: array
          items:
            $ref: '#/components/schemas/storageApprover'
        deferralReq:
          $ref: '#/components/schemas/storageDeferralRequest'
        fpRequest:
          $ref: '#/components/schemas/storageFalsePositiveRequest'
        cves:
          $ref: '#/components/schemas/VulnerabilityRequestCVEs'
        updatedDeferralReq:
          $ref: '#/components/schemas/storageDeferralRequest'
        deferralUpdate:
          $ref: '#/components/schemas/storageDeferralUpdate'
        falsePositiveUpdate:
          $ref: '#/components/schemas/storageFalsePositiveUpdate'
      description: >-
        Next available tag: 30

        VulnerabilityRequest encapsulates a request such as deferral request and
        false-positive request.
    storageVulnerabilityRequestScope:
      type: object
      properties:
        imageScope:
          $ref: '#/components/schemas/VulnerabilityRequestScopeImage'
        globalScope:
          $ref: '#/components/schemas/ScopeGlobal'
    v1ApproveVulnRequestResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1DeferVulnRequest:
      type: object
      properties:
        cve:
          type: string
          description: This field indicates the CVEs requested to be deferred.
        comment:
          type: string
        scope:
          $ref: '#/components/schemas/storageVulnerabilityRequestScope'
        expiresWhenFixed:
          type: boolean
        expiresOn:
          type: string
          format: date-time
      title: 'next available tag: 6'
    v1DeferVulnResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1DenyVulnRequestResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1FalsePositiveVulnRequest:
      type: object
      properties:
        cve:
          type: string
          description: >-
            This field indicates the CVE requested to be marked as
            false-positive.
        scope:
          $ref: '#/components/schemas/storageVulnerabilityRequestScope'
        comment:
          type: string
    v1FalsePositiveVulnResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1GetVulnerabilityRequestResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1ListVulnerabilityRequestsResponse:
      type: object
      properties:
        requestInfos:
          type: array
          items:
            $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1UndoVulnRequestResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1UpdateVulnRequestResponse:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/storageVulnerabilityRequest'
    v1VulnMgmtExportWorkloadsResponse:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/storageDeployment'
        images:
          type: array
          items:
            $ref: '#/components/schemas/storageImage'
      description: |-
        The workloads response contains the full image details including the
        vulnerability data.
  ##########################
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
security:
  - basicAuth: [ ]
  - bearerAuth: [ ]
