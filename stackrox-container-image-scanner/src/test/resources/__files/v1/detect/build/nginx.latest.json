{
  "alerts": [
    {
      "id": "95c7e3e1-4aa6-49be-89a6-07880921e6a5",
      "policy": {
        "id": "08a06f5c-eed0-4fb8-a09e-16cc975e7beb",
        "name": "Docker CIS 4.4: Ensure images are scanned and rebuilt to include security patches",
        "description": "Images should be scanned frequently for any vulnerabilities...",
        "rationale": "Vulnerabilities are loopholes or bugs that can be exploited by hackers or malicious users, and security patches are updates to resolve these vulnerabilities. Image vulnerability scanning tools can be use to find vulnerabilities in images and then check for available patches to mitigate these. Patches update the system to a more recent code base which does not contain these problems, and being on a supported version of the code base is very important, as vendors do not tend to supply patches for older versions which have gone out of support. Security patches should be evaluated before applying and patching should be implemented in line with the organization's IT Security Policy. Care should be taken with the results returned by vulnerability assessment tools, as some will simply return results based on software banners, and these may not be entirely accurate.",
        "remediation": "Images should be re-built ensuring that the latest version of the base images are used...",
        "disabled": false,
        "categories": [
          "Docker CIS"
        ],
        "fields": null,
        "lifecycleStages": [
          "BUILD"
        ],
        "eventSource": "NOT_APPLICABLE",
        "whitelists": [],
        "exclusions": [],
        "scope": [],
        "severity": "MEDIUM_SEVERITY",
        "enforcementActions": [
          "FAIL_BUILD_ENFORCEMENT"
        ],
        "notifiers": [],
        "lastUpdated": null,
        "SORTName": "Docker CIS 4.4: Ensure images are scanned and rebuilt to include security patches",
        "SORTLifecycleStage": "BUILD",
        "SORTEnforcement": false,
        "policyVersion": "1.1",
        "policySections": [
          {
            "sectionName": "",
            "policyGroups": [
              {
                "fieldName": "Fixed By",
                "booleanOperator": "OR",
                "negate": false,
                "values": [
                  {
                    "value": ".*"
                  }
                ]
              }
            ]
          }
        ],
        "mitreAttackVectors": [],
        "criteriaLocked": true,
        "mitreVectorsLocked": true
      },
      "lifecycleStage": "BUILD",
      "image": {
        "id": "",
        "name": {
          "registry": "docker.io",
          "remote": "library/nginx",
          "tag": "latest",
          "fullName": "docker.io/library/nginx:latest"
        },
        "notPullable": false
      },
      "violations": [
        {
          "message": "Fixable CVE-2021-37750 (CVSS 6.5) (severity Moderate) found in component 'krb5' (version 1.17-3+deb10u2), resolved by version 1.17-3+deb10u3",
          "type": "GENERIC",
          "time": null
        }
      ],
      "processViolation": null,
      "enforcement": null,
      "time": "2021-10-13T09:32:37.118028191Z",
      "firstOccurred": null,
      "resolvedAt": null,
      "state": "ACTIVE",
      "snoozeTill": null,
      "tags": []
    },
    {
      "id": "efecf01b-7416-429d-8a6b-8712d692c1e8",
      "policy": {
        "id": "2e90874a-3521-44de-85c6-5720f519a701",
        "name": "Latest tag",
        "description": "",
        "rationale": "",
        "remediation": "",
        "disabled": false,
        "categories": [
          "Image Assurance"
        ],
        "fields": null,
        "lifecycleStages": [
          "BUILD"
        ],
        "eventSource": "NOT_APPLICABLE",
        "whitelists": [],
        "exclusions": [],
        "scope": [],
        "severity": "MEDIUM_SEVERITY",
        "enforcementActions": [
          "FAIL_BUILD_ENFORCEMENT"
        ],
        "notifiers": [],
        "lastUpdated": "2021-10-12T14:02:18.391505704Z",
        "SORTName": "Latest tag",
        "SORTLifecycleStage": "BUILD",
        "SORTEnforcement": true,
        "policyVersion": "1.1",
        "policySections": [
          {
            "sectionName": "",
            "policyGroups": [
              {
                "fieldName": "Image Tag",
                "booleanOperator": "OR",
                "negate": false,
                "values": [
                  {
                    "value": "latest"
                  }
                ]
              }
            ]
          }
        ],
        "mitreAttackVectors": [],
        "criteriaLocked": true,
        "mitreVectorsLocked": true
      },
      "lifecycleStage": "BUILD",
      "image": {
        "id": "",
        "name": {
          "registry": "docker.io",
          "remote": "library/nginx",
          "tag": "latest",
          "fullName": "docker.io/library/nginx:latest"
        },
        "notPullable": false
      },
      "violations": [
        {
          "message": "Image has tag 'latest'",
          "type": "GENERIC",
          "time": null
        }
      ],
      "processViolation": null,
      "enforcement": null,
      "time": "2021-10-13T09:32:37.118203193Z",
      "firstOccurred": null,
      "resolvedAt": null,
      "state": "ACTIVE",
      "snoozeTill": null,
      "tags": []
    },
    {
      "id": "220d011e-78a2-45ae-b24b-9ad29e0228c3",
      "policy": {
        "id": "dce17697-1b72-49d2-b18a-05d893cd9368",
        "name": "Docker CIS 4.1: Ensure That a User for the Container Has Been Created",
        "description": "Containers should run as a non-root user",
        "rationale": "It is good practice to run the container as a non-root user, where possible. This can be done via the USER directive in the Dockerfile.",
        "remediation": "Ensure that the Dockerfile for each container switches from the root user",
        "disabled": false,
        "categories": [
          "Docker CIS"
        ],
        "fields": null,
        "lifecycleStages": [
          "BUILD",
          "DEPLOY"
        ],
        "eventSource": "NOT_APPLICABLE",
        "whitelists": [],
        "exclusions": [
          {
            "name": "Don't alert on StackRox namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "stackrox",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on kube-system namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "kube-system",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-sdn namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-sdn",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-kube-apiserver namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-kube-apiserver",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-etcd namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-etcd",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-apiserver namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-apiserver",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-dns namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-dns",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-cluster-node-tuning-operator namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-cluster-node-tuning-operator",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-cluster-csi-drivers namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-cluster-csi-drivers",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          },
          {
            "name": "Don't alert on openshift-machine-config-operator namespace",
            "deployment": {
              "name": "",
              "scope": {
                "cluster": "",
                "namespace": "openshift-machine-config-operator",
                "label": null
              }
            },
            "image": null,
            "expiration": null
          }
        ],
        "scope": [],
        "severity": "LOW_SEVERITY",
        "enforcementActions": [],
        "notifiers": [],
        "lastUpdated": null,
        "SORTName": "Docker CIS 4.1: Ensure That a User for the Container Has Been Created",
        "SORTLifecycleStage": "BUILD,DEPLOY",
        "SORTEnforcement": false,
        "policyVersion": "1.1",
        "policySections": [
          {
            "sectionName": "",
            "policyGroups": [
              {
                "fieldName": "Image User",
                "booleanOperator": "OR",
                "negate": false,
                "values": [
                  {
                    "value": "0"
                  },
                  {
                    "value": "root"
                  }
                ]
              }
            ]
          }
        ],
        "mitreAttackVectors": [],
        "criteriaLocked": true,
        "mitreVectorsLocked": true
      },
      "lifecycleStage": "BUILD",
      "image": {
        "id": "",
        "name": {
          "registry": "docker.io",
          "remote": "library/nginx",
          "tag": "latest",
          "fullName": "docker.io/library/nginx:latest"
        },
        "notPullable": false
      },
      "violations": [
        {
          "message": "Image has user 'root'",
          "type": "GENERIC",
          "time": null
        }
      ],
      "processViolation": null,
      "enforcement": null,
      "time": "2021-10-13T09:32:37.118445712Z",
      "firstOccurred": null,
      "resolvedAt": null,
      "state": "ACTIVE",
      "snoozeTill": null,
      "tags": []
    },
    {
      "id": "c2df6df5-7a7c-49f8-a178-799411b8b39a",
      "policy": {
        "id": "74cfb824-2e65-46b7-b1b4-ba897e53af1f",
        "name": "Ubuntu Package Manager in Image",
        "description": "Alert on deployments with components of the Debian/Ubuntu package management system in the image.",
        "rationale": "Package managers make it easier for attackers to use compromised containers, since they can easily add software.",
        "remediation": "Run `dpkg -r --force-all apt apt-get \u0026\u0026 dpkg -r --force-all debconf dpkg` in the image build for production containers.",
        "disabled": false,
        "categories": [
          "Security Best Practices"
        ],
        "fields": null,
        "lifecycleStages": [
          "BUILD",
          "DEPLOY"
        ],
        "eventSource": "NOT_APPLICABLE",
        "whitelists": [],
        "exclusions": [],
        "scope": [],
        "severity": "LOW_SEVERITY",
        "enforcementActions": [],
        "notifiers": [],
        "lastUpdated": null,
        "SORTName": "Ubuntu Package Manager in Image",
        "SORTLifecycleStage": "BUILD,DEPLOY",
        "SORTEnforcement": false,
        "policyVersion": "1.1",
        "policySections": [
          {
            "sectionName": "",
            "policyGroups": [
              {
                "fieldName": "Image Component",
                "booleanOperator": "OR",
                "negate": false,
                "values": [
                  {
                    "value": "apt|dpkg="
                  }
                ]
              }
            ]
          }
        ],
        "mitreAttackVectors": [],
        "criteriaLocked": true,
        "mitreVectorsLocked": true
      },
      "lifecycleStage": "BUILD",
      "image": {
        "id": "",
        "name": {
          "registry": "docker.io",
          "remote": "library/nginx",
          "tag": "latest",
          "fullName": "docker.io/library/nginx:latest"
        },
        "notPullable": false
      },
      "violations": [
        {
          "message": "Image includes component 'apt' (version 1.8.2.3)",
          "type": "GENERIC",
          "time": null
        },
        {
          "message": "Image includes component 'dpkg' (version 1.19.7)",
          "type": "GENERIC",
          "time": null
        }
      ],
      "processViolation": null,
      "enforcement": null,
      "time": "2021-10-13T09:32:37.118595587Z",
      "firstOccurred": null,
      "resolvedAt": null,
      "state": "ACTIVE",
      "snoozeTill": null,
      "tags": []
    }
  ]
}
